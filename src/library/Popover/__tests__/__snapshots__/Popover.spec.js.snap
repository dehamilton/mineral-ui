// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Popover demo examples Snapshots: basic 1`] = `
.emotion-4 {
  display: inline-block;
}

.emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

<Popover
  content={<DemoContent />}
  focusTriggerOnClose={true}
  hasArrow={true}
  placement="bottom"
>
  <Manager>
    <Styled(span)
      content={<DemoContent />}
      focusTriggerOnClose={true}
      hasArrow={true}
      placement="bottom"
    >
      <span
        className="emotion-4"
        content={<DemoContent />}
      >
        <PopoverTrigger
          aria-describedby="popover-1-content"
          aria-expanded={false}
          aria-owns="popover-1-content"
          onBlur={[Function]}
          onClick={[Function]}
          role="button"
          size="large"
        >
          <Reference>
            <InnerReference
              getReferenceRef={[Function]}
            >
              <Styled(span)>
                <span
                  className="emotion-3"
                >
                  <WithForwardRef(Button)
                    aria-describedby="popover-1-content"
                    aria-expanded={false}
                    aria-owns="popover-1-content"
                    onBlur={[Function]}
                    onClick={[Function]}
                    role="button"
                    size="large"
                  >
                    <Button
                      aria-describedby="popover-1-content"
                      aria-expanded={false}
                      aria-owns="popover-1-content"
                      forwardedRef={null}
                      onBlur={[Function]}
                      onClick={[Function]}
                      role="button"
                      size="large"
                    >
                      <Styled(button)
                        aria-describedby="popover-1-content"
                        aria-expanded={false}
                        aria-owns="popover-1-content"
                        onBlur={[Function]}
                        onClick={[Function]}
                        role="button"
                        size="large"
                        text="Open Popover"
                      >
                        <button
                          aria-describedby="popover-1-content"
                          aria-expanded={false}
                          aria-owns="popover-1-content"
                          className="emotion-2"
                          onBlur={[Function]}
                          onClick={[Function]}
                          role="button"
                          size="large"
                        >
                          <Styled(span)>
                            <span
                              className="emotion-1"
                            >
                              <Styled(span)
                                size="large"
                              >
                                <span
                                  className="emotion-0"
                                  size="large"
                                >
                                  Open Popover
                                </span>
                              </Styled(span)>
                            </span>
                          </Styled(span)>
                        </button>
                      </Styled(button)>
                    </Button>
                  </WithForwardRef(Button)>
                </span>
              </Styled(span)>
            </InnerReference>
          </Reference>
        </PopoverTrigger>
      </span>
    </Styled(span)>
  </Manager>
</Popover>
`;

exports[`Popover demo examples Snapshots: controlled 1`] = `
.emotion-4 {
  display: inline-block;
}

.emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

<App>
  <Styled(div)>
    <div
      className="emotion-8"
    >
      <Popover
        content={<DemoContent />}
        focusTriggerOnClose={true}
        hasArrow={true}
        isOpen={false}
        onClose={[Function]}
        onOpen={[Function]}
        placement="bottom"
      >
        <Manager>
          <Styled(span)
            content={<DemoContent />}
            focusTriggerOnClose={true}
            hasArrow={true}
            isOpen={false}
            onClose={[Function]}
            onOpen={[Function]}
            placement="bottom"
          >
            <span
              className="emotion-4"
              content={<DemoContent />}
              onClose={[Function]}
              onOpen={[Function]}
            >
              <PopoverTrigger
                aria-describedby="popover-9-content"
                aria-expanded={false}
                aria-owns="popover-9-content"
                onBlur={[Function]}
                onClick={[Function]}
                role="button"
                size="large"
              >
                <Reference>
                  <InnerReference
                    getReferenceRef={[Function]}
                  >
                    <Styled(span)>
                      <span
                        className="emotion-3"
                      >
                        <WithForwardRef(Button)
                          aria-describedby="popover-9-content"
                          aria-expanded={false}
                          aria-owns="popover-9-content"
                          onBlur={[Function]}
                          onClick={[Function]}
                          role="button"
                          size="large"
                        >
                          <Button
                            aria-describedby="popover-9-content"
                            aria-expanded={false}
                            aria-owns="popover-9-content"
                            forwardedRef={null}
                            onBlur={[Function]}
                            onClick={[Function]}
                            role="button"
                            size="large"
                          >
                            <Styled(button)
                              aria-describedby="popover-9-content"
                              aria-expanded={false}
                              aria-owns="popover-9-content"
                              onBlur={[Function]}
                              onClick={[Function]}
                              role="button"
                              size="large"
                              text="Open Popover"
                            >
                              <button
                                aria-describedby="popover-9-content"
                                aria-expanded={false}
                                aria-owns="popover-9-content"
                                className="emotion-2"
                                onBlur={[Function]}
                                onClick={[Function]}
                                role="button"
                                size="large"
                              >
                                <Styled(span)>
                                  <span
                                    className="emotion-1"
                                  >
                                    <Styled(span)
                                      size="large"
                                    >
                                      <span
                                        className="emotion-0"
                                        size="large"
                                      >
                                        Open Popover
                                      </span>
                                    </Styled(span)>
                                  </span>
                                </Styled(span)>
                              </button>
                            </Styled(button)>
                          </Button>
                        </WithForwardRef(Button)>
                      </span>
                    </Styled(span)>
                  </InnerReference>
                </Reference>
              </PopoverTrigger>
            </span>
          </Styled(span)>
        </Manager>
      </Popover>
      <WithForwardRef(Button)
        onClick={[Function]}
        size="large"
      >
        <Button
          forwardedRef={null}
          onClick={[Function]}
          size="large"
        >
          <Styled(button)
            onClick={[Function]}
            size="large"
            text="Open Popover"
          >
            <button
              className="emotion-2"
              onClick={[Function]}
              size="large"
            >
              <Styled(span)>
                <span
                  className="emotion-1"
                >
                  <Styled(span)
                    size="large"
                  >
                    <span
                      className="emotion-0"
                      size="large"
                    >
                      Open Popover
                    </span>
                  </Styled(span)>
                </span>
              </Styled(span)>
            </button>
          </Styled(button)>
        </Button>
      </WithForwardRef(Button)>
    </div>
  </Styled(div)>
</App>
`;

exports[`Popover demo examples Snapshots: custom-content 1`] = `
.emotion-4 {
  display: inline-block;
}

.emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

<Component>
  <Popover
    content={[Function]}
    focusTriggerOnClose={true}
    hasArrow={true}
    placement="bottom"
  >
    <Manager>
      <Styled(span)
        content={[Function]}
        focusTriggerOnClose={true}
        hasArrow={true}
        placement="bottom"
      >
        <span
          className="emotion-4"
          content={[Function]}
        >
          <PopoverTrigger
            aria-describedby="popover-11-content"
            aria-expanded={false}
            aria-owns="popover-11-content"
            onBlur={[Function]}
            onClick={[Function]}
            role="button"
            size="large"
          >
            <Reference>
              <InnerReference
                getReferenceRef={[Function]}
              >
                <Styled(span)>
                  <span
                    className="emotion-3"
                  >
                    <WithForwardRef(Button)
                      aria-describedby="popover-11-content"
                      aria-expanded={false}
                      aria-owns="popover-11-content"
                      onBlur={[Function]}
                      onClick={[Function]}
                      role="button"
                      size="large"
                    >
                      <Button
                        aria-describedby="popover-11-content"
                        aria-expanded={false}
                        aria-owns="popover-11-content"
                        forwardedRef={null}
                        onBlur={[Function]}
                        onClick={[Function]}
                        role="button"
                        size="large"
                      >
                        <Styled(button)
                          aria-describedby="popover-11-content"
                          aria-expanded={false}
                          aria-owns="popover-11-content"
                          onBlur={[Function]}
                          onClick={[Function]}
                          role="button"
                          size="large"
                          text="Open Popover"
                        >
                          <button
                            aria-describedby="popover-11-content"
                            aria-expanded={false}
                            aria-owns="popover-11-content"
                            className="emotion-2"
                            onBlur={[Function]}
                            onClick={[Function]}
                            role="button"
                            size="large"
                          >
                            <Styled(span)>
                              <span
                                className="emotion-1"
                              >
                                <Styled(span)
                                  size="large"
                                >
                                  <span
                                    className="emotion-0"
                                    size="large"
                                  >
                                    Open Popover
                                  </span>
                                </Styled(span)>
                              </span>
                            </Styled(span)>
                          </button>
                        </Styled(button)>
                      </Button>
                    </WithForwardRef(Button)>
                  </span>
                </Styled(span)>
              </InnerReference>
            </Reference>
          </PopoverTrigger>
        </span>
      </Styled(span)>
    </Manager>
  </Popover>
</Component>
`;

exports[`Popover demo examples Snapshots: custom-trigger 1`] = `
.emotion-1 {
  display: inline-block;
}

<Component>
  <Popover
    content={<DemoContent />}
    focusTriggerOnClose={true}
    hasArrow={true}
    placement="bottom"
  >
    <Manager>
      <Styled(span)
        content={<DemoContent />}
        focusTriggerOnClose={true}
        hasArrow={true}
        placement="bottom"
      >
        <span
          className="emotion-1"
          content={<DemoContent />}
        >
          <Reference>
            <InnerReference
              getReferenceRef={[Function]}
            >
              <Styled(button)
                aria-describedby="popover-12-content"
                aria-expanded={false}
                aria-owns="popover-12-content"
                onBlur={[Function]}
                onClick={[Function]}
              >
                <button
                  aria-describedby="popover-12-content"
                  aria-expanded={false}
                  aria-owns="popover-12-content"
                  className="emotion-0"
                  onBlur={[Function]}
                  onClick={[Function]}
                >
                  Popover 
                  <span
                    aria-hidden="true"
                    role="img"
                  >
                    ▼
                  </span>
                </button>
              </Styled(button)>
            </InnerReference>
          </Reference>
        </span>
      </Styled(span)>
    </Manager>
  </Popover>
</Component>
`;

exports[`Popover demo examples Snapshots: disabled 1`] = `
.emotion-4 {
  display: inline-block;
}

.emotion-3 {
  display: inline-block;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-2 {
  box-sizing: border-box;
  color: #afbacc;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ebeff5;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: default;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:hover {
  color: #afbacc;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  color: #afbacc;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

<Popover
  content={<DemoContent />}
  disabled={true}
  focusTriggerOnClose={true}
  hasArrow={true}
  placement="bottom"
>
  <Manager>
    <Styled(span)
      content={<DemoContent />}
      disabled={true}
      focusTriggerOnClose={true}
      hasArrow={true}
      placement="bottom"
    >
      <span
        className="emotion-4"
        content={<DemoContent />}
        disabled={true}
      >
        <PopoverTrigger
          aria-describedby="popover-8-content"
          aria-disabled={true}
          aria-expanded={false}
          aria-owns="popover-8-content"
          disabled={true}
          onBlur={[Function]}
          role="button"
          size="large"
        >
          <Reference>
            <InnerReference
              getReferenceRef={[Function]}
            >
              <Styled(span)>
                <span
                  className="emotion-3"
                >
                  <WithForwardRef(Button)
                    aria-describedby="popover-8-content"
                    aria-disabled={true}
                    aria-expanded={false}
                    aria-owns="popover-8-content"
                    disabled={true}
                    onBlur={[Function]}
                    role="button"
                    size="large"
                  >
                    <Button
                      aria-describedby="popover-8-content"
                      aria-disabled={true}
                      aria-expanded={false}
                      aria-owns="popover-8-content"
                      disabled={true}
                      forwardedRef={null}
                      onBlur={[Function]}
                      role="button"
                      size="large"
                    >
                      <Styled(button)
                        aria-describedby="popover-8-content"
                        aria-disabled={true}
                        aria-expanded={false}
                        aria-owns="popover-8-content"
                        disabled={true}
                        onBlur={[Function]}
                        role="button"
                        size="large"
                        tabIndex={-1}
                        text="Open Popover"
                      >
                        <button
                          aria-describedby="popover-8-content"
                          aria-disabled={true}
                          aria-expanded={false}
                          aria-owns="popover-8-content"
                          className="emotion-2"
                          disabled={true}
                          onBlur={[Function]}
                          role="button"
                          size="large"
                          tabIndex={-1}
                        >
                          <Styled(span)>
                            <span
                              className="emotion-1"
                            >
                              <Styled(span)
                                size="large"
                              >
                                <span
                                  className="emotion-0"
                                  size="large"
                                >
                                  Open Popover
                                </span>
                              </Styled(span)>
                            </span>
                          </Styled(span)>
                        </button>
                      </Styled(button)>
                    </Button>
                  </WithForwardRef(Button)>
                </span>
              </Styled(span)>
            </InnerReference>
          </Reference>
        </PopoverTrigger>
      </span>
    </Styled(span)>
  </Manager>
</Popover>
`;

exports[`Popover demo examples Snapshots: on-open-close 1`] = `
.emotion-4 {
  display: inline-block;
}

.emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

<Component>
  <Popover
    content={<DemoContent />}
    focusTriggerOnClose={true}
    hasArrow={true}
    onClose={[Function]}
    onOpen={[Function]}
    placement="bottom"
  >
    <Manager>
      <Styled(span)
        content={<DemoContent />}
        focusTriggerOnClose={true}
        hasArrow={true}
        onClose={[Function]}
        onOpen={[Function]}
        placement="bottom"
      >
        <span
          className="emotion-4"
          content={<DemoContent />}
          onClose={[Function]}
          onOpen={[Function]}
        >
          <PopoverTrigger
            aria-describedby="popover-7-content"
            aria-expanded={false}
            aria-owns="popover-7-content"
            onBlur={[Function]}
            onClick={[Function]}
            role="button"
            size="large"
          >
            <Reference>
              <InnerReference
                getReferenceRef={[Function]}
              >
                <Styled(span)>
                  <span
                    className="emotion-3"
                  >
                    <WithForwardRef(Button)
                      aria-describedby="popover-7-content"
                      aria-expanded={false}
                      aria-owns="popover-7-content"
                      onBlur={[Function]}
                      onClick={[Function]}
                      role="button"
                      size="large"
                    >
                      <Button
                        aria-describedby="popover-7-content"
                        aria-expanded={false}
                        aria-owns="popover-7-content"
                        forwardedRef={null}
                        onBlur={[Function]}
                        onClick={[Function]}
                        role="button"
                        size="large"
                      >
                        <Styled(button)
                          aria-describedby="popover-7-content"
                          aria-expanded={false}
                          aria-owns="popover-7-content"
                          onBlur={[Function]}
                          onClick={[Function]}
                          role="button"
                          size="large"
                          text="Open Popover"
                        >
                          <button
                            aria-describedby="popover-7-content"
                            aria-expanded={false}
                            aria-owns="popover-7-content"
                            className="emotion-2"
                            onBlur={[Function]}
                            onClick={[Function]}
                            role="button"
                            size="large"
                          >
                            <Styled(span)>
                              <span
                                className="emotion-1"
                              >
                                <Styled(span)
                                  size="large"
                                >
                                  <span
                                    className="emotion-0"
                                    size="large"
                                  >
                                    Open Popover
                                  </span>
                                </Styled(span)>
                              </span>
                            </Styled(span)>
                          </button>
                        </Styled(button)>
                      </Button>
                    </WithForwardRef(Button)>
                  </span>
                </Styled(span)>
              </InnerReference>
            </Reference>
          </PopoverTrigger>
        </span>
      </Styled(span)>
    </Manager>
  </Popover>
</Component>
`;

exports[`Popover demo examples Snapshots: overflow 1`] = `
.emotion-9 {
  display: inline-block;
}

.emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-8 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2),0 4px 8px 0 rgba(0,0,0,0.2);
  padding: 0.5em 0;
  max-width: none;
  z-index: 100;
}

.emotion-8 *,
.emotion-8 *::before,
.emotion-8 *::after {
  box-sizing: inherit;
}

.emotion-8[data-placement^="top"] {
  margin-bottom: 8px;
}

.emotion-8[data-placement^="bottom"] {
  margin-top: 8px;
}

.emotion-8[data-placement^="left"] {
  margin-right: 8px;
}

.emotion-8[data-placement^="right"] {
  margin-left: 8px;
}

.emotion-8[data-x-out-of-boundaries] {
  visibility: hidden;
}

.emotion-6 {
  margin-bottom: 0.5em;
  margin-top: 0.5em;
  padding-left: 1em;
  padding-right: 1em;
}

.emotion-6:last-child {
  margin-bottom: 0.5em;
}

.emotion-5 {
  font-size: 0.875em;
  line-height: 1.5;
}

.emotion-4 {
  width: 13.75em;
}

.emotion-7 {
  color: #ffffff;
  display: none;
  font-size: 8px;
  margin: 8px;
  position: absolute;
  text-shadow: 0 2px 0 #ebeff5,0 3px 1px rgba(0,0,0,0.3);
  -webkit-transform: rotate(0deg) scaleX(2);
  -ms-transform: rotate(0deg) scaleX(2);
  transform: rotate(0deg) scaleX(2);
}

.emotion-10 {
  background-color: aliceblue;
  overflow: hidden;
  padding: 25px;
}

<Styled(div)>
  <div
    className="emotion-10"
  >
    <Popover
      content={<DemoContent />}
      focusTriggerOnClose={true}
      hasArrow={true}
      isOpen={true}
      placement="right"
    >
      <Manager>
        <Styled(span)
          content={<DemoContent />}
          focusTriggerOnClose={true}
          hasArrow={true}
          isOpen={true}
          placement="right"
        >
          <span
            className="emotion-9"
            content={<DemoContent />}
          >
            <PopoverTrigger
              aria-describedby="popover-4-content"
              aria-expanded={true}
              aria-owns="popover-4-content"
              onBlur={[Function]}
              onClick={[Function]}
              role="button"
              size="large"
            >
              <Reference>
                <InnerReference
                  getReferenceRef={[Function]}
                >
                  <Styled(span)>
                    <span
                      className="emotion-3"
                    >
                      <WithForwardRef(Button)
                        aria-describedby="popover-4-content"
                        aria-expanded={true}
                        aria-owns="popover-4-content"
                        onBlur={[Function]}
                        onClick={[Function]}
                        role="button"
                        size="large"
                      >
                        <Button
                          aria-describedby="popover-4-content"
                          aria-expanded={true}
                          aria-owns="popover-4-content"
                          forwardedRef={null}
                          onBlur={[Function]}
                          onClick={[Function]}
                          role="button"
                          size="large"
                        >
                          <Styled(button)
                            aria-describedby="popover-4-content"
                            aria-expanded={true}
                            aria-owns="popover-4-content"
                            onBlur={[Function]}
                            onClick={[Function]}
                            role="button"
                            size="large"
                            text="Open Popover"
                          >
                            <button
                              aria-describedby="popover-4-content"
                              aria-expanded={true}
                              aria-owns="popover-4-content"
                              className="emotion-2"
                              onBlur={[Function]}
                              onClick={[Function]}
                              role="button"
                              size="large"
                            >
                              <Styled(span)>
                                <span
                                  className="emotion-1"
                                >
                                  <Styled(span)
                                    size="large"
                                  >
                                    <span
                                      className="emotion-0"
                                      size="large"
                                    >
                                      Open Popover
                                    </span>
                                  </Styled(span)>
                                </span>
                              </Styled(span)>
                            </button>
                          </Styled(button)>
                        </Button>
                      </WithForwardRef(Button)>
                    </span>
                  </Styled(span)>
                </InnerReference>
              </Reference>
            </PopoverTrigger>
            <PopoverContent
              hasArrow={true}
              id="popover-4-content"
              onBlur={[Function]}
              placement="right"
              tabIndex={0}
            >
              <WithTheme(RtlPopper)
                placement="right"
              >
                <RtlPopper
                  placement="right"
                >
                  <Popper
                    placement="right"
                  >
                    <InnerPopper
                      eventsEnabled={true}
                      placement="right"
                      positionFixed={false}
                      referenceElement={
                        .emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

<span
                          class="emotion-3"
                        >
                          <button
                            aria-describedby="popover-4-content"
                            aria-expanded="true"
                            aria-owns="popover-4-content"
                            class="emotion-2"
                            role="button"
                          >
                            <span
                              class="emotion-1"
                            >
                              <span
                                class="emotion-0"
                              >
                                Open Popover
                              </span>
                            </span>
                          </button>
                        </span>
                      }
                    >
                      <Styled(div)
                        id="popover-4-content"
                        onBlur={[Function]}
                        style={
                          Object {
                            "left": 0,
                            "opacity": 0,
                            "pointerEvents": "none",
                            "position": "absolute",
                            "top": 0,
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          className="emotion-8"
                          id="popover-4-content"
                          onBlur={[Function]}
                          style={
                            Object {
                              "left": 0,
                              "opacity": 0,
                              "pointerEvents": "none",
                              "position": "absolute",
                              "top": 0,
                            }
                          }
                          tabIndex={0}
                        >
                          <WithTheme(Themed(CardBlock))>
                            <Themed(CardBlock)>
                              <ThemeProvider>
                                <ThemeProvider>
                                  <CardBlock>
                                    <Styled(div)>
                                      <div
                                        className="emotion-6"
                                      >
                                        <Styled(div)>
                                          <div
                                            className="emotion-5"
                                          >
                                            <DemoContent>
                                              <Styled(div)>
                                                <div
                                                  className="emotion-4"
                                                >
                                                  Light years star stuff harvesting star light citizens of distant epochs encyclopaedia galactica.
                                                </div>
                                              </Styled(div)>
                                            </DemoContent>
                                          </div>
                                        </Styled(div)>
                                      </div>
                                    </Styled(div)>
                                  </CardBlock>
                                </ThemeProvider>
                              </ThemeProvider>
                            </Themed(CardBlock)>
                          </WithTheme(Themed(CardBlock))>
                          <PopoverArrow
                            size="8px"
                            style={Object {}}
                          >
                            <Styled(span)
                              aria-hidden={true}
                              size="8px"
                              style={Object {}}
                            >
                              <span
                                aria-hidden={true}
                                className="emotion-7"
                                size="8px"
                                style={Object {}}
                              >
                                ▼
                              </span>
                            </Styled(span)>
                          </PopoverArrow>
                        </div>
                      </Styled(div)>
                    </InnerPopper>
                  </Popper>
                </RtlPopper>
              </WithTheme(RtlPopper)>
            </PopoverContent>
            <EventListener
              listeners={
                Array [
                  Object {
                    "event": "click",
                    "handler": [Function],
                    "options": true,
                    "target": "document",
                  },
                  Object {
                    "event": "keydown",
                    "handler": [Function],
                    "options": true,
                    "target": "document",
                  },
                ]
              }
            />
          </span>
        </Styled(span)>
      </Manager>
    </Popover>
  </div>
</Styled(div)>
`;

exports[`Popover demo examples Snapshots: placement 1`] = `
.emotion-9 {
  display: inline-block;
}

.emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-8 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2),0 4px 8px 0 rgba(0,0,0,0.2);
  padding: 0.5em 0;
  max-width: none;
  z-index: 100;
}

.emotion-8 *,
.emotion-8 *::before,
.emotion-8 *::after {
  box-sizing: inherit;
}

.emotion-8[data-placement^="top"] {
  margin-bottom: 8px;
}

.emotion-8[data-placement^="bottom"] {
  margin-top: 8px;
}

.emotion-8[data-placement^="left"] {
  margin-right: 8px;
}

.emotion-8[data-placement^="right"] {
  margin-left: 8px;
}

.emotion-8[data-x-out-of-boundaries] {
  visibility: hidden;
}

.emotion-6 {
  margin-bottom: 0.5em;
  margin-top: 0.5em;
  padding-left: 1em;
  padding-right: 1em;
}

.emotion-6:last-child {
  margin-bottom: 0.5em;
}

.emotion-5 {
  font-size: 0.875em;
  line-height: 1.5;
}

.emotion-4 {
  width: 13.75em;
}

.emotion-7 {
  color: #ffffff;
  display: none;
  font-size: 8px;
  margin: 8px;
  position: absolute;
  text-shadow: 0 2px 0 #ebeff5,0 3px 1px rgba(0,0,0,0.3);
  -webkit-transform: rotate(0deg) scaleX(2);
  -ms-transform: rotate(0deg) scaleX(2);
  transform: rotate(0deg) scaleX(2);
}

.emotion-10 {
  height: 350px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

<Styled(div)>
  <div
    className="emotion-10"
  >
    <Popover
      content={<DemoContent />}
      focusTriggerOnClose={true}
      hasArrow={true}
      isOpen={true}
      placement="bottom"
    >
      <Manager>
        <Styled(span)
          content={<DemoContent />}
          focusTriggerOnClose={true}
          hasArrow={true}
          isOpen={true}
          placement="bottom"
        >
          <span
            className="emotion-9"
            content={<DemoContent />}
          >
            <PopoverTrigger
              aria-describedby="popover-3-content"
              aria-expanded={true}
              aria-owns="popover-3-content"
              onBlur={[Function]}
              onClick={[Function]}
              role="button"
              size="large"
            >
              <Reference>
                <InnerReference
                  getReferenceRef={[Function]}
                >
                  <Styled(span)>
                    <span
                      className="emotion-3"
                    >
                      <WithForwardRef(Button)
                        aria-describedby="popover-3-content"
                        aria-expanded={true}
                        aria-owns="popover-3-content"
                        onBlur={[Function]}
                        onClick={[Function]}
                        role="button"
                        size="large"
                      >
                        <Button
                          aria-describedby="popover-3-content"
                          aria-expanded={true}
                          aria-owns="popover-3-content"
                          forwardedRef={null}
                          onBlur={[Function]}
                          onClick={[Function]}
                          role="button"
                          size="large"
                        >
                          <Styled(button)
                            aria-describedby="popover-3-content"
                            aria-expanded={true}
                            aria-owns="popover-3-content"
                            onBlur={[Function]}
                            onClick={[Function]}
                            role="button"
                            size="large"
                            text="Open Popover"
                          >
                            <button
                              aria-describedby="popover-3-content"
                              aria-expanded={true}
                              aria-owns="popover-3-content"
                              className="emotion-2"
                              onBlur={[Function]}
                              onClick={[Function]}
                              role="button"
                              size="large"
                            >
                              <Styled(span)>
                                <span
                                  className="emotion-1"
                                >
                                  <Styled(span)
                                    size="large"
                                  >
                                    <span
                                      className="emotion-0"
                                      size="large"
                                    >
                                      Open Popover
                                    </span>
                                  </Styled(span)>
                                </span>
                              </Styled(span)>
                            </button>
                          </Styled(button)>
                        </Button>
                      </WithForwardRef(Button)>
                    </span>
                  </Styled(span)>
                </InnerReference>
              </Reference>
            </PopoverTrigger>
            <PopoverContent
              hasArrow={true}
              id="popover-3-content"
              onBlur={[Function]}
              placement="bottom"
              tabIndex={0}
            >
              <WithTheme(RtlPopper)
                placement="bottom"
              >
                <RtlPopper
                  placement="bottom"
                >
                  <Popper
                    placement="bottom"
                  >
                    <InnerPopper
                      eventsEnabled={true}
                      placement="bottom"
                      positionFixed={false}
                      referenceElement={
                        .emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

<span
                          class="emotion-3"
                        >
                          <button
                            aria-describedby="popover-3-content"
                            aria-expanded="true"
                            aria-owns="popover-3-content"
                            class="emotion-2"
                            role="button"
                          >
                            <span
                              class="emotion-1"
                            >
                              <span
                                class="emotion-0"
                              >
                                Open Popover
                              </span>
                            </span>
                          </button>
                        </span>
                      }
                    >
                      <Styled(div)
                        id="popover-3-content"
                        onBlur={[Function]}
                        style={
                          Object {
                            "left": 0,
                            "opacity": 0,
                            "pointerEvents": "none",
                            "position": "absolute",
                            "top": 0,
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          className="emotion-8"
                          id="popover-3-content"
                          onBlur={[Function]}
                          style={
                            Object {
                              "left": 0,
                              "opacity": 0,
                              "pointerEvents": "none",
                              "position": "absolute",
                              "top": 0,
                            }
                          }
                          tabIndex={0}
                        >
                          <WithTheme(Themed(CardBlock))>
                            <Themed(CardBlock)>
                              <ThemeProvider>
                                <ThemeProvider>
                                  <CardBlock>
                                    <Styled(div)>
                                      <div
                                        className="emotion-6"
                                      >
                                        <Styled(div)>
                                          <div
                                            className="emotion-5"
                                          >
                                            <DemoContent>
                                              <Styled(div)>
                                                <div
                                                  className="emotion-4"
                                                >
                                                  Light years star stuff harvesting star light citizens of distant epochs encyclopaedia galactica.
                                                </div>
                                              </Styled(div)>
                                            </DemoContent>
                                          </div>
                                        </Styled(div)>
                                      </div>
                                    </Styled(div)>
                                  </CardBlock>
                                </ThemeProvider>
                              </ThemeProvider>
                            </Themed(CardBlock)>
                          </WithTheme(Themed(CardBlock))>
                          <PopoverArrow
                            size="8px"
                            style={Object {}}
                          >
                            <Styled(span)
                              aria-hidden={true}
                              size="8px"
                              style={Object {}}
                            >
                              <span
                                aria-hidden={true}
                                className="emotion-7"
                                size="8px"
                                style={Object {}}
                              >
                                ▼
                              </span>
                            </Styled(span)>
                          </PopoverArrow>
                        </div>
                      </Styled(div)>
                    </InnerPopper>
                  </Popper>
                </RtlPopper>
              </WithTheme(RtlPopper)>
            </PopoverContent>
            <EventListener
              listeners={
                Array [
                  Object {
                    "event": "click",
                    "handler": [Function],
                    "options": true,
                    "target": "document",
                  },
                  Object {
                    "event": "keydown",
                    "handler": [Function],
                    "options": true,
                    "target": "document",
                  },
                ]
              }
            />
          </span>
        </Styled(span)>
      </Manager>
    </Popover>
  </div>
</Styled(div)>
`;

exports[`Popover demo examples Snapshots: portal 1`] = `
.emotion-9 {
  display: inline-block;
}

.emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-8 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2),0 4px 8px 0 rgba(0,0,0,0.2);
  padding: 0.5em 0;
  max-width: none;
  z-index: 100;
}

.emotion-8 *,
.emotion-8 *::before,
.emotion-8 *::after {
  box-sizing: inherit;
}

.emotion-8[data-placement^="top"] {
  margin-bottom: 8px;
}

.emotion-8[data-placement^="bottom"] {
  margin-top: 8px;
}

.emotion-8[data-placement^="left"] {
  margin-right: 8px;
}

.emotion-8[data-placement^="right"] {
  margin-left: 8px;
}

.emotion-8[data-x-out-of-boundaries] {
  visibility: hidden;
}

.emotion-6 {
  margin-bottom: 0.5em;
  margin-top: 0.5em;
  padding-left: 1em;
  padding-right: 1em;
}

.emotion-6:last-child {
  margin-bottom: 0.5em;
}

.emotion-5 {
  font-size: 0.875em;
  line-height: 1.5;
}

.emotion-4 {
  width: 13.75em;
}

.emotion-7 {
  color: #ffffff;
  display: none;
  font-size: 8px;
  margin: 8px;
  position: absolute;
  text-shadow: 0 2px 0 #ebeff5,0 3px 1px rgba(0,0,0,0.3);
  -webkit-transform: rotate(0deg) scaleX(2);
  -ms-transform: rotate(0deg) scaleX(2);
  transform: rotate(0deg) scaleX(2);
}

.emotion-18 {
  position: relative;
}

.emotion-11 {
  background-color: aliceblue;
  height: 360px;
  overflow: auto;
  position: relative;
}

.emotion-10 {
  height: 860px;
  width: 300vw;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.emotion-15 {
  left: 0;
  position: absolute;
  top: 0;
}

.emotion-14 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 1.5em;
  margin: 0;
  min-width: 1.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
  left: 0;
  position: absolute;
  top: 0;
}

.emotion-14 *,
.emotion-14 *::before,
.emotion-14 *::after {
  box-sizing: inherit;
}

.emotion-14:focus {
  border-color: #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-14:hover {
  background-color: #f5f7fa;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-14:focus:active,
.emotion-14:focus:hover {
  border-color: #1d5bbf;
}

.emotion-14:active {
  background-color: #ebeff5;
  color: #3272d9;
}

.emotion-14::-moz-focus-inner {
  border: 0;
}

.emotion-14 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-14 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-14 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-14 [role="img"]:only-child {
  margin: 0;
}

.emotion-12 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.75em;
  line-height: 2em;
}

<ScrollBox
  autoCenter={true}
  height={360}
>
  <Styled(div)>
    <div
      className="emotion-18"
    >
      <Styled(div)
        height={360}
      >
        <div
          className="emotion-11"
          height={360}
        >
          <Styled(div)
            scrollAreaHeight={360}
          >
            <div
              className="emotion-10"
            >
              <Popover
                content={<DemoContent />}
                focusTriggerOnClose={true}
                hasArrow={true}
                isOpen={true}
                modifiers={
                  Object {
                    "preventOverflow": Object {
                      "escapeWithReference": true,
                    },
                  }
                }
                placement="bottom"
                usePortal={true}
              >
                <Manager>
                  <Styled(span)
                    content={<DemoContent />}
                    focusTriggerOnClose={true}
                    hasArrow={true}
                    isOpen={true}
                    placement="bottom"
                    usePortal={true}
                  >
                    <span
                      className="emotion-9"
                      content={<DemoContent />}
                    >
                      <PopoverTrigger
                        aria-describedby="popover-6-content"
                        aria-expanded={true}
                        aria-owns="popover-6-content"
                        onBlur={[Function]}
                        onClick={[Function]}
                        role="button"
                        size="large"
                      >
                        <Reference>
                          <InnerReference
                            getReferenceRef={[Function]}
                          >
                            <Styled(span)>
                              <span
                                className="emotion-3"
                              >
                                <WithForwardRef(Button)
                                  aria-describedby="popover-6-content"
                                  aria-expanded={true}
                                  aria-owns="popover-6-content"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  role="button"
                                  size="large"
                                >
                                  <Button
                                    aria-describedby="popover-6-content"
                                    aria-expanded={true}
                                    aria-owns="popover-6-content"
                                    forwardedRef={null}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    role="button"
                                    size="large"
                                  >
                                    <Styled(button)
                                      aria-describedby="popover-6-content"
                                      aria-expanded={true}
                                      aria-owns="popover-6-content"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      role="button"
                                      size="large"
                                      text="Open Popover"
                                    >
                                      <button
                                        aria-describedby="popover-6-content"
                                        aria-expanded={true}
                                        aria-owns="popover-6-content"
                                        className="emotion-2"
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        role="button"
                                        size="large"
                                      >
                                        <Styled(span)>
                                          <span
                                            className="emotion-1"
                                          >
                                            <Styled(span)
                                              size="large"
                                            >
                                              <span
                                                className="emotion-0"
                                                size="large"
                                              >
                                                Open Popover
                                              </span>
                                            </Styled(span)>
                                          </span>
                                        </Styled(span)>
                                      </button>
                                    </Styled(button)>
                                  </Button>
                                </WithForwardRef(Button)>
                              </span>
                            </Styled(span)>
                          </InnerReference>
                        </Reference>
                      </PopoverTrigger>
                      <Portal>
                        <Portal
                          containerInfo={
                            .emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2),0 4px 8px 0 rgba(0,0,0,0.2);
  padding: 0.5em 0;
  max-width: none;
  z-index: 100;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4[data-placement^="top"] {
  margin-bottom: 8px;
}

.emotion-4[data-placement^="bottom"] {
  margin-top: 8px;
}

.emotion-4[data-placement^="left"] {
  margin-right: 8px;
}

.emotion-4[data-placement^="right"] {
  margin-left: 8px;
}

.emotion-4[data-x-out-of-boundaries] {
  visibility: hidden;
}

.emotion-2 {
  margin-bottom: 0.5em;
  margin-top: 0.5em;
  padding-left: 1em;
  padding-right: 1em;
}

.emotion-2:last-child {
  margin-bottom: 0.5em;
}

.emotion-1 {
  font-size: 0.875em;
  line-height: 1.5;
}

.emotion-0 {
  width: 13.75em;
}

.emotion-3 {
  color: #ffffff;
  display: none;
  font-size: 8px;
  margin: 8px;
  position: absolute;
  text-shadow: 0 2px 0 #ebeff5,0 3px 1px rgba(0,0,0,0.3);
  -webkit-transform: rotate(0deg) scaleX(2);
  -ms-transform: rotate(0deg) scaleX(2);
  transform: rotate(0deg) scaleX(2);
}

<div>
                              <div
                                class="emotion-4"
                                id="popover-6-content"
                                style="position: absolute; top: 0px; left: 0px; opacity: 0; pointer-events: none;"
                                tabindex="0"
                              >
                                <div
                                  class="emotion-2"
                                >
                                  <div
                                    class="emotion-1"
                                  >
                                    <div
                                      class="emotion-0"
                                    >
                                      Light years star stuff harvesting star light citizens of distant epochs encyclopaedia galactica.
                                    </div>
                                  </div>
                                </div>
                                <span
                                  aria-hidden="true"
                                  class="emotion-3"
                                >
                                  ▼
                                </span>
                              </div>
                            </div>
                          }
                        >
                          <PopoverContent
                            hasArrow={true}
                            id="popover-6-content"
                            modifiers={
                              Object {
                                "preventOverflow": Object {
                                  "escapeWithReference": true,
                                },
                              }
                            }
                            onBlur={[Function]}
                            placement="bottom"
                            tabIndex={0}
                          >
                            <WithTheme(RtlPopper)
                              modifiers={
                                Object {
                                  "preventOverflow": Object {
                                    "escapeWithReference": true,
                                  },
                                }
                              }
                              placement="bottom"
                            >
                              <RtlPopper
                                modifiers={
                                  Object {
                                    "preventOverflow": Object {
                                      "escapeWithReference": true,
                                    },
                                  }
                                }
                                placement="bottom"
                              >
                                <Popper
                                  modifiers={
                                    Object {
                                      "preventOverflow": Object {
                                        "escapeWithReference": true,
                                      },
                                    }
                                  }
                                  placement="bottom"
                                >
                                  <InnerPopper
                                    eventsEnabled={true}
                                    modifiers={
                                      Object {
                                        "preventOverflow": Object {
                                          "escapeWithReference": true,
                                        },
                                      }
                                    }
                                    placement="bottom"
                                    positionFixed={false}
                                    referenceElement={
                                      .emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

<span
                                        class="emotion-3"
                                      >
                                        <button
                                          aria-describedby="popover-6-content"
                                          aria-expanded="true"
                                          aria-owns="popover-6-content"
                                          class="emotion-2"
                                          role="button"
                                        >
                                          <span
                                            class="emotion-1"
                                          >
                                            <span
                                              class="emotion-0"
                                            >
                                              Open Popover
                                            </span>
                                          </span>
                                        </button>
                                      </span>
                                    }
                                  >
                                    <Styled(div)
                                      id="popover-6-content"
                                      onBlur={[Function]}
                                      style={
                                        Object {
                                          "left": 0,
                                          "opacity": 0,
                                          "pointerEvents": "none",
                                          "position": "absolute",
                                          "top": 0,
                                        }
                                      }
                                      tabIndex={0}
                                    >
                                      <div
                                        className="emotion-8"
                                        id="popover-6-content"
                                        onBlur={[Function]}
                                        style={
                                          Object {
                                            "left": 0,
                                            "opacity": 0,
                                            "pointerEvents": "none",
                                            "position": "absolute",
                                            "top": 0,
                                          }
                                        }
                                        tabIndex={0}
                                      >
                                        <WithTheme(Themed(CardBlock))>
                                          <Themed(CardBlock)>
                                            <ThemeProvider>
                                              <ThemeProvider>
                                                <CardBlock>
                                                  <Styled(div)>
                                                    <div
                                                      className="emotion-6"
                                                    >
                                                      <Styled(div)>
                                                        <div
                                                          className="emotion-5"
                                                        >
                                                          <DemoContent>
                                                            <Styled(div)>
                                                              <div
                                                                className="emotion-4"
                                                              >
                                                                Light years star stuff harvesting star light citizens of distant epochs encyclopaedia galactica.
                                                              </div>
                                                            </Styled(div)>
                                                          </DemoContent>
                                                        </div>
                                                      </Styled(div)>
                                                    </div>
                                                  </Styled(div)>
                                                </CardBlock>
                                              </ThemeProvider>
                                            </ThemeProvider>
                                          </Themed(CardBlock)>
                                        </WithTheme(Themed(CardBlock))>
                                        <PopoverArrow
                                          size="8px"
                                          style={Object {}}
                                        >
                                          <Styled(span)
                                            aria-hidden={true}
                                            size="8px"
                                            style={Object {}}
                                          >
                                            <span
                                              aria-hidden={true}
                                              className="emotion-7"
                                              size="8px"
                                              style={Object {}}
                                            >
                                              ▼
                                            </span>
                                          </Styled(span)>
                                        </PopoverArrow>
                                      </div>
                                    </Styled(div)>
                                  </InnerPopper>
                                </Popper>
                              </RtlPopper>
                            </WithTheme(RtlPopper)>
                          </PopoverContent>
                        </Portal>
                      </Portal>
                      <EventListener
                        listeners={
                          Array [
                            Object {
                              "event": "click",
                              "handler": [Function],
                              "options": true,
                              "target": "document",
                            },
                            Object {
                              "event": "keydown",
                              "handler": [Function],
                              "options": true,
                              "target": "document",
                            },
                          ]
                        }
                      />
                    </span>
                  </Styled(span)>
                </Manager>
              </Popover>
            </div>
          </Styled(div)>
        </div>
      </Styled(div)>
      <Styled(WithForwardRef(Button))
        minimal={true}
        onClick={[Function]}
        size="small"
      >
        <WithForwardRef(Button)
          className="emotion-15"
          minimal={true}
          onClick={[Function]}
          size="small"
        >
          <Button
            className="emotion-15"
            forwardedRef={null}
            minimal={true}
            onClick={[Function]}
            size="small"
          >
            <Styled(button)
              className="emotion-15"
              minimal={true}
              onClick={[Function]}
              size="small"
              text="Re-center"
            >
              <button
                className="emotion-14"
                onClick={[Function]}
                size="small"
              >
                <Styled(span)>
                  <span
                    className="emotion-1"
                  >
                    <Styled(span)
                      size="small"
                    >
                      <span
                        className="emotion-12"
                        size="small"
                      >
                        Re-center
                      </span>
                    </Styled(span)>
                  </span>
                </Styled(span)>
              </button>
            </Styled(button)>
          </Button>
        </WithForwardRef(Button)>
      </Styled(WithForwardRef(Button))>
    </div>
  </Styled(div)>
</ScrollBox>
`;

exports[`Popover demo examples Snapshots: rtl 1`] = `
.emotion-9 {
  display: inline-block;
}

.emotion-3 {
  display: inline-block;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-8 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2),0 4px 8px 0 rgba(0,0,0,0.2);
  padding: 0.5em 0;
  max-width: none;
  z-index: 100;
}

.emotion-8 *,
.emotion-8 *::before,
.emotion-8 *::after {
  box-sizing: inherit;
}

.emotion-8[data-placement^="top"] {
  margin-bottom: 8px;
}

.emotion-8[data-placement^="bottom"] {
  margin-top: 8px;
}

.emotion-8[data-placement^="left"] {
  margin-right: 8px;
}

.emotion-8[data-placement^="right"] {
  margin-left: 8px;
}

.emotion-8[data-x-out-of-boundaries] {
  visibility: hidden;
}

.emotion-6 {
  margin-bottom: 0.5em;
  margin-top: 0.5em;
  padding-left: 1em;
  padding-right: 1em;
}

.emotion-6:last-child {
  margin-bottom: 0.5em;
}

.emotion-5 {
  font-size: 0.875em;
  line-height: 1.5;
}

.emotion-4 {
  width: 13.75em;
}

.emotion-7 {
  color: #ffffff;
  display: none;
  font-size: 8px;
  margin: 8px;
  position: absolute;
  text-shadow: 0 2px 0 #ebeff5,0 3px 1px rgba(0,0,0,0.3);
  -webkit-transform: rotate(0deg) scaleX(2);
  -ms-transform: rotate(0deg) scaleX(2);
  transform: rotate(0deg) scaleX(2);
}

.emotion-10 {
  padding-bottom: 8.125em;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-right: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-left: 0.5714285714285714em;
}

<Styled(div)
  dir="rtl"
>
  <div
    className="emotion-10"
    dir="rtl"
  >
    <ThemeProvider>
      <ThemeProvider>
        <Popover
          content={<DemoContent />}
          focusTriggerOnClose={true}
          hasArrow={true}
          isOpen={true}
          placement="bottom-start"
        >
          <Manager>
            <Styled(span)
              content={<DemoContent />}
              focusTriggerOnClose={true}
              hasArrow={true}
              isOpen={true}
              placement="bottom-start"
            >
              <span
                className="emotion-9"
                content={<DemoContent />}
              >
                <PopoverTrigger
                  aria-describedby="popover-10-content"
                  aria-expanded={true}
                  aria-owns="popover-10-content"
                  onBlur={[Function]}
                  onClick={[Function]}
                  role="button"
                  size="large"
                >
                  <Reference>
                    <InnerReference
                      getReferenceRef={[Function]}
                    >
                      <Styled(span)>
                        <span
                          className="emotion-3"
                        >
                          <WithForwardRef(Button)
                            aria-describedby="popover-10-content"
                            aria-expanded={true}
                            aria-owns="popover-10-content"
                            onBlur={[Function]}
                            onClick={[Function]}
                            role="button"
                            size="large"
                          >
                            <Button
                              aria-describedby="popover-10-content"
                              aria-expanded={true}
                              aria-owns="popover-10-content"
                              forwardedRef={null}
                              onBlur={[Function]}
                              onClick={[Function]}
                              role="button"
                              size="large"
                            >
                              <Styled(button)
                                aria-describedby="popover-10-content"
                                aria-expanded={true}
                                aria-owns="popover-10-content"
                                onBlur={[Function]}
                                onClick={[Function]}
                                role="button"
                                size="large"
                                text="Open Popover"
                              >
                                <button
                                  aria-describedby="popover-10-content"
                                  aria-expanded={true}
                                  aria-owns="popover-10-content"
                                  className="emotion-2"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  role="button"
                                  size="large"
                                >
                                  <Styled(span)>
                                    <span
                                      className="emotion-1"
                                    >
                                      <Styled(span)
                                        size="large"
                                      >
                                        <span
                                          className="emotion-0"
                                          size="large"
                                        >
                                          Open Popover
                                        </span>
                                      </Styled(span)>
                                    </span>
                                  </Styled(span)>
                                </button>
                              </Styled(button)>
                            </Button>
                          </WithForwardRef(Button)>
                        </span>
                      </Styled(span)>
                    </InnerReference>
                  </Reference>
                </PopoverTrigger>
                <PopoverContent
                  hasArrow={true}
                  id="popover-10-content"
                  onBlur={[Function]}
                  placement="bottom-start"
                  tabIndex={0}
                >
                  <WithTheme(RtlPopper)
                    placement="bottom-start"
                  >
                    <RtlPopper
                      placement="bottom-start"
                    >
                      <Popper
                        placement="bottom-end"
                      >
                        <InnerPopper
                          eventsEnabled={true}
                          placement="bottom-end"
                          positionFixed={false}
                          referenceElement={
                            .emotion-3 {
  display: inline-block;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-right: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-left: 0.5714285714285714em;
}

<span
                              class="emotion-3"
                            >
                              <button
                                aria-describedby="popover-10-content"
                                aria-expanded="true"
                                aria-owns="popover-10-content"
                                class="emotion-2"
                                role="button"
                              >
                                <span
                                  class="emotion-1"
                                >
                                  <span
                                    class="emotion-0"
                                  >
                                    Open Popover
                                  </span>
                                </span>
                              </button>
                            </span>
                          }
                        >
                          <Styled(div)
                            id="popover-10-content"
                            onBlur={[Function]}
                            style={
                              Object {
                                "left": 0,
                                "opacity": 0,
                                "pointerEvents": "none",
                                "position": "absolute",
                                "top": 0,
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              className="emotion-8"
                              id="popover-10-content"
                              onBlur={[Function]}
                              style={
                                Object {
                                  "left": 0,
                                  "opacity": 0,
                                  "pointerEvents": "none",
                                  "position": "absolute",
                                  "top": 0,
                                }
                              }
                              tabIndex={0}
                            >
                              <WithTheme(Themed(CardBlock))>
                                <Themed(CardBlock)>
                                  <ThemeProvider>
                                    <ThemeProvider>
                                      <CardBlock>
                                        <Styled(div)>
                                          <div
                                            className="emotion-6"
                                          >
                                            <Styled(div)>
                                              <div
                                                className="emotion-5"
                                              >
                                                <DemoContent>
                                                  <Styled(div)>
                                                    <div
                                                      className="emotion-4"
                                                    >
                                                      Light years star stuff harvesting star light citizens of distant epochs encyclopaedia galactica.
                                                    </div>
                                                  </Styled(div)>
                                                </DemoContent>
                                              </div>
                                            </Styled(div)>
                                          </div>
                                        </Styled(div)>
                                      </CardBlock>
                                    </ThemeProvider>
                                  </ThemeProvider>
                                </Themed(CardBlock)>
                              </WithTheme(Themed(CardBlock))>
                              <PopoverArrow
                                size="8px"
                                style={Object {}}
                              >
                                <Styled(span)
                                  aria-hidden={true}
                                  size="8px"
                                  style={Object {}}
                                >
                                  <span
                                    aria-hidden={true}
                                    className="emotion-7"
                                    size="8px"
                                    style={Object {}}
                                  >
                                    ▼
                                  </span>
                                </Styled(span)>
                              </PopoverArrow>
                            </div>
                          </Styled(div)>
                        </InnerPopper>
                      </Popper>
                    </RtlPopper>
                  </WithTheme(RtlPopper)>
                </PopoverContent>
                <EventListener
                  listeners={
                    Array [
                      Object {
                        "event": "click",
                        "handler": [Function],
                        "options": true,
                        "target": "document",
                      },
                      Object {
                        "event": "keydown",
                        "handler": [Function],
                        "options": true,
                        "target": "document",
                      },
                    ]
                  }
                />
              </span>
            </Styled(span)>
          </Manager>
        </Popover>
      </ThemeProvider>
    </ThemeProvider>
  </div>
</Styled(div)>
`;

exports[`Popover demo examples Snapshots: scrolling-container 1`] = `
.emotion-9 {
  display: inline-block;
}

.emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-8 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2),0 4px 8px 0 rgba(0,0,0,0.2);
  padding: 0.5em 0;
  max-width: none;
  z-index: 100;
}

.emotion-8 *,
.emotion-8 *::before,
.emotion-8 *::after {
  box-sizing: inherit;
}

.emotion-8[data-placement^="top"] {
  margin-bottom: 8px;
}

.emotion-8[data-placement^="bottom"] {
  margin-top: 8px;
}

.emotion-8[data-placement^="left"] {
  margin-right: 8px;
}

.emotion-8[data-placement^="right"] {
  margin-left: 8px;
}

.emotion-8[data-x-out-of-boundaries] {
  visibility: hidden;
}

.emotion-6 {
  margin-bottom: 0.5em;
  margin-top: 0.5em;
  padding-left: 1em;
  padding-right: 1em;
}

.emotion-6:last-child {
  margin-bottom: 0.5em;
}

.emotion-5 {
  font-size: 0.875em;
  line-height: 1.5;
}

.emotion-4 {
  width: 13.75em;
}

.emotion-7 {
  color: #ffffff;
  display: none;
  font-size: 8px;
  margin: 8px;
  position: absolute;
  text-shadow: 0 2px 0 #ebeff5,0 3px 1px rgba(0,0,0,0.3);
  -webkit-transform: rotate(0deg) scaleX(2);
  -ms-transform: rotate(0deg) scaleX(2);
  transform: rotate(0deg) scaleX(2);
}

.emotion-18 {
  position: relative;
}

.emotion-11 {
  background-color: aliceblue;
  height: 360px;
  overflow: auto;
  position: relative;
}

.emotion-10 {
  height: 860px;
  width: 300vw;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.emotion-15 {
  left: 0;
  position: absolute;
  top: 0;
}

.emotion-14 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 1.5em;
  margin: 0;
  min-width: 1.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
  left: 0;
  position: absolute;
  top: 0;
}

.emotion-14 *,
.emotion-14 *::before,
.emotion-14 *::after {
  box-sizing: inherit;
}

.emotion-14:focus {
  border-color: #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-14:hover {
  background-color: #f5f7fa;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-14:focus:active,
.emotion-14:focus:hover {
  border-color: #1d5bbf;
}

.emotion-14:active {
  background-color: #ebeff5;
  color: #3272d9;
}

.emotion-14::-moz-focus-inner {
  border: 0;
}

.emotion-14 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-14 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-14 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-14 [role="img"]:only-child {
  margin: 0;
}

.emotion-12 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.75em;
  line-height: 2em;
}

<ScrollBox
  autoCenter={true}
  height={360}
>
  <Styled(div)>
    <div
      className="emotion-18"
    >
      <Styled(div)
        height={360}
      >
        <div
          className="emotion-11"
          height={360}
        >
          <Styled(div)
            scrollAreaHeight={360}
          >
            <div
              className="emotion-10"
            >
              <Popover
                content={<DemoContent />}
                focusTriggerOnClose={true}
                hasArrow={true}
                isOpen={true}
                placement="left"
              >
                <Manager>
                  <Styled(span)
                    content={<DemoContent />}
                    focusTriggerOnClose={true}
                    hasArrow={true}
                    isOpen={true}
                    placement="left"
                  >
                    <span
                      className="emotion-9"
                      content={<DemoContent />}
                    >
                      <PopoverTrigger
                        aria-describedby="popover-5-content"
                        aria-expanded={true}
                        aria-owns="popover-5-content"
                        onBlur={[Function]}
                        onClick={[Function]}
                        role="button"
                        size="large"
                      >
                        <Reference>
                          <InnerReference
                            getReferenceRef={[Function]}
                          >
                            <Styled(span)>
                              <span
                                className="emotion-3"
                              >
                                <WithForwardRef(Button)
                                  aria-describedby="popover-5-content"
                                  aria-expanded={true}
                                  aria-owns="popover-5-content"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  role="button"
                                  size="large"
                                >
                                  <Button
                                    aria-describedby="popover-5-content"
                                    aria-expanded={true}
                                    aria-owns="popover-5-content"
                                    forwardedRef={null}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    role="button"
                                    size="large"
                                  >
                                    <Styled(button)
                                      aria-describedby="popover-5-content"
                                      aria-expanded={true}
                                      aria-owns="popover-5-content"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      role="button"
                                      size="large"
                                      text="Open Popover"
                                    >
                                      <button
                                        aria-describedby="popover-5-content"
                                        aria-expanded={true}
                                        aria-owns="popover-5-content"
                                        className="emotion-2"
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        role="button"
                                        size="large"
                                      >
                                        <Styled(span)>
                                          <span
                                            className="emotion-1"
                                          >
                                            <Styled(span)
                                              size="large"
                                            >
                                              <span
                                                className="emotion-0"
                                                size="large"
                                              >
                                                Open Popover
                                              </span>
                                            </Styled(span)>
                                          </span>
                                        </Styled(span)>
                                      </button>
                                    </Styled(button)>
                                  </Button>
                                </WithForwardRef(Button)>
                              </span>
                            </Styled(span)>
                          </InnerReference>
                        </Reference>
                      </PopoverTrigger>
                      <PopoverContent
                        hasArrow={true}
                        id="popover-5-content"
                        onBlur={[Function]}
                        placement="left"
                        tabIndex={0}
                      >
                        <WithTheme(RtlPopper)
                          placement="left"
                        >
                          <RtlPopper
                            placement="left"
                          >
                            <Popper
                              placement="left"
                            >
                              <InnerPopper
                                eventsEnabled={true}
                                placement="left"
                                positionFixed={false}
                                referenceElement={
                                  .emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

<span
                                    class="emotion-3"
                                  >
                                    <button
                                      aria-describedby="popover-5-content"
                                      aria-expanded="true"
                                      aria-owns="popover-5-content"
                                      class="emotion-2"
                                      role="button"
                                    >
                                      <span
                                        class="emotion-1"
                                      >
                                        <span
                                          class="emotion-0"
                                        >
                                          Open Popover
                                        </span>
                                      </span>
                                    </button>
                                  </span>
                                }
                              >
                                <Styled(div)
                                  id="popover-5-content"
                                  onBlur={[Function]}
                                  style={
                                    Object {
                                      "left": 0,
                                      "opacity": 0,
                                      "pointerEvents": "none",
                                      "position": "absolute",
                                      "top": 0,
                                    }
                                  }
                                  tabIndex={0}
                                >
                                  <div
                                    className="emotion-8"
                                    id="popover-5-content"
                                    onBlur={[Function]}
                                    style={
                                      Object {
                                        "left": 0,
                                        "opacity": 0,
                                        "pointerEvents": "none",
                                        "position": "absolute",
                                        "top": 0,
                                      }
                                    }
                                    tabIndex={0}
                                  >
                                    <WithTheme(Themed(CardBlock))>
                                      <Themed(CardBlock)>
                                        <ThemeProvider>
                                          <ThemeProvider>
                                            <CardBlock>
                                              <Styled(div)>
                                                <div
                                                  className="emotion-6"
                                                >
                                                  <Styled(div)>
                                                    <div
                                                      className="emotion-5"
                                                    >
                                                      <DemoContent>
                                                        <Styled(div)>
                                                          <div
                                                            className="emotion-4"
                                                          >
                                                            Light years star stuff harvesting star light citizens of distant epochs encyclopaedia galactica.
                                                          </div>
                                                        </Styled(div)>
                                                      </DemoContent>
                                                    </div>
                                                  </Styled(div)>
                                                </div>
                                              </Styled(div)>
                                            </CardBlock>
                                          </ThemeProvider>
                                        </ThemeProvider>
                                      </Themed(CardBlock)>
                                    </WithTheme(Themed(CardBlock))>
                                    <PopoverArrow
                                      size="8px"
                                      style={Object {}}
                                    >
                                      <Styled(span)
                                        aria-hidden={true}
                                        size="8px"
                                        style={Object {}}
                                      >
                                        <span
                                          aria-hidden={true}
                                          className="emotion-7"
                                          size="8px"
                                          style={Object {}}
                                        >
                                          ▼
                                        </span>
                                      </Styled(span)>
                                    </PopoverArrow>
                                  </div>
                                </Styled(div)>
                              </InnerPopper>
                            </Popper>
                          </RtlPopper>
                        </WithTheme(RtlPopper)>
                      </PopoverContent>
                      <EventListener
                        listeners={
                          Array [
                            Object {
                              "event": "click",
                              "handler": [Function],
                              "options": true,
                              "target": "document",
                            },
                            Object {
                              "event": "keydown",
                              "handler": [Function],
                              "options": true,
                              "target": "document",
                            },
                          ]
                        }
                      />
                    </span>
                  </Styled(span)>
                </Manager>
              </Popover>
            </div>
          </Styled(div)>
        </div>
      </Styled(div)>
      <Styled(WithForwardRef(Button))
        minimal={true}
        onClick={[Function]}
        size="small"
      >
        <WithForwardRef(Button)
          className="emotion-15"
          minimal={true}
          onClick={[Function]}
          size="small"
        >
          <Button
            className="emotion-15"
            forwardedRef={null}
            minimal={true}
            onClick={[Function]}
            size="small"
          >
            <Styled(button)
              className="emotion-15"
              minimal={true}
              onClick={[Function]}
              size="small"
              text="Re-center"
            >
              <button
                className="emotion-14"
                onClick={[Function]}
                size="small"
              >
                <Styled(span)>
                  <span
                    className="emotion-1"
                  >
                    <Styled(span)
                      size="small"
                    >
                      <span
                        className="emotion-12"
                        size="small"
                      >
                        Re-center
                      </span>
                    </Styled(span)>
                  </span>
                </Styled(span)>
              </button>
            </Styled(button)>
          </Button>
        </WithForwardRef(Button)>
      </Styled(WithForwardRef(Button))>
    </div>
  </Styled(div)>
</ScrollBox>
`;

exports[`Popover demo examples Snapshots: title 1`] = `
.emotion-14 {
  display: inline-block;
}

.emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-15 {
  padding: 5em 0;
}

.emotion-13 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2),0 4px 8px 0 rgba(0,0,0,0.2);
  padding: 0.5em 0;
  max-width: none;
  z-index: 100;
}

.emotion-13 *,
.emotion-13 *::before,
.emotion-13 *::after {
  box-sizing: inherit;
}

.emotion-13[data-placement^="top"] {
  margin-bottom: 8px;
}

.emotion-13[data-placement^="bottom"] {
  margin-top: 8px;
}

.emotion-13[data-placement^="left"] {
  margin-right: 8px;
}

.emotion-13[data-placement^="right"] {
  margin-left: 8px;
}

.emotion-13[data-x-out-of-boundaries] {
  visibility: hidden;
}

.emotion-8 {
  margin-bottom: 0.5em;
  margin-top: 0.5em;
  padding-left: 1em;
  padding-right: 1em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-7 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-5 {
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-5 > [role="img"] {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-right: 0.5em;
  position: relative;
  top: 0.25em;
}

.emotion-4 {
  color: #58606e;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 1.125em;
  font-weight: 700;
  margin: 0;
}

.emotion-6 {
  color: #58606e;
  font-size: 0.6875em;
  font-weight: 400;
  margin: 0;
  margin-top: 0.7272727272727273em;
}

.emotion-11 {
  margin-bottom: 0.5em;
  margin-top: 0.5em;
  padding-left: 1em;
  padding-right: 1em;
}

.emotion-11:last-child {
  margin-bottom: 0.5em;
}

.emotion-10 {
  font-size: 0.875em;
  line-height: 1.5;
}

.emotion-9 {
  width: 13.75em;
}

.emotion-12 {
  color: #ffffff;
  display: none;
  font-size: 8px;
  margin: 8px;
  position: absolute;
  text-shadow: 0 2px 0 #ebeff5,0 3px 1px rgba(0,0,0,0.3);
  -webkit-transform: rotate(0deg) scaleX(2);
  -ms-transform: rotate(0deg) scaleX(2);
  transform: rotate(0deg) scaleX(2);
}

<Styled(div)>
  <div
    className="emotion-15"
  >
    <Popover
      content={<DemoContent />}
      focusTriggerOnClose={true}
      hasArrow={true}
      isOpen={true}
      placement="right"
      subtitle="Subtitle"
      title="Title"
    >
      <Manager>
        <Styled(span)
          content={<DemoContent />}
          focusTriggerOnClose={true}
          hasArrow={true}
          isOpen={true}
          placement="right"
          subtitle="Subtitle"
          title="Title"
        >
          <span
            className="emotion-14"
            content={<DemoContent />}
            title="Title"
          >
            <PopoverTrigger
              aria-describedby="popover-2-content"
              aria-expanded={true}
              aria-owns="popover-2-content"
              onBlur={[Function]}
              onClick={[Function]}
              role="button"
              size="large"
            >
              <Reference>
                <InnerReference
                  getReferenceRef={[Function]}
                >
                  <Styled(span)>
                    <span
                      className="emotion-3"
                    >
                      <WithForwardRef(Button)
                        aria-describedby="popover-2-content"
                        aria-expanded={true}
                        aria-owns="popover-2-content"
                        onBlur={[Function]}
                        onClick={[Function]}
                        role="button"
                        size="large"
                      >
                        <Button
                          aria-describedby="popover-2-content"
                          aria-expanded={true}
                          aria-owns="popover-2-content"
                          forwardedRef={null}
                          onBlur={[Function]}
                          onClick={[Function]}
                          role="button"
                          size="large"
                        >
                          <Styled(button)
                            aria-describedby="popover-2-content"
                            aria-expanded={true}
                            aria-owns="popover-2-content"
                            onBlur={[Function]}
                            onClick={[Function]}
                            role="button"
                            size="large"
                            text="Open Popover"
                          >
                            <button
                              aria-describedby="popover-2-content"
                              aria-expanded={true}
                              aria-owns="popover-2-content"
                              className="emotion-2"
                              onBlur={[Function]}
                              onClick={[Function]}
                              role="button"
                              size="large"
                            >
                              <Styled(span)>
                                <span
                                  className="emotion-1"
                                >
                                  <Styled(span)
                                    size="large"
                                  >
                                    <span
                                      className="emotion-0"
                                      size="large"
                                    >
                                      Open Popover
                                    </span>
                                  </Styled(span)>
                                </span>
                              </Styled(span)>
                            </button>
                          </Styled(button)>
                        </Button>
                      </WithForwardRef(Button)>
                    </span>
                  </Styled(span)>
                </InnerReference>
              </Reference>
            </PopoverTrigger>
            <PopoverContent
              hasArrow={true}
              id="popover-2-content"
              onBlur={[Function]}
              placement="right"
              subtitle="Subtitle"
              tabIndex={0}
              title="Title"
            >
              <WithTheme(RtlPopper)
                placement="right"
              >
                <RtlPopper
                  placement="right"
                >
                  <Popper
                    placement="right"
                  >
                    <InnerPopper
                      eventsEnabled={true}
                      placement="right"
                      positionFixed={false}
                      referenceElement={
                        .emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

<span
                          class="emotion-3"
                        >
                          <button
                            aria-describedby="popover-2-content"
                            aria-expanded="true"
                            aria-owns="popover-2-content"
                            class="emotion-2"
                            role="button"
                          >
                            <span
                              class="emotion-1"
                            >
                              <span
                                class="emotion-0"
                              >
                                Open Popover
                              </span>
                            </span>
                          </button>
                        </span>
                      }
                    >
                      <Styled(div)
                        id="popover-2-content"
                        onBlur={[Function]}
                        style={
                          Object {
                            "left": 0,
                            "opacity": 0,
                            "pointerEvents": "none",
                            "position": "absolute",
                            "top": 0,
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          className="emotion-13"
                          id="popover-2-content"
                          onBlur={[Function]}
                          style={
                            Object {
                              "left": 0,
                              "opacity": 0,
                              "pointerEvents": "none",
                              "position": "absolute",
                              "top": 0,
                            }
                          }
                          tabIndex={0}
                        >
                          <WithTheme(Themed(CardTitle))
                            subtitle="Subtitle"
                          >
                            <Themed(CardTitle)
                              subtitle="Subtitle"
                            >
                              <ThemeProvider>
                                <ThemeProvider>
                                  <CardTitle
                                    subtitle="Subtitle"
                                  >
                                    <Styled(div)>
                                      <div
                                        className="emotion-8"
                                      >
                                        <Styled(div)>
                                          <div
                                            className="emotion-7"
                                          >
                                            <Styled(div)>
                                              <div
                                                className="emotion-5"
                                              >
                                                <Styled(h3)>
                                                  <h3
                                                    className="emotion-4"
                                                  >
                                                    Title
                                                  </h3>
                                                </Styled(h3)>
                                              </div>
                                            </Styled(div)>
                                            <Styled(h4)>
                                              <h4
                                                className="emotion-6"
                                              >
                                                Subtitle
                                              </h4>
                                            </Styled(h4)>
                                          </div>
                                        </Styled(div)>
                                      </div>
                                    </Styled(div)>
                                  </CardTitle>
                                </ThemeProvider>
                              </ThemeProvider>
                            </Themed(CardTitle)>
                          </WithTheme(Themed(CardTitle))>
                          <WithTheme(Themed(CardBlock))>
                            <Themed(CardBlock)>
                              <ThemeProvider>
                                <ThemeProvider>
                                  <CardBlock>
                                    <Styled(div)>
                                      <div
                                        className="emotion-11"
                                      >
                                        <Styled(div)>
                                          <div
                                            className="emotion-10"
                                          >
                                            <DemoContent>
                                              <Styled(div)>
                                                <div
                                                  className="emotion-9"
                                                >
                                                  Light years star stuff harvesting star light citizens of distant epochs encyclopaedia galactica.
                                                </div>
                                              </Styled(div)>
                                            </DemoContent>
                                          </div>
                                        </Styled(div)>
                                      </div>
                                    </Styled(div)>
                                  </CardBlock>
                                </ThemeProvider>
                              </ThemeProvider>
                            </Themed(CardBlock)>
                          </WithTheme(Themed(CardBlock))>
                          <PopoverArrow
                            size="8px"
                            style={Object {}}
                          >
                            <Styled(span)
                              aria-hidden={true}
                              size="8px"
                              style={Object {}}
                            >
                              <span
                                aria-hidden={true}
                                className="emotion-12"
                                size="8px"
                                style={Object {}}
                              >
                                ▼
                              </span>
                            </Styled(span)>
                          </PopoverArrow>
                        </div>
                      </Styled(div)>
                    </InnerPopper>
                  </Popper>
                </RtlPopper>
              </WithTheme(RtlPopper)>
            </PopoverContent>
            <EventListener
              listeners={
                Array [
                  Object {
                    "event": "click",
                    "handler": [Function],
                    "options": true,
                    "target": "document",
                  },
                  Object {
                    "event": "keydown",
                    "handler": [Function],
                    "options": true,
                    "target": "document",
                  },
                ]
              }
            />
          </span>
        </Styled(span)>
      </Manager>
    </Popover>
  </div>
</Styled(div)>
`;

exports[`Popover render props children calls children prop with expected arguments 1`] = `
Array [
  Object {
    "helpers": Object {
      "close": [Function],
      "focusTrigger": [Function],
      "open": [Function],
      "toggleOpen": [Function],
    },
    "props": Object {
      "aria-describedby": "popover-18-content",
      "aria-disabled": undefined,
      "aria-expanded": false,
      "aria-owns": "popover-18-content",
      "children": undefined,
      "cursor": undefined,
      "disabled": undefined,
      "onBlur": [Function],
      "onClick": [Function],
      "ref": [Function],
      "role": "button",
    },
    "state": Object {
      "isOpen": false,
    },
  },
]
`;

exports[`Popover render props content calls content prop with expected arguments 1`] = `
Array [
  Object {
    "helpers": Object {
      "close": [Function],
      "focusTrigger": [Function],
      "open": [Function],
      "toggleOpen": [Function],
    },
    "props": Object {
      "hasArrow": true,
      "id": "popover-19-content",
      "modifiers": undefined,
      "onBlur": [Function],
      "placement": "bottom",
      "positionFixed": undefined,
      "ref": [Function],
      "subtitle": undefined,
      "tabIndex": 0,
      "title": undefined,
    },
    "state": Object {
      "isOpen": true,
    },
  },
]
`;
