// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tooltip demo examples Snapshots: basic 1`] = `
.emotion-4 {
  display: inline-block;
}

.emotion-3 {
  display: inline-block;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0.4375em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  fill: currentcolor;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
}

<Tooltip
  content="Edit your account settings"
  hasArrow={true}
  placement="bottom"
>
  <WithTheme(Themed(Popover))
    content={[Function]}
    focusTriggerOnClose={false}
    hasArrow={true}
    id="tooltip-1"
    isOpen={false}
    onClose={[Function]}
    onOpen={[Function]}
    placement="bottom"
  >
    <Themed(Popover)
      content={[Function]}
      focusTriggerOnClose={false}
      hasArrow={true}
      id="tooltip-1"
      isOpen={false}
      onClose={[Function]}
      onOpen={[Function]}
      placement="bottom"
    >
      <ThemeProvider>
        <ThemeProvider>
          <Popover
            content={[Function]}
            focusTriggerOnClose={false}
            hasArrow={true}
            id="tooltip-1"
            isOpen={false}
            onClose={[Function]}
            onOpen={[Function]}
            placement="bottom"
          >
            <Manager>
              <Styled(span)
                content={[Function]}
                focusTriggerOnClose={false}
                hasArrow={true}
                id="tooltip-1"
                isOpen={false}
                onClose={[Function]}
                onOpen={[Function]}
                placement="bottom"
              >
                <span
                  className="emotion-4"
                  content={[Function]}
                  id="tooltip-1"
                  onClose={[Function]}
                  onOpen={[Function]}
                >
                  <PopoverTrigger
                    aria-describedby="tooltip-1-content"
                    aria-owns="tooltip-1-content"
                    iconStart={
                      <IconPerson
                        title="account settings"
                      />
                    }
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    role="button"
                    size="large"
                    tabIndex={0}
                  >
                    <Reference>
                      <InnerReference
                        getReferenceRef={[Function]}
                      >
                        <Styled(span)>
                          <span
                            className="emotion-3"
                          >
                            <WithForwardRef(Button)
                              aria-describedby="tooltip-1-content"
                              aria-owns="tooltip-1-content"
                              iconStart={
                                <IconPerson
                                  title="account settings"
                                />
                              }
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              role="button"
                              size="large"
                              tabIndex={0}
                            >
                              <Button
                                aria-describedby="tooltip-1-content"
                                aria-owns="tooltip-1-content"
                                forwardedRef={null}
                                iconStart={
                                  <IconPerson
                                    title="account settings"
                                  />
                                }
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                                role="button"
                                size="large"
                                tabIndex={0}
                              >
                                <Styled(button)
                                  aria-describedby="tooltip-1-content"
                                  aria-owns="tooltip-1-content"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  role="button"
                                  size="large"
                                  tabIndex={0}
                                >
                                  <button
                                    aria-describedby="tooltip-1-content"
                                    aria-owns="tooltip-1-content"
                                    className="emotion-2"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    role="button"
                                    size="large"
                                    tabIndex={0}
                                  >
                                    <Styled(span)>
                                      <span
                                        className="emotion-1"
                                      >
                                        <IconPerson
                                          key="iconStart"
                                          size="1.5em"
                                          title="account settings"
                                        >
                                          <Icon
                                            rtl={false}
                                            size="1.5em"
                                            title="account settings"
                                          >
                                            <Styled(svg)
                                              aria-hidden={null}
                                              aria-labelledby="icon-title-icon-2"
                                              focusable="false"
                                              role="img"
                                              rtl={false}
                                              size="1.5em"
                                              viewBox="0 0 24 24"
                                            >
                                              <svg
                                                aria-hidden={null}
                                                aria-labelledby="icon-title-icon-2"
                                                className="emotion-0"
                                                focusable="false"
                                                role="img"
                                                size="1.5em"
                                                viewBox="0 0 24 24"
                                              >
                                                <title
                                                  id="icon-title-icon-2"
                                                >
                                                  account settings
                                                </title>
                                                <g>
                                                  <path
                                                    d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
                                                  />
                                                </g>
                                              </svg>
                                            </Styled(svg)>
                                          </Icon>
                                        </IconPerson>
                                      </span>
                                    </Styled(span)>
                                  </button>
                                </Styled(button)>
                              </Button>
                            </WithForwardRef(Button)>
                          </span>
                        </Styled(span)>
                      </InnerReference>
                    </Reference>
                  </PopoverTrigger>
                </span>
              </Styled(span)>
            </Manager>
          </Popover>
        </ThemeProvider>
      </ThemeProvider>
    </Themed(Popover)>
  </WithTheme(Themed(Popover))>
</Tooltip>
`;

exports[`Tooltip demo examples Snapshots: controlled 1`] = `
.emotion-8 {
  display: inline-block;
}

.emotion-3 {
  display: inline-block;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-7 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #434a54;
  border: 1px solid #434a54;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2),0 4px 8px 0 rgba(0,0,0,0.2);
  padding: 0.5em 0;
  max-width: 18em;
  z-index: 100;
}

.emotion-7 *,
.emotion-7 *::before,
.emotion-7 *::after {
  box-sizing: inherit;
}

.emotion-7[data-placement^="top"] {
  margin-bottom: 8px;
}

.emotion-7[data-placement^="bottom"] {
  margin-top: 8px;
}

.emotion-7[data-placement^="left"] {
  margin-right: 8px;
}

.emotion-7[data-placement^="right"] {
  margin-left: 8px;
}

.emotion-7[data-x-out-of-boundaries] {
  visibility: hidden;
}

.emotion-5 {
  margin-bottom: 0;
  margin-top: 0;
  padding-left: 1em;
  padding-right: 1em;
}

.emotion-5:last-child {
  margin-bottom: 0;
}

.emotion-4 {
  font-size: 0.875em;
  line-height: 1.5;
}

.emotion-6 {
  color: #434a54;
  display: none;
  font-size: 8px;
  margin: 8px;
  position: absolute;
  text-shadow: 0 2px 0 #434a54,0 3px 1px rgba(0,0,0,0.3);
  -webkit-transform: rotate(0deg) scaleX(2);
  -ms-transform: rotate(0deg) scaleX(2);
  transform: rotate(0deg) scaleX(2);
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

<App>
  <Styled(div)>
    <div
      className="emotion-12"
    >
      <Tooltip
        content="This tooltip is controlled"
        hasArrow={true}
        isOpen={true}
        placement="top"
      >
        <WithTheme(Themed(Popover))
          content={[Function]}
          focusTriggerOnClose={false}
          hasArrow={true}
          id="tooltip-14"
          isOpen={true}
          onClose={[Function]}
          onOpen={[Function]}
          placement="top"
        >
          <Themed(Popover)
            content={[Function]}
            focusTriggerOnClose={false}
            hasArrow={true}
            id="tooltip-14"
            isOpen={true}
            onClose={[Function]}
            onOpen={[Function]}
            placement="top"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Popover
                  content={[Function]}
                  focusTriggerOnClose={false}
                  hasArrow={true}
                  id="tooltip-14"
                  isOpen={true}
                  onClose={[Function]}
                  onOpen={[Function]}
                  placement="top"
                >
                  <Manager>
                    <Styled(span)
                      content={[Function]}
                      focusTriggerOnClose={false}
                      hasArrow={true}
                      id="tooltip-14"
                      isOpen={true}
                      onClose={[Function]}
                      onOpen={[Function]}
                      placement="top"
                    >
                      <span
                        className="emotion-8"
                        content={[Function]}
                        id="tooltip-14"
                        onClose={[Function]}
                        onOpen={[Function]}
                      >
                        <PopoverTrigger
                          aria-describedby="tooltip-14-content"
                          aria-owns="tooltip-14-content"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          role="button"
                          size="large"
                          tabIndex={0}
                        >
                          <Reference>
                            <InnerReference
                              getReferenceRef={[Function]}
                            >
                              <Styled(span)>
                                <span
                                  className="emotion-3"
                                >
                                  <WithForwardRef(Button)
                                    aria-describedby="tooltip-14-content"
                                    aria-owns="tooltip-14-content"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    role="button"
                                    size="large"
                                    tabIndex={0}
                                  >
                                    <Button
                                      aria-describedby="tooltip-14-content"
                                      aria-owns="tooltip-14-content"
                                      forwardedRef={null}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                      role="button"
                                      size="large"
                                      tabIndex={0}
                                    >
                                      <Styled(button)
                                        aria-describedby="tooltip-14-content"
                                        aria-owns="tooltip-14-content"
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        role="button"
                                        size="large"
                                        tabIndex={0}
                                        text="Button"
                                      >
                                        <button
                                          aria-describedby="tooltip-14-content"
                                          aria-owns="tooltip-14-content"
                                          className="emotion-2"
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          onMouseEnter={[Function]}
                                          onMouseLeave={[Function]}
                                          role="button"
                                          size="large"
                                          tabIndex={0}
                                        >
                                          <Styled(span)>
                                            <span
                                              className="emotion-1"
                                            >
                                              <Styled(span)
                                                size="large"
                                              >
                                                <span
                                                  className="emotion-0"
                                                  size="large"
                                                >
                                                  Button
                                                </span>
                                              </Styled(span)>
                                            </span>
                                          </Styled(span)>
                                        </button>
                                      </Styled(button)>
                                    </Button>
                                  </WithForwardRef(Button)>
                                </span>
                              </Styled(span)>
                            </InnerReference>
                          </Reference>
                        </PopoverTrigger>
                        <PopoverContent
                          aria-live="polite"
                          hasArrow={true}
                          id="tooltip-14-content"
                          onBlur={[Function]}
                          placement="top"
                          role="tooltip"
                        >
                          <WithTheme(RtlPopper)
                            placement="top"
                          >
                            <RtlPopper
                              placement="top"
                            >
                              <Popper
                                placement="top"
                              >
                                <InnerPopper
                                  eventsEnabled={true}
                                  placement="top"
                                  positionFixed={false}
                                  referenceElement={
                                    .emotion-3 {
  display: inline-block;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

<span
                                      class="emotion-3"
                                    >
                                      <button
                                        aria-describedby="tooltip-14-content"
                                        aria-owns="tooltip-14-content"
                                        class="emotion-2"
                                        role="button"
                                        tabindex="0"
                                      >
                                        <span
                                          class="emotion-1"
                                        >
                                          <span
                                            class="emotion-0"
                                          >
                                            Button
                                          </span>
                                        </span>
                                      </button>
                                    </span>
                                  }
                                >
                                  <Styled(div)
                                    aria-live="polite"
                                    id="tooltip-14-content"
                                    onBlur={[Function]}
                                    role="tooltip"
                                    style={
                                      Object {
                                        "left": 0,
                                        "opacity": 0,
                                        "pointerEvents": "none",
                                        "position": "absolute",
                                        "top": 0,
                                      }
                                    }
                                  >
                                    <div
                                      aria-live="polite"
                                      className="emotion-7"
                                      id="tooltip-14-content"
                                      onBlur={[Function]}
                                      role="tooltip"
                                      style={
                                        Object {
                                          "left": 0,
                                          "opacity": 0,
                                          "pointerEvents": "none",
                                          "position": "absolute",
                                          "top": 0,
                                        }
                                      }
                                    >
                                      <WithTheme(Themed(CardBlock))>
                                        <Themed(CardBlock)>
                                          <ThemeProvider>
                                            <ThemeProvider>
                                              <CardBlock>
                                                <Styled(div)>
                                                  <div
                                                    className="emotion-5"
                                                  >
                                                    <Styled(div)>
                                                      <div
                                                        className="emotion-4"
                                                      >
                                                        This tooltip is controlled
                                                      </div>
                                                    </Styled(div)>
                                                  </div>
                                                </Styled(div)>
                                              </CardBlock>
                                            </ThemeProvider>
                                          </ThemeProvider>
                                        </Themed(CardBlock)>
                                      </WithTheme(Themed(CardBlock))>
                                      <PopoverArrow
                                        size="8px"
                                        style={Object {}}
                                      >
                                        <Styled(span)
                                          aria-hidden={true}
                                          size="8px"
                                          style={Object {}}
                                        >
                                          <span
                                            aria-hidden={true}
                                            className="emotion-6"
                                            size="8px"
                                            style={Object {}}
                                          >
                                            ▼
                                          </span>
                                        </Styled(span)>
                                      </PopoverArrow>
                                    </div>
                                  </Styled(div)>
                                </InnerPopper>
                              </Popper>
                            </RtlPopper>
                          </WithTheme(RtlPopper)>
                        </PopoverContent>
                        <EventListener
                          listeners={
                            Array [
                              Object {
                                "event": "click",
                                "handler": [Function],
                                "options": true,
                                "target": "document",
                              },
                              Object {
                                "event": "keydown",
                                "handler": [Function],
                                "options": true,
                                "target": "document",
                              },
                            ]
                          }
                        />
                      </span>
                    </Styled(span)>
                  </Manager>
                </Popover>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Popover)>
        </WithTheme(Themed(Popover))>
      </Tooltip>
      <WithForwardRef(Button)
        onClick={[Function]}
        size="large"
      >
        <Button
          forwardedRef={null}
          onClick={[Function]}
          size="large"
        >
          <Styled(button)
            onClick={[Function]}
            size="large"
            text="Close Tooltip"
          >
            <button
              className="emotion-2"
              onClick={[Function]}
              size="large"
            >
              <Styled(span)>
                <span
                  className="emotion-1"
                >
                  <Styled(span)
                    size="large"
                  >
                    <span
                      className="emotion-0"
                      size="large"
                    >
                      Close Tooltip
                    </span>
                  </Styled(span)>
                </span>
              </Styled(span)>
            </button>
          </Styled(button)>
        </Button>
      </WithForwardRef(Button)>
    </div>
  </Styled(div)>
</App>
`;

exports[`Tooltip demo examples Snapshots: cursor 1`] = `
.emotion-2 {
  display: inline-block;
}

.emotion-0 {
  border-bottom-style: dashed;
  border-bottom-color: currentcolor;
  border-bottom-width: 1px;
}

.emotion-9 {
  font-family: "Open Sans";
}

.emotion-9 > * {
  margin-right: 1.5em;
}

.emotion-1 {
  cursor: help;
  display: inline-block;
}

.emotion-4 {
  cursor: not-allowed;
  display: inline-block;
}

.emotion-7 {
  cursor: move;
  display: inline-block;
}

<Styled(div)>
  <div
    className="emotion-9"
  >
    <Tooltip
      content="Help"
      cursor="help"
      hasArrow={true}
      placement="bottom"
    >
      <WithTheme(Themed(Popover))
        content={[Function]}
        cursor="help"
        focusTriggerOnClose={false}
        hasArrow={true}
        id="tooltip-9"
        isOpen={false}
        onClose={[Function]}
        onOpen={[Function]}
        placement="bottom"
      >
        <Themed(Popover)
          content={[Function]}
          cursor="help"
          focusTriggerOnClose={false}
          hasArrow={true}
          id="tooltip-9"
          isOpen={false}
          onClose={[Function]}
          onOpen={[Function]}
          placement="bottom"
        >
          <ThemeProvider>
            <ThemeProvider>
              <Popover
                content={[Function]}
                cursor="help"
                focusTriggerOnClose={false}
                hasArrow={true}
                id="tooltip-9"
                isOpen={false}
                onClose={[Function]}
                onOpen={[Function]}
                placement="bottom"
              >
                <Manager>
                  <Styled(span)
                    content={[Function]}
                    cursor="help"
                    focusTriggerOnClose={false}
                    hasArrow={true}
                    id="tooltip-9"
                    isOpen={false}
                    onClose={[Function]}
                    onOpen={[Function]}
                    placement="bottom"
                  >
                    <span
                      className="emotion-2"
                      content={[Function]}
                      cursor="help"
                      id="tooltip-9"
                      onClose={[Function]}
                      onOpen={[Function]}
                    >
                      <PopoverTrigger
                        aria-describedby="tooltip-9-content"
                        aria-owns="tooltip-9-content"
                        cursor="help"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        role="button"
                        tabIndex={0}
                      >
                        <Reference>
                          <InnerReference
                            getReferenceRef={[Function]}
                          >
                            <Styled(span)
                              cursor="help"
                            >
                              <span
                                className="emotion-1"
                                cursor="help"
                              >
                                <Styled(span)
                                  aria-describedby="tooltip-9-content"
                                  aria-owns="tooltip-9-content"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  role="button"
                                  tabIndex={0}
                                >
                                  <span
                                    aria-describedby="tooltip-9-content"
                                    aria-owns="tooltip-9-content"
                                    className="emotion-0"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    Help
                                  </span>
                                </Styled(span)>
                              </span>
                            </Styled(span)>
                          </InnerReference>
                        </Reference>
                      </PopoverTrigger>
                    </span>
                  </Styled(span)>
                </Manager>
              </Popover>
            </ThemeProvider>
          </ThemeProvider>
        </Themed(Popover)>
      </WithTheme(Themed(Popover))>
    </Tooltip>
    <Tooltip
      content="Not Allowed"
      cursor="not-allowed"
      hasArrow={true}
      placement="bottom"
    >
      <WithTheme(Themed(Popover))
        content={[Function]}
        cursor="not-allowed"
        focusTriggerOnClose={false}
        hasArrow={true}
        id="tooltip-10"
        isOpen={false}
        onClose={[Function]}
        onOpen={[Function]}
        placement="bottom"
      >
        <Themed(Popover)
          content={[Function]}
          cursor="not-allowed"
          focusTriggerOnClose={false}
          hasArrow={true}
          id="tooltip-10"
          isOpen={false}
          onClose={[Function]}
          onOpen={[Function]}
          placement="bottom"
        >
          <ThemeProvider>
            <ThemeProvider>
              <Popover
                content={[Function]}
                cursor="not-allowed"
                focusTriggerOnClose={false}
                hasArrow={true}
                id="tooltip-10"
                isOpen={false}
                onClose={[Function]}
                onOpen={[Function]}
                placement="bottom"
              >
                <Manager>
                  <Styled(span)
                    content={[Function]}
                    cursor="not-allowed"
                    focusTriggerOnClose={false}
                    hasArrow={true}
                    id="tooltip-10"
                    isOpen={false}
                    onClose={[Function]}
                    onOpen={[Function]}
                    placement="bottom"
                  >
                    <span
                      className="emotion-2"
                      content={[Function]}
                      cursor="not-allowed"
                      id="tooltip-10"
                      onClose={[Function]}
                      onOpen={[Function]}
                    >
                      <PopoverTrigger
                        aria-describedby="tooltip-10-content"
                        aria-owns="tooltip-10-content"
                        cursor="not-allowed"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        role="button"
                        tabIndex={0}
                      >
                        <Reference>
                          <InnerReference
                            getReferenceRef={[Function]}
                          >
                            <Styled(span)
                              cursor="not-allowed"
                            >
                              <span
                                className="emotion-4"
                                cursor="not-allowed"
                              >
                                <Styled(span)
                                  aria-describedby="tooltip-10-content"
                                  aria-owns="tooltip-10-content"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  role="button"
                                  tabIndex={0}
                                >
                                  <span
                                    aria-describedby="tooltip-10-content"
                                    aria-owns="tooltip-10-content"
                                    className="emotion-0"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    Not Allowed
                                  </span>
                                </Styled(span)>
                              </span>
                            </Styled(span)>
                          </InnerReference>
                        </Reference>
                      </PopoverTrigger>
                    </span>
                  </Styled(span)>
                </Manager>
              </Popover>
            </ThemeProvider>
          </ThemeProvider>
        </Themed(Popover)>
      </WithTheme(Themed(Popover))>
    </Tooltip>
    <Tooltip
      content="Move"
      cursor="move"
      hasArrow={true}
      placement="bottom"
    >
      <WithTheme(Themed(Popover))
        content={[Function]}
        cursor="move"
        focusTriggerOnClose={false}
        hasArrow={true}
        id="tooltip-11"
        isOpen={false}
        onClose={[Function]}
        onOpen={[Function]}
        placement="bottom"
      >
        <Themed(Popover)
          content={[Function]}
          cursor="move"
          focusTriggerOnClose={false}
          hasArrow={true}
          id="tooltip-11"
          isOpen={false}
          onClose={[Function]}
          onOpen={[Function]}
          placement="bottom"
        >
          <ThemeProvider>
            <ThemeProvider>
              <Popover
                content={[Function]}
                cursor="move"
                focusTriggerOnClose={false}
                hasArrow={true}
                id="tooltip-11"
                isOpen={false}
                onClose={[Function]}
                onOpen={[Function]}
                placement="bottom"
              >
                <Manager>
                  <Styled(span)
                    content={[Function]}
                    cursor="move"
                    focusTriggerOnClose={false}
                    hasArrow={true}
                    id="tooltip-11"
                    isOpen={false}
                    onClose={[Function]}
                    onOpen={[Function]}
                    placement="bottom"
                  >
                    <span
                      className="emotion-2"
                      content={[Function]}
                      cursor="move"
                      id="tooltip-11"
                      onClose={[Function]}
                      onOpen={[Function]}
                    >
                      <PopoverTrigger
                        aria-describedby="tooltip-11-content"
                        aria-owns="tooltip-11-content"
                        cursor="move"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        role="button"
                        tabIndex={0}
                      >
                        <Reference>
                          <InnerReference
                            getReferenceRef={[Function]}
                          >
                            <Styled(span)
                              cursor="move"
                            >
                              <span
                                className="emotion-7"
                                cursor="move"
                              >
                                <Styled(span)
                                  aria-describedby="tooltip-11-content"
                                  aria-owns="tooltip-11-content"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  role="button"
                                  tabIndex={0}
                                >
                                  <span
                                    aria-describedby="tooltip-11-content"
                                    aria-owns="tooltip-11-content"
                                    className="emotion-0"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    Move
                                  </span>
                                </Styled(span)>
                              </span>
                            </Styled(span)>
                          </InnerReference>
                        </Reference>
                      </PopoverTrigger>
                    </span>
                  </Styled(span)>
                </Manager>
              </Popover>
            </ThemeProvider>
          </ThemeProvider>
        </Themed(Popover)>
      </WithTheme(Themed(Popover))>
    </Tooltip>
  </div>
</Styled(div)>
`;

exports[`Tooltip demo examples Snapshots: disabled 1`] = `
.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0.4375em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  fill: currentcolor;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
}

<Tooltip
  content="Edit your account settings"
  disabled={true}
  hasArrow={true}
  placement="bottom"
>
  <WithForwardRef(Button)
    iconStart={
      <IconPerson
        title="account settings"
      />
    }
    size="large"
  >
    <Button
      forwardedRef={null}
      iconStart={
        <IconPerson
          title="account settings"
        />
      }
      size="large"
    >
      <Styled(button)
        size="large"
      >
        <button
          className="emotion-2"
          size="large"
        >
          <Styled(span)>
            <span
              className="emotion-1"
            >
              <IconPerson
                key="iconStart"
                size="1.5em"
                title="account settings"
              >
                <Icon
                  rtl={false}
                  size="1.5em"
                  title="account settings"
                >
                  <Styled(svg)
                    aria-hidden={null}
                    aria-labelledby="icon-title-icon-13"
                    focusable="false"
                    role="img"
                    rtl={false}
                    size="1.5em"
                    viewBox="0 0 24 24"
                  >
                    <svg
                      aria-hidden={null}
                      aria-labelledby="icon-title-icon-13"
                      className="emotion-0"
                      focusable="false"
                      role="img"
                      size="1.5em"
                      viewBox="0 0 24 24"
                    >
                      <title
                        id="icon-title-icon-13"
                      >
                        account settings
                      </title>
                      <g>
                        <path
                          d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
                        />
                      </g>
                    </svg>
                  </Styled(svg)>
                </Icon>
              </IconPerson>
            </span>
          </Styled(span)>
        </button>
      </Styled(button)>
    </Button>
  </WithForwardRef(Button)>
</Tooltip>
`;

exports[`Tooltip demo examples Snapshots: overflow 1`] = `
.emotion-8 {
  display: inline-block;
}

.emotion-3 {
  display: inline-block;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-7 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #434a54;
  border: 1px solid #434a54;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2),0 4px 8px 0 rgba(0,0,0,0.2);
  padding: 0.5em 0;
  max-width: 18em;
  z-index: 100;
}

.emotion-7 *,
.emotion-7 *::before,
.emotion-7 *::after {
  box-sizing: inherit;
}

.emotion-7[data-placement^="top"] {
  margin-bottom: 8px;
}

.emotion-7[data-placement^="bottom"] {
  margin-top: 8px;
}

.emotion-7[data-placement^="left"] {
  margin-right: 8px;
}

.emotion-7[data-placement^="right"] {
  margin-left: 8px;
}

.emotion-7[data-x-out-of-boundaries] {
  visibility: hidden;
}

.emotion-5 {
  margin-bottom: 0;
  margin-top: 0;
  padding-left: 1em;
  padding-right: 1em;
}

.emotion-5:last-child {
  margin-bottom: 0;
}

.emotion-4 {
  font-size: 0.875em;
  line-height: 1.5;
}

.emotion-6 {
  color: #434a54;
  display: none;
  font-size: 8px;
  margin: 8px;
  position: absolute;
  text-shadow: 0 2px 0 #434a54,0 3px 1px rgba(0,0,0,0.3);
  -webkit-transform: rotate(0deg) scaleX(2);
  -ms-transform: rotate(0deg) scaleX(2);
  transform: rotate(0deg) scaleX(2);
}

.emotion-9 {
  background-color: aliceblue;
  overflow: hidden;
  padding: 10px;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

<Styled(div)>
  <div
    className="emotion-9"
  >
    <Tooltip
      content="Light years star stuff"
      hasArrow={true}
      isOpen={true}
      placement="top"
    >
      <WithTheme(Themed(Popover))
        content={[Function]}
        focusTriggerOnClose={false}
        hasArrow={true}
        id="tooltip-6"
        isOpen={true}
        onClose={[Function]}
        onOpen={[Function]}
        placement="top"
      >
        <Themed(Popover)
          content={[Function]}
          focusTriggerOnClose={false}
          hasArrow={true}
          id="tooltip-6"
          isOpen={true}
          onClose={[Function]}
          onOpen={[Function]}
          placement="top"
        >
          <ThemeProvider>
            <ThemeProvider>
              <Popover
                content={[Function]}
                focusTriggerOnClose={false}
                hasArrow={true}
                id="tooltip-6"
                isOpen={true}
                onClose={[Function]}
                onOpen={[Function]}
                placement="top"
              >
                <Manager>
                  <Styled(span)
                    content={[Function]}
                    focusTriggerOnClose={false}
                    hasArrow={true}
                    id="tooltip-6"
                    isOpen={true}
                    onClose={[Function]}
                    onOpen={[Function]}
                    placement="top"
                  >
                    <span
                      className="emotion-8"
                      content={[Function]}
                      id="tooltip-6"
                      onClose={[Function]}
                      onOpen={[Function]}
                    >
                      <PopoverTrigger
                        aria-describedby="tooltip-6-content"
                        aria-owns="tooltip-6-content"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        role="button"
                        size="large"
                        tabIndex={0}
                      >
                        <Reference>
                          <InnerReference
                            getReferenceRef={[Function]}
                          >
                            <Styled(span)>
                              <span
                                className="emotion-3"
                              >
                                <WithForwardRef(Button)
                                  aria-describedby="tooltip-6-content"
                                  aria-owns="tooltip-6-content"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  role="button"
                                  size="large"
                                  tabIndex={0}
                                >
                                  <Button
                                    aria-describedby="tooltip-6-content"
                                    aria-owns="tooltip-6-content"
                                    forwardedRef={null}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    role="button"
                                    size="large"
                                    tabIndex={0}
                                  >
                                    <Styled(button)
                                      aria-describedby="tooltip-6-content"
                                      aria-owns="tooltip-6-content"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                      role="button"
                                      size="large"
                                      tabIndex={0}
                                      text="Button"
                                    >
                                      <button
                                        aria-describedby="tooltip-6-content"
                                        aria-owns="tooltip-6-content"
                                        className="emotion-2"
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        role="button"
                                        size="large"
                                        tabIndex={0}
                                      >
                                        <Styled(span)>
                                          <span
                                            className="emotion-1"
                                          >
                                            <Styled(span)
                                              size="large"
                                            >
                                              <span
                                                className="emotion-0"
                                                size="large"
                                              >
                                                Button
                                              </span>
                                            </Styled(span)>
                                          </span>
                                        </Styled(span)>
                                      </button>
                                    </Styled(button)>
                                  </Button>
                                </WithForwardRef(Button)>
                              </span>
                            </Styled(span)>
                          </InnerReference>
                        </Reference>
                      </PopoverTrigger>
                      <PopoverContent
                        aria-live="polite"
                        hasArrow={true}
                        id="tooltip-6-content"
                        onBlur={[Function]}
                        placement="top"
                        role="tooltip"
                      >
                        <WithTheme(RtlPopper)
                          placement="top"
                        >
                          <RtlPopper
                            placement="top"
                          >
                            <Popper
                              placement="top"
                            >
                              <InnerPopper
                                eventsEnabled={true}
                                placement="top"
                                positionFixed={false}
                                referenceElement={
                                  .emotion-3 {
  display: inline-block;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

<span
                                    class="emotion-3"
                                  >
                                    <button
                                      aria-describedby="tooltip-6-content"
                                      aria-owns="tooltip-6-content"
                                      class="emotion-2"
                                      role="button"
                                      tabindex="0"
                                    >
                                      <span
                                        class="emotion-1"
                                      >
                                        <span
                                          class="emotion-0"
                                        >
                                          Button
                                        </span>
                                      </span>
                                    </button>
                                  </span>
                                }
                              >
                                <Styled(div)
                                  aria-live="polite"
                                  id="tooltip-6-content"
                                  onBlur={[Function]}
                                  role="tooltip"
                                  style={
                                    Object {
                                      "left": 0,
                                      "opacity": 0,
                                      "pointerEvents": "none",
                                      "position": "absolute",
                                      "top": 0,
                                    }
                                  }
                                >
                                  <div
                                    aria-live="polite"
                                    className="emotion-7"
                                    id="tooltip-6-content"
                                    onBlur={[Function]}
                                    role="tooltip"
                                    style={
                                      Object {
                                        "left": 0,
                                        "opacity": 0,
                                        "pointerEvents": "none",
                                        "position": "absolute",
                                        "top": 0,
                                      }
                                    }
                                  >
                                    <WithTheme(Themed(CardBlock))>
                                      <Themed(CardBlock)>
                                        <ThemeProvider>
                                          <ThemeProvider>
                                            <CardBlock>
                                              <Styled(div)>
                                                <div
                                                  className="emotion-5"
                                                >
                                                  <Styled(div)>
                                                    <div
                                                      className="emotion-4"
                                                    >
                                                      Light years star stuff
                                                    </div>
                                                  </Styled(div)>
                                                </div>
                                              </Styled(div)>
                                            </CardBlock>
                                          </ThemeProvider>
                                        </ThemeProvider>
                                      </Themed(CardBlock)>
                                    </WithTheme(Themed(CardBlock))>
                                    <PopoverArrow
                                      size="8px"
                                      style={Object {}}
                                    >
                                      <Styled(span)
                                        aria-hidden={true}
                                        size="8px"
                                        style={Object {}}
                                      >
                                        <span
                                          aria-hidden={true}
                                          className="emotion-6"
                                          size="8px"
                                          style={Object {}}
                                        >
                                          ▼
                                        </span>
                                      </Styled(span)>
                                    </PopoverArrow>
                                  </div>
                                </Styled(div)>
                              </InnerPopper>
                            </Popper>
                          </RtlPopper>
                        </WithTheme(RtlPopper)>
                      </PopoverContent>
                      <EventListener
                        listeners={
                          Array [
                            Object {
                              "event": "click",
                              "handler": [Function],
                              "options": true,
                              "target": "document",
                            },
                            Object {
                              "event": "keydown",
                              "handler": [Function],
                              "options": true,
                              "target": "document",
                            },
                          ]
                        }
                      />
                    </span>
                  </Styled(span)>
                </Manager>
              </Popover>
            </ThemeProvider>
          </ThemeProvider>
        </Themed(Popover)>
      </WithTheme(Themed(Popover))>
    </Tooltip>
  </div>
</Styled(div)>
`;

exports[`Tooltip demo examples Snapshots: placement 1`] = `
.emotion-8 {
  display: inline-block;
}

.emotion-3 {
  display: inline-block;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  fill: currentcolor;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
}

.emotion-7 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #434a54;
  border: 1px solid #434a54;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2),0 4px 8px 0 rgba(0,0,0,0.2);
  padding: 0.5em 0;
  max-width: 18em;
  z-index: 100;
}

.emotion-7 *,
.emotion-7 *::before,
.emotion-7 *::after {
  box-sizing: inherit;
}

.emotion-7[data-placement^="top"] {
  margin-bottom: 8px;
}

.emotion-7[data-placement^="bottom"] {
  margin-top: 8px;
}

.emotion-7[data-placement^="left"] {
  margin-right: 8px;
}

.emotion-7[data-placement^="right"] {
  margin-left: 8px;
}

.emotion-7[data-x-out-of-boundaries] {
  visibility: hidden;
}

.emotion-5 {
  margin-bottom: 0;
  margin-top: 0;
  padding-left: 1em;
  padding-right: 1em;
}

.emotion-5:last-child {
  margin-bottom: 0;
}

.emotion-4 {
  font-size: 0.875em;
  line-height: 1.5;
}

.emotion-6 {
  color: #434a54;
  display: none;
  font-size: 8px;
  margin: 8px;
  position: absolute;
  text-shadow: 0 2px 0 #434a54,0 3px 1px rgba(0,0,0,0.3);
  -webkit-transform: rotate(0deg) scaleX(2);
  -ms-transform: rotate(0deg) scaleX(2);
  transform: rotate(0deg) scaleX(2);
}

.emotion-9 {
  height: 200px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.emotion-2 {
  box-sizing: border-box;
  color: #de1b1b;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0.4375em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #b80d0d;
  color: #de1b1b;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #f55353;
  color: #de1b1b;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #b80d0d;
  color: #de1b1b;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #de1b1b;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

<Styled(div)>
  <div
    className="emotion-9"
  >
    <Tooltip
      content="Light years star stuff harvesting star light citizens of distant epochs."
      hasArrow={true}
      isOpen={true}
      placement="bottom"
    >
      <WithTheme(Themed(Popover))
        content={[Function]}
        focusTriggerOnClose={false}
        hasArrow={true}
        id="tooltip-4"
        isOpen={true}
        onClose={[Function]}
        onOpen={[Function]}
        placement="bottom"
      >
        <Themed(Popover)
          content={[Function]}
          focusTriggerOnClose={false}
          hasArrow={true}
          id="tooltip-4"
          isOpen={true}
          onClose={[Function]}
          onOpen={[Function]}
          placement="bottom"
        >
          <ThemeProvider>
            <ThemeProvider>
              <Popover
                content={[Function]}
                focusTriggerOnClose={false}
                hasArrow={true}
                id="tooltip-4"
                isOpen={true}
                onClose={[Function]}
                onOpen={[Function]}
                placement="bottom"
              >
                <Manager>
                  <Styled(span)
                    content={[Function]}
                    focusTriggerOnClose={false}
                    hasArrow={true}
                    id="tooltip-4"
                    isOpen={true}
                    onClose={[Function]}
                    onOpen={[Function]}
                    placement="bottom"
                  >
                    <span
                      className="emotion-8"
                      content={[Function]}
                      id="tooltip-4"
                      onClose={[Function]}
                      onOpen={[Function]}
                    >
                      <PopoverTrigger
                        aria-describedby="tooltip-4-content"
                        aria-owns="tooltip-4-content"
                        iconStart={
                          <IconDelete
                            title="delete"
                          />
                        }
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        role="button"
                        size="large"
                        tabIndex={0}
                        variant="danger"
                      >
                        <Reference>
                          <InnerReference
                            getReferenceRef={[Function]}
                          >
                            <Styled(span)>
                              <span
                                className="emotion-3"
                              >
                                <WithForwardRef(Button)
                                  aria-describedby="tooltip-4-content"
                                  aria-owns="tooltip-4-content"
                                  iconStart={
                                    <IconDelete
                                      title="delete"
                                    />
                                  }
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  role="button"
                                  size="large"
                                  tabIndex={0}
                                  variant="danger"
                                >
                                  <Button
                                    aria-describedby="tooltip-4-content"
                                    aria-owns="tooltip-4-content"
                                    forwardedRef={null}
                                    iconStart={
                                      <IconDelete
                                        title="delete"
                                      />
                                    }
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    role="button"
                                    size="large"
                                    tabIndex={0}
                                    variant="danger"
                                  >
                                    <Styled(button)
                                      aria-describedby="tooltip-4-content"
                                      aria-owns="tooltip-4-content"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                      role="button"
                                      size="large"
                                      tabIndex={0}
                                      variant="danger"
                                    >
                                      <button
                                        aria-describedby="tooltip-4-content"
                                        aria-owns="tooltip-4-content"
                                        className="emotion-2"
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        role="button"
                                        size="large"
                                        tabIndex={0}
                                      >
                                        <Styled(span)>
                                          <span
                                            className="emotion-1"
                                          >
                                            <IconDelete
                                              key="iconStart"
                                              size="1.5em"
                                              title="delete"
                                            >
                                              <Icon
                                                rtl={false}
                                                size="1.5em"
                                                title="delete"
                                              >
                                                <Styled(svg)
                                                  aria-hidden={null}
                                                  aria-labelledby="icon-title-icon-5"
                                                  focusable="false"
                                                  role="img"
                                                  rtl={false}
                                                  size="1.5em"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <svg
                                                    aria-hidden={null}
                                                    aria-labelledby="icon-title-icon-5"
                                                    className="emotion-0"
                                                    focusable="false"
                                                    role="img"
                                                    size="1.5em"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <title
                                                      id="icon-title-icon-5"
                                                    >
                                                      delete
                                                    </title>
                                                    <g>
                                                      <path
                                                        d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                                                      />
                                                    </g>
                                                  </svg>
                                                </Styled(svg)>
                                              </Icon>
                                            </IconDelete>
                                          </span>
                                        </Styled(span)>
                                      </button>
                                    </Styled(button)>
                                  </Button>
                                </WithForwardRef(Button)>
                              </span>
                            </Styled(span)>
                          </InnerReference>
                        </Reference>
                      </PopoverTrigger>
                      <PopoverContent
                        aria-live="polite"
                        hasArrow={true}
                        id="tooltip-4-content"
                        onBlur={[Function]}
                        placement="bottom"
                        role="tooltip"
                      >
                        <WithTheme(RtlPopper)
                          placement="bottom"
                        >
                          <RtlPopper
                            placement="bottom"
                          >
                            <Popper
                              placement="bottom"
                            >
                              <InnerPopper
                                eventsEnabled={true}
                                placement="bottom"
                                positionFixed={false}
                                referenceElement={
                                  .emotion-3 {
  display: inline-block;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-0 {
  fill: currentcolor;
  font-size: 16px;
  height: 1.5em;
  width: 1.5em;
}

.emotion-2 {
  box-sizing: border-box;
  color: #de1b1b;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0.4375em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #b80d0d;
  color: #de1b1b;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #f55353;
  color: #de1b1b;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #b80d0d;
  color: #de1b1b;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #de1b1b;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

<span
                                    class="emotion-3"
                                  >
                                    <button
                                      aria-describedby="tooltip-4-content"
                                      aria-owns="tooltip-4-content"
                                      class="emotion-2"
                                      role="button"
                                      tabindex="0"
                                    >
                                      <span
                                        class="emotion-1"
                                      >
                                        <svg
                                          aria-labelledby="icon-title-icon-5"
                                          class="emotion-0"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 24 24"
                                        >
                                          <title
                                            id="icon-title-icon-5"
                                          >
                                            delete
                                          </title>
                                          <g>
                                            <path
                                              d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                                            />
                                          </g>
                                        </svg>
                                      </span>
                                    </button>
                                  </span>
                                }
                              >
                                <Styled(div)
                                  aria-live="polite"
                                  id="tooltip-4-content"
                                  onBlur={[Function]}
                                  role="tooltip"
                                  style={
                                    Object {
                                      "left": 0,
                                      "opacity": 0,
                                      "pointerEvents": "none",
                                      "position": "absolute",
                                      "top": 0,
                                    }
                                  }
                                >
                                  <div
                                    aria-live="polite"
                                    className="emotion-7"
                                    id="tooltip-4-content"
                                    onBlur={[Function]}
                                    role="tooltip"
                                    style={
                                      Object {
                                        "left": 0,
                                        "opacity": 0,
                                        "pointerEvents": "none",
                                        "position": "absolute",
                                        "top": 0,
                                      }
                                    }
                                  >
                                    <WithTheme(Themed(CardBlock))>
                                      <Themed(CardBlock)>
                                        <ThemeProvider>
                                          <ThemeProvider>
                                            <CardBlock>
                                              <Styled(div)>
                                                <div
                                                  className="emotion-5"
                                                >
                                                  <Styled(div)>
                                                    <div
                                                      className="emotion-4"
                                                    >
                                                      Light years star stuff harvesting star light citizens of distant epochs.
                                                    </div>
                                                  </Styled(div)>
                                                </div>
                                              </Styled(div)>
                                            </CardBlock>
                                          </ThemeProvider>
                                        </ThemeProvider>
                                      </Themed(CardBlock)>
                                    </WithTheme(Themed(CardBlock))>
                                    <PopoverArrow
                                      size="8px"
                                      style={Object {}}
                                    >
                                      <Styled(span)
                                        aria-hidden={true}
                                        size="8px"
                                        style={Object {}}
                                      >
                                        <span
                                          aria-hidden={true}
                                          className="emotion-6"
                                          size="8px"
                                          style={Object {}}
                                        >
                                          ▼
                                        </span>
                                      </Styled(span)>
                                    </PopoverArrow>
                                  </div>
                                </Styled(div)>
                              </InnerPopper>
                            </Popper>
                          </RtlPopper>
                        </WithTheme(RtlPopper)>
                      </PopoverContent>
                      <EventListener
                        listeners={
                          Array [
                            Object {
                              "event": "click",
                              "handler": [Function],
                              "options": true,
                              "target": "document",
                            },
                            Object {
                              "event": "keydown",
                              "handler": [Function],
                              "options": true,
                              "target": "document",
                            },
                          ]
                        }
                      />
                    </span>
                  </Styled(span)>
                </Manager>
              </Popover>
            </ThemeProvider>
          </ThemeProvider>
        </Themed(Popover)>
      </WithTheme(Themed(Popover))>
    </Tooltip>
  </div>
</Styled(div)>
`;

exports[`Tooltip demo examples Snapshots: portal 1`] = `
.emotion-8 {
  display: inline-block;
}

.emotion-3 {
  display: inline-block;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-7 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #434a54;
  border: 1px solid #434a54;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2),0 4px 8px 0 rgba(0,0,0,0.2);
  padding: 0.5em 0;
  max-width: 18em;
  z-index: 100;
}

.emotion-7 *,
.emotion-7 *::before,
.emotion-7 *::after {
  box-sizing: inherit;
}

.emotion-7[data-placement^="top"] {
  margin-bottom: 8px;
}

.emotion-7[data-placement^="bottom"] {
  margin-top: 8px;
}

.emotion-7[data-placement^="left"] {
  margin-right: 8px;
}

.emotion-7[data-placement^="right"] {
  margin-left: 8px;
}

.emotion-7[data-x-out-of-boundaries] {
  visibility: hidden;
}

.emotion-5 {
  margin-bottom: 0;
  margin-top: 0;
  padding-left: 1em;
  padding-right: 1em;
}

.emotion-5:last-child {
  margin-bottom: 0;
}

.emotion-4 {
  font-size: 0.875em;
  line-height: 1.5;
}

.emotion-6 {
  color: #434a54;
  display: none;
  font-size: 8px;
  margin: 8px;
  position: absolute;
  text-shadow: 0 2px 0 #434a54,0 3px 1px rgba(0,0,0,0.3);
  -webkit-transform: rotate(0deg) scaleX(2);
  -ms-transform: rotate(0deg) scaleX(2);
  transform: rotate(0deg) scaleX(2);
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-17 {
  position: relative;
}

.emotion-10 {
  background-color: aliceblue;
  height: 360px;
  overflow: auto;
  position: relative;
}

.emotion-9 {
  height: 860px;
  width: 300vw;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.emotion-14 {
  left: 0;
  position: absolute;
  top: 0;
}

.emotion-13 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 1.5em;
  margin: 0;
  min-width: 1.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
  left: 0;
  position: absolute;
  top: 0;
}

.emotion-13 *,
.emotion-13 *::before,
.emotion-13 *::after {
  box-sizing: inherit;
}

.emotion-13:focus {
  border-color: #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-13:hover {
  background-color: #f5f7fa;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-13:focus:active,
.emotion-13:focus:hover {
  border-color: #1d5bbf;
}

.emotion-13:active {
  background-color: #ebeff5;
  color: #3272d9;
}

.emotion-13::-moz-focus-inner {
  border: 0;
}

.emotion-13 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-13 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-13 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-13 [role="img"]:only-child {
  margin: 0;
}

.emotion-11 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.75em;
  line-height: 2em;
}

<ScrollBox
  autoCenter={true}
  height={360}
>
  <Styled(div)>
    <div
      className="emotion-17"
    >
      <Styled(div)
        height={360}
      >
        <div
          className="emotion-10"
          height={360}
        >
          <Styled(div)
            scrollAreaHeight={360}
          >
            <div
              className="emotion-9"
            >
              <Tooltip
                content="Light years star stuff"
                hasArrow={true}
                isOpen={true}
                modifiers={
                  Object {
                    "preventOverflow": Object {
                      "escapeWithReference": true,
                    },
                  }
                }
                placement="bottom"
                usePortal={true}
              >
                <WithTheme(Themed(Popover))
                  content={[Function]}
                  focusTriggerOnClose={false}
                  hasArrow={true}
                  id="tooltip-8"
                  isOpen={true}
                  modifiers={
                    Object {
                      "preventOverflow": Object {
                        "escapeWithReference": true,
                      },
                    }
                  }
                  onClose={[Function]}
                  onOpen={[Function]}
                  placement="bottom"
                  usePortal={true}
                >
                  <Themed(Popover)
                    content={[Function]}
                    focusTriggerOnClose={false}
                    hasArrow={true}
                    id="tooltip-8"
                    isOpen={true}
                    modifiers={
                      Object {
                        "preventOverflow": Object {
                          "escapeWithReference": true,
                        },
                      }
                    }
                    onClose={[Function]}
                    onOpen={[Function]}
                    placement="bottom"
                    usePortal={true}
                  >
                    <ThemeProvider>
                      <ThemeProvider>
                        <Popover
                          content={[Function]}
                          focusTriggerOnClose={false}
                          hasArrow={true}
                          id="tooltip-8"
                          isOpen={true}
                          modifiers={
                            Object {
                              "preventOverflow": Object {
                                "escapeWithReference": true,
                              },
                            }
                          }
                          onClose={[Function]}
                          onOpen={[Function]}
                          placement="bottom"
                          usePortal={true}
                        >
                          <Manager>
                            <Styled(span)
                              content={[Function]}
                              focusTriggerOnClose={false}
                              hasArrow={true}
                              id="tooltip-8"
                              isOpen={true}
                              onClose={[Function]}
                              onOpen={[Function]}
                              placement="bottom"
                              usePortal={true}
                            >
                              <span
                                className="emotion-8"
                                content={[Function]}
                                id="tooltip-8"
                                onClose={[Function]}
                                onOpen={[Function]}
                              >
                                <PopoverTrigger
                                  aria-describedby="tooltip-8-content"
                                  aria-owns="tooltip-8-content"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  role="button"
                                  size="large"
                                  tabIndex={0}
                                >
                                  <Reference>
                                    <InnerReference
                                      getReferenceRef={[Function]}
                                    >
                                      <Styled(span)>
                                        <span
                                          className="emotion-3"
                                        >
                                          <WithForwardRef(Button)
                                            aria-describedby="tooltip-8-content"
                                            aria-owns="tooltip-8-content"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            role="button"
                                            size="large"
                                            tabIndex={0}
                                          >
                                            <Button
                                              aria-describedby="tooltip-8-content"
                                              aria-owns="tooltip-8-content"
                                              forwardedRef={null}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              onMouseEnter={[Function]}
                                              onMouseLeave={[Function]}
                                              role="button"
                                              size="large"
                                              tabIndex={0}
                                            >
                                              <Styled(button)
                                                aria-describedby="tooltip-8-content"
                                                aria-owns="tooltip-8-content"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                role="button"
                                                size="large"
                                                tabIndex={0}
                                                text="Button"
                                              >
                                                <button
                                                  aria-describedby="tooltip-8-content"
                                                  aria-owns="tooltip-8-content"
                                                  className="emotion-2"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onFocus={[Function]}
                                                  onMouseEnter={[Function]}
                                                  onMouseLeave={[Function]}
                                                  role="button"
                                                  size="large"
                                                  tabIndex={0}
                                                >
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-1"
                                                    >
                                                      <Styled(span)
                                                        size="large"
                                                      >
                                                        <span
                                                          className="emotion-0"
                                                          size="large"
                                                        >
                                                          Button
                                                        </span>
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </button>
                                              </Styled(button)>
                                            </Button>
                                          </WithForwardRef(Button)>
                                        </span>
                                      </Styled(span)>
                                    </InnerReference>
                                  </Reference>
                                </PopoverTrigger>
                                <Portal>
                                  <Portal
                                    containerInfo={
                                      .emotion-3 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #434a54;
  border: 1px solid #434a54;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2),0 4px 8px 0 rgba(0,0,0,0.2);
  padding: 0.5em 0;
  max-width: 18em;
  z-index: 100;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3[data-placement^="top"] {
  margin-bottom: 8px;
}

.emotion-3[data-placement^="bottom"] {
  margin-top: 8px;
}

.emotion-3[data-placement^="left"] {
  margin-right: 8px;
}

.emotion-3[data-placement^="right"] {
  margin-left: 8px;
}

.emotion-3[data-x-out-of-boundaries] {
  visibility: hidden;
}

.emotion-1 {
  margin-bottom: 0;
  margin-top: 0;
  padding-left: 1em;
  padding-right: 1em;
}

.emotion-1:last-child {
  margin-bottom: 0;
}

.emotion-0 {
  font-size: 0.875em;
  line-height: 1.5;
}

.emotion-2 {
  color: #434a54;
  display: none;
  font-size: 8px;
  margin: 8px;
  position: absolute;
  text-shadow: 0 2px 0 #434a54,0 3px 1px rgba(0,0,0,0.3);
  -webkit-transform: rotate(0deg) scaleX(2);
  -ms-transform: rotate(0deg) scaleX(2);
  transform: rotate(0deg) scaleX(2);
}

<div>
                                        <div
                                          aria-live="polite"
                                          class="emotion-3"
                                          id="tooltip-8-content"
                                          role="tooltip"
                                          style="position: absolute; top: 0px; left: 0px; opacity: 0; pointer-events: none;"
                                        >
                                          <div
                                            class="emotion-1"
                                          >
                                            <div
                                              class="emotion-0"
                                            >
                                              Light years star stuff
                                            </div>
                                          </div>
                                          <span
                                            aria-hidden="true"
                                            class="emotion-2"
                                          >
                                            ▼
                                          </span>
                                        </div>
                                      </div>
                                    }
                                  >
                                    <PopoverContent
                                      aria-live="polite"
                                      hasArrow={true}
                                      id="tooltip-8-content"
                                      modifiers={
                                        Object {
                                          "preventOverflow": Object {
                                            "escapeWithReference": true,
                                          },
                                        }
                                      }
                                      onBlur={[Function]}
                                      placement="bottom"
                                      role="tooltip"
                                    >
                                      <WithTheme(RtlPopper)
                                        modifiers={
                                          Object {
                                            "preventOverflow": Object {
                                              "escapeWithReference": true,
                                            },
                                          }
                                        }
                                        placement="bottom"
                                      >
                                        <RtlPopper
                                          modifiers={
                                            Object {
                                              "preventOverflow": Object {
                                                "escapeWithReference": true,
                                              },
                                            }
                                          }
                                          placement="bottom"
                                        >
                                          <Popper
                                            modifiers={
                                              Object {
                                                "preventOverflow": Object {
                                                  "escapeWithReference": true,
                                                },
                                              }
                                            }
                                            placement="bottom"
                                          >
                                            <InnerPopper
                                              eventsEnabled={true}
                                              modifiers={
                                                Object {
                                                  "preventOverflow": Object {
                                                    "escapeWithReference": true,
                                                  },
                                                }
                                              }
                                              placement="bottom"
                                              positionFixed={false}
                                              referenceElement={
                                                .emotion-3 {
  display: inline-block;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

<span
                                                  class="emotion-3"
                                                >
                                                  <button
                                                    aria-describedby="tooltip-8-content"
                                                    aria-owns="tooltip-8-content"
                                                    class="emotion-2"
                                                    role="button"
                                                    tabindex="0"
                                                  >
                                                    <span
                                                      class="emotion-1"
                                                    >
                                                      <span
                                                        class="emotion-0"
                                                      >
                                                        Button
                                                      </span>
                                                    </span>
                                                  </button>
                                                </span>
                                              }
                                            >
                                              <Styled(div)
                                                aria-live="polite"
                                                id="tooltip-8-content"
                                                onBlur={[Function]}
                                                role="tooltip"
                                                style={
                                                  Object {
                                                    "left": 0,
                                                    "opacity": 0,
                                                    "pointerEvents": "none",
                                                    "position": "absolute",
                                                    "top": 0,
                                                  }
                                                }
                                              >
                                                <div
                                                  aria-live="polite"
                                                  className="emotion-7"
                                                  id="tooltip-8-content"
                                                  onBlur={[Function]}
                                                  role="tooltip"
                                                  style={
                                                    Object {
                                                      "left": 0,
                                                      "opacity": 0,
                                                      "pointerEvents": "none",
                                                      "position": "absolute",
                                                      "top": 0,
                                                    }
                                                  }
                                                >
                                                  <WithTheme(Themed(CardBlock))>
                                                    <Themed(CardBlock)>
                                                      <ThemeProvider>
                                                        <ThemeProvider>
                                                          <CardBlock>
                                                            <Styled(div)>
                                                              <div
                                                                className="emotion-5"
                                                              >
                                                                <Styled(div)>
                                                                  <div
                                                                    className="emotion-4"
                                                                  >
                                                                    Light years star stuff
                                                                  </div>
                                                                </Styled(div)>
                                                              </div>
                                                            </Styled(div)>
                                                          </CardBlock>
                                                        </ThemeProvider>
                                                      </ThemeProvider>
                                                    </Themed(CardBlock)>
                                                  </WithTheme(Themed(CardBlock))>
                                                  <PopoverArrow
                                                    size="8px"
                                                    style={Object {}}
                                                  >
                                                    <Styled(span)
                                                      aria-hidden={true}
                                                      size="8px"
                                                      style={Object {}}
                                                    >
                                                      <span
                                                        aria-hidden={true}
                                                        className="emotion-6"
                                                        size="8px"
                                                        style={Object {}}
                                                      >
                                                        ▼
                                                      </span>
                                                    </Styled(span)>
                                                  </PopoverArrow>
                                                </div>
                                              </Styled(div)>
                                            </InnerPopper>
                                          </Popper>
                                        </RtlPopper>
                                      </WithTheme(RtlPopper)>
                                    </PopoverContent>
                                  </Portal>
                                </Portal>
                                <EventListener
                                  listeners={
                                    Array [
                                      Object {
                                        "event": "click",
                                        "handler": [Function],
                                        "options": true,
                                        "target": "document",
                                      },
                                      Object {
                                        "event": "keydown",
                                        "handler": [Function],
                                        "options": true,
                                        "target": "document",
                                      },
                                    ]
                                  }
                                />
                              </span>
                            </Styled(span)>
                          </Manager>
                        </Popover>
                      </ThemeProvider>
                    </ThemeProvider>
                  </Themed(Popover)>
                </WithTheme(Themed(Popover))>
              </Tooltip>
            </div>
          </Styled(div)>
        </div>
      </Styled(div)>
      <Styled(WithForwardRef(Button))
        minimal={true}
        onClick={[Function]}
        size="small"
      >
        <WithForwardRef(Button)
          className="emotion-14"
          minimal={true}
          onClick={[Function]}
          size="small"
        >
          <Button
            className="emotion-14"
            forwardedRef={null}
            minimal={true}
            onClick={[Function]}
            size="small"
          >
            <Styled(button)
              className="emotion-14"
              minimal={true}
              onClick={[Function]}
              size="small"
              text="Re-center"
            >
              <button
                className="emotion-13"
                onClick={[Function]}
                size="small"
              >
                <Styled(span)>
                  <span
                    className="emotion-1"
                  >
                    <Styled(span)
                      size="small"
                    >
                      <span
                        className="emotion-11"
                        size="small"
                      >
                        Re-center
                      </span>
                    </Styled(span)>
                  </span>
                </Styled(span)>
              </button>
            </Styled(button)>
          </Button>
        </WithForwardRef(Button)>
      </Styled(WithForwardRef(Button))>
    </div>
  </Styled(div)>
</ScrollBox>
`;

exports[`Tooltip demo examples Snapshots: prose 1`] = `
.emotion-6 {
  display: inline-block;
}

.emotion-1 {
  display: inline-block;
}

.emotion-7 {
  font-family: "Open Sans";
}

.emotion-0 {
  border-bottom-style: dashed;
  border-bottom-color: currentcolor;
  border-bottom-width: 1px;
}

.emotion-5 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #434a54;
  border: 1px solid #434a54;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2),0 4px 8px 0 rgba(0,0,0,0.2);
  padding: 0.5em 0;
  max-width: 18em;
  z-index: 100;
}

.emotion-5 *,
.emotion-5 *::before,
.emotion-5 *::after {
  box-sizing: inherit;
}

.emotion-5[data-placement^="top"] {
  margin-bottom: 8px;
}

.emotion-5[data-placement^="bottom"] {
  margin-top: 8px;
}

.emotion-5[data-placement^="left"] {
  margin-right: 8px;
}

.emotion-5[data-placement^="right"] {
  margin-left: 8px;
}

.emotion-5[data-x-out-of-boundaries] {
  visibility: hidden;
}

.emotion-3 {
  margin-bottom: 0;
  margin-top: 0;
  padding-left: 1em;
  padding-right: 1em;
}

.emotion-3:last-child {
  margin-bottom: 0;
}

.emotion-2 {
  font-size: 0.875em;
  line-height: 1.5;
}

.emotion-4 {
  color: #434a54;
  display: none;
  font-size: 8px;
  margin: 8px;
  position: absolute;
  text-shadow: 0 2px 0 #434a54,0 3px 1px rgba(0,0,0,0.3);
  -webkit-transform: rotate(0deg) scaleX(2);
  -ms-transform: rotate(0deg) scaleX(2);
  transform: rotate(0deg) scaleX(2);
}

<Styled(div)>
  <div
    className="emotion-7"
  >
    <p>
      Here's some prose with a 
      <Tooltip
        content="Light years star stuff"
        hasArrow={true}
        isOpen={true}
        placement="bottom"
        usePortal={true}
      >
        <WithTheme(Themed(Popover))
          content={[Function]}
          focusTriggerOnClose={false}
          hasArrow={true}
          id="tooltip-3"
          isOpen={true}
          onClose={[Function]}
          onOpen={[Function]}
          placement="bottom"
          usePortal={true}
        >
          <Themed(Popover)
            content={[Function]}
            focusTriggerOnClose={false}
            hasArrow={true}
            id="tooltip-3"
            isOpen={true}
            onClose={[Function]}
            onOpen={[Function]}
            placement="bottom"
            usePortal={true}
          >
            <ThemeProvider>
              <ThemeProvider>
                <Popover
                  content={[Function]}
                  focusTriggerOnClose={false}
                  hasArrow={true}
                  id="tooltip-3"
                  isOpen={true}
                  onClose={[Function]}
                  onOpen={[Function]}
                  placement="bottom"
                  usePortal={true}
                >
                  <Manager>
                    <Styled(span)
                      content={[Function]}
                      focusTriggerOnClose={false}
                      hasArrow={true}
                      id="tooltip-3"
                      isOpen={true}
                      onClose={[Function]}
                      onOpen={[Function]}
                      placement="bottom"
                      usePortal={true}
                    >
                      <span
                        className="emotion-6"
                        content={[Function]}
                        id="tooltip-3"
                        onClose={[Function]}
                        onOpen={[Function]}
                      >
                        <PopoverTrigger
                          aria-describedby="tooltip-3-content"
                          aria-owns="tooltip-3-content"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          role="button"
                          tabIndex={0}
                        >
                          <Reference>
                            <InnerReference
                              getReferenceRef={[Function]}
                            >
                              <Styled(span)>
                                <span
                                  className="emotion-1"
                                >
                                  <Styled(span)
                                    aria-describedby="tooltip-3-content"
                                    aria-owns="tooltip-3-content"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    <span
                                      aria-describedby="tooltip-3-content"
                                      aria-owns="tooltip-3-content"
                                      className="emotion-0"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      Tooltip
                                    </span>
                                  </Styled(span)>
                                </span>
                              </Styled(span)>
                            </InnerReference>
                          </Reference>
                        </PopoverTrigger>
                        <Portal>
                          <Portal
                            containerInfo={
                              .emotion-3 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #434a54;
  border: 1px solid #434a54;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2),0 4px 8px 0 rgba(0,0,0,0.2);
  padding: 0.5em 0;
  max-width: 18em;
  z-index: 100;
}

.emotion-3 *,
.emotion-3 *::before,
.emotion-3 *::after {
  box-sizing: inherit;
}

.emotion-3[data-placement^="top"] {
  margin-bottom: 8px;
}

.emotion-3[data-placement^="bottom"] {
  margin-top: 8px;
}

.emotion-3[data-placement^="left"] {
  margin-right: 8px;
}

.emotion-3[data-placement^="right"] {
  margin-left: 8px;
}

.emotion-3[data-x-out-of-boundaries] {
  visibility: hidden;
}

.emotion-1 {
  margin-bottom: 0;
  margin-top: 0;
  padding-left: 1em;
  padding-right: 1em;
}

.emotion-1:last-child {
  margin-bottom: 0;
}

.emotion-0 {
  font-size: 0.875em;
  line-height: 1.5;
}

.emotion-2 {
  color: #434a54;
  display: none;
  font-size: 8px;
  margin: 8px;
  position: absolute;
  text-shadow: 0 2px 0 #434a54,0 3px 1px rgba(0,0,0,0.3);
  -webkit-transform: rotate(0deg) scaleX(2);
  -ms-transform: rotate(0deg) scaleX(2);
  transform: rotate(0deg) scaleX(2);
}

<div>
                                <div
                                  aria-live="polite"
                                  class="emotion-3"
                                  id="tooltip-3-content"
                                  role="tooltip"
                                  style="position: absolute; top: 0px; left: 0px; opacity: 0; pointer-events: none;"
                                >
                                  <div
                                    class="emotion-1"
                                  >
                                    <div
                                      class="emotion-0"
                                    >
                                      Light years star stuff
                                    </div>
                                  </div>
                                  <span
                                    aria-hidden="true"
                                    class="emotion-2"
                                  >
                                    ▼
                                  </span>
                                </div>
                              </div>
                            }
                          >
                            <PopoverContent
                              aria-live="polite"
                              hasArrow={true}
                              id="tooltip-3-content"
                              onBlur={[Function]}
                              placement="bottom"
                              role="tooltip"
                            >
                              <WithTheme(RtlPopper)
                                placement="bottom"
                              >
                                <RtlPopper
                                  placement="bottom"
                                >
                                  <Popper
                                    placement="bottom"
                                  >
                                    <InnerPopper
                                      eventsEnabled={true}
                                      placement="bottom"
                                      positionFixed={false}
                                      referenceElement={
                                        .emotion-1 {
  display: inline-block;
}

.emotion-0 {
  border-bottom-style: dashed;
  border-bottom-color: currentcolor;
  border-bottom-width: 1px;
}

<span
                                          class="emotion-1"
                                        >
                                          <span
                                            aria-describedby="tooltip-3-content"
                                            aria-owns="tooltip-3-content"
                                            class="emotion-0"
                                            role="button"
                                            tabindex="0"
                                          >
                                            Tooltip
                                          </span>
                                        </span>
                                      }
                                    >
                                      <Styled(div)
                                        aria-live="polite"
                                        id="tooltip-3-content"
                                        onBlur={[Function]}
                                        role="tooltip"
                                        style={
                                          Object {
                                            "left": 0,
                                            "opacity": 0,
                                            "pointerEvents": "none",
                                            "position": "absolute",
                                            "top": 0,
                                          }
                                        }
                                      >
                                        <div
                                          aria-live="polite"
                                          className="emotion-5"
                                          id="tooltip-3-content"
                                          onBlur={[Function]}
                                          role="tooltip"
                                          style={
                                            Object {
                                              "left": 0,
                                              "opacity": 0,
                                              "pointerEvents": "none",
                                              "position": "absolute",
                                              "top": 0,
                                            }
                                          }
                                        >
                                          <WithTheme(Themed(CardBlock))>
                                            <Themed(CardBlock)>
                                              <ThemeProvider>
                                                <ThemeProvider>
                                                  <CardBlock>
                                                    <Styled(div)>
                                                      <div
                                                        className="emotion-3"
                                                      >
                                                        <Styled(div)>
                                                          <div
                                                            className="emotion-2"
                                                          >
                                                            Light years star stuff
                                                          </div>
                                                        </Styled(div)>
                                                      </div>
                                                    </Styled(div)>
                                                  </CardBlock>
                                                </ThemeProvider>
                                              </ThemeProvider>
                                            </Themed(CardBlock)>
                                          </WithTheme(Themed(CardBlock))>
                                          <PopoverArrow
                                            size="8px"
                                            style={Object {}}
                                          >
                                            <Styled(span)
                                              aria-hidden={true}
                                              size="8px"
                                              style={Object {}}
                                            >
                                              <span
                                                aria-hidden={true}
                                                className="emotion-4"
                                                size="8px"
                                                style={Object {}}
                                              >
                                                ▼
                                              </span>
                                            </Styled(span)>
                                          </PopoverArrow>
                                        </div>
                                      </Styled(div)>
                                    </InnerPopper>
                                  </Popper>
                                </RtlPopper>
                              </WithTheme(RtlPopper)>
                            </PopoverContent>
                          </Portal>
                        </Portal>
                        <EventListener
                          listeners={
                            Array [
                              Object {
                                "event": "click",
                                "handler": [Function],
                                "options": true,
                                "target": "document",
                              },
                              Object {
                                "event": "keydown",
                                "handler": [Function],
                                "options": true,
                                "target": "document",
                              },
                            ]
                          }
                        />
                      </span>
                    </Styled(span)>
                  </Manager>
                </Popover>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Popover)>
        </WithTheme(Themed(Popover))>
      </Tooltip>
       in the middle of it.
    </p>
  </div>
</Styled(div)>
`;

exports[`Tooltip demo examples Snapshots: scrolling-container 1`] = `
.emotion-8 {
  display: inline-block;
}

.emotion-3 {
  display: inline-block;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-7 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #434a54;
  border: 1px solid #434a54;
  border-radius: 0.1875em;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2),0 4px 8px 0 rgba(0,0,0,0.2);
  padding: 0.5em 0;
  max-width: 18em;
  z-index: 100;
}

.emotion-7 *,
.emotion-7 *::before,
.emotion-7 *::after {
  box-sizing: inherit;
}

.emotion-7[data-placement^="top"] {
  margin-bottom: 8px;
}

.emotion-7[data-placement^="bottom"] {
  margin-top: 8px;
}

.emotion-7[data-placement^="left"] {
  margin-right: 8px;
}

.emotion-7[data-placement^="right"] {
  margin-left: 8px;
}

.emotion-7[data-x-out-of-boundaries] {
  visibility: hidden;
}

.emotion-5 {
  margin-bottom: 0;
  margin-top: 0;
  padding-left: 1em;
  padding-right: 1em;
}

.emotion-5:last-child {
  margin-bottom: 0;
}

.emotion-4 {
  font-size: 0.875em;
  line-height: 1.5;
}

.emotion-6 {
  color: #434a54;
  display: none;
  font-size: 8px;
  margin: 8px;
  position: absolute;
  text-shadow: 0 2px 0 #434a54,0 3px 1px rgba(0,0,0,0.3);
  -webkit-transform: rotate(0deg) scaleX(2);
  -ms-transform: rotate(0deg) scaleX(2);
  transform: rotate(0deg) scaleX(2);
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-17 {
  position: relative;
}

.emotion-10 {
  background-color: aliceblue;
  height: 360px;
  overflow: auto;
  position: relative;
}

.emotion-9 {
  height: 860px;
  width: 300vw;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.emotion-14 {
  left: 0;
  position: absolute;
  top: 0;
}

.emotion-13 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 1.5em;
  margin: 0;
  min-width: 1.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
  left: 0;
  position: absolute;
  top: 0;
}

.emotion-13 *,
.emotion-13 *::before,
.emotion-13 *::after {
  box-sizing: inherit;
}

.emotion-13:focus {
  border-color: #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-13:hover {
  background-color: #f5f7fa;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-13:focus:active,
.emotion-13:focus:hover {
  border-color: #1d5bbf;
}

.emotion-13:active {
  background-color: #ebeff5;
  color: #3272d9;
}

.emotion-13::-moz-focus-inner {
  border: 0;
}

.emotion-13 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-13 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-13 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-13 [role="img"]:only-child {
  margin: 0;
}

.emotion-11 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.75em;
  line-height: 2em;
}

<ScrollBox
  autoCenter={true}
  height={360}
>
  <Styled(div)>
    <div
      className="emotion-17"
    >
      <Styled(div)
        height={360}
      >
        <div
          className="emotion-10"
          height={360}
        >
          <Styled(div)
            scrollAreaHeight={360}
          >
            <div
              className="emotion-9"
            >
              <Tooltip
                content="Light years star stuff"
                hasArrow={true}
                isOpen={true}
                placement="left"
              >
                <WithTheme(Themed(Popover))
                  content={[Function]}
                  focusTriggerOnClose={false}
                  hasArrow={true}
                  id="tooltip-7"
                  isOpen={true}
                  onClose={[Function]}
                  onOpen={[Function]}
                  placement="left"
                >
                  <Themed(Popover)
                    content={[Function]}
                    focusTriggerOnClose={false}
                    hasArrow={true}
                    id="tooltip-7"
                    isOpen={true}
                    onClose={[Function]}
                    onOpen={[Function]}
                    placement="left"
                  >
                    <ThemeProvider>
                      <ThemeProvider>
                        <Popover
                          content={[Function]}
                          focusTriggerOnClose={false}
                          hasArrow={true}
                          id="tooltip-7"
                          isOpen={true}
                          onClose={[Function]}
                          onOpen={[Function]}
                          placement="left"
                        >
                          <Manager>
                            <Styled(span)
                              content={[Function]}
                              focusTriggerOnClose={false}
                              hasArrow={true}
                              id="tooltip-7"
                              isOpen={true}
                              onClose={[Function]}
                              onOpen={[Function]}
                              placement="left"
                            >
                              <span
                                className="emotion-8"
                                content={[Function]}
                                id="tooltip-7"
                                onClose={[Function]}
                                onOpen={[Function]}
                              >
                                <PopoverTrigger
                                  aria-describedby="tooltip-7-content"
                                  aria-owns="tooltip-7-content"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  role="button"
                                  size="large"
                                  tabIndex={0}
                                >
                                  <Reference>
                                    <InnerReference
                                      getReferenceRef={[Function]}
                                    >
                                      <Styled(span)>
                                        <span
                                          className="emotion-3"
                                        >
                                          <WithForwardRef(Button)
                                            aria-describedby="tooltip-7-content"
                                            aria-owns="tooltip-7-content"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            role="button"
                                            size="large"
                                            tabIndex={0}
                                          >
                                            <Button
                                              aria-describedby="tooltip-7-content"
                                              aria-owns="tooltip-7-content"
                                              forwardedRef={null}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              onMouseEnter={[Function]}
                                              onMouseLeave={[Function]}
                                              role="button"
                                              size="large"
                                              tabIndex={0}
                                            >
                                              <Styled(button)
                                                aria-describedby="tooltip-7-content"
                                                aria-owns="tooltip-7-content"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                role="button"
                                                size="large"
                                                tabIndex={0}
                                                text="Button"
                                              >
                                                <button
                                                  aria-describedby="tooltip-7-content"
                                                  aria-owns="tooltip-7-content"
                                                  className="emotion-2"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onFocus={[Function]}
                                                  onMouseEnter={[Function]}
                                                  onMouseLeave={[Function]}
                                                  role="button"
                                                  size="large"
                                                  tabIndex={0}
                                                >
                                                  <Styled(span)>
                                                    <span
                                                      className="emotion-1"
                                                    >
                                                      <Styled(span)
                                                        size="large"
                                                      >
                                                        <span
                                                          className="emotion-0"
                                                          size="large"
                                                        >
                                                          Button
                                                        </span>
                                                      </Styled(span)>
                                                    </span>
                                                  </Styled(span)>
                                                </button>
                                              </Styled(button)>
                                            </Button>
                                          </WithForwardRef(Button)>
                                        </span>
                                      </Styled(span)>
                                    </InnerReference>
                                  </Reference>
                                </PopoverTrigger>
                                <PopoverContent
                                  aria-live="polite"
                                  hasArrow={true}
                                  id="tooltip-7-content"
                                  onBlur={[Function]}
                                  placement="left"
                                  role="tooltip"
                                >
                                  <WithTheme(RtlPopper)
                                    placement="left"
                                  >
                                    <RtlPopper
                                      placement="left"
                                    >
                                      <Popper
                                        placement="left"
                                      >
                                        <InnerPopper
                                          eventsEnabled={true}
                                          placement="left"
                                          positionFixed={false}
                                          referenceElement={
                                            .emotion-3 {
  display: inline-block;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-2 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-2 *,
.emotion-2 *::before,
.emotion-2 *::after {
  box-sizing: inherit;
}

.emotion-2:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-2:focus:active,
.emotion-2:focus:hover {
  border-color: #c8d1e0;
}

.emotion-2:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-2::-moz-focus-inner {
  border: 0;
}

.emotion-2 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-2 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-2 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-2 [role="img"]:only-child {
  margin: 0;
}

.emotion-0 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-0:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-0:last-child {
  padding-right: 0.5714285714285714em;
}

<span
                                              class="emotion-3"
                                            >
                                              <button
                                                aria-describedby="tooltip-7-content"
                                                aria-owns="tooltip-7-content"
                                                class="emotion-2"
                                                role="button"
                                                tabindex="0"
                                              >
                                                <span
                                                  class="emotion-1"
                                                >
                                                  <span
                                                    class="emotion-0"
                                                  >
                                                    Button
                                                  </span>
                                                </span>
                                              </button>
                                            </span>
                                          }
                                        >
                                          <Styled(div)
                                            aria-live="polite"
                                            id="tooltip-7-content"
                                            onBlur={[Function]}
                                            role="tooltip"
                                            style={
                                              Object {
                                                "left": 0,
                                                "opacity": 0,
                                                "pointerEvents": "none",
                                                "position": "absolute",
                                                "top": 0,
                                              }
                                            }
                                          >
                                            <div
                                              aria-live="polite"
                                              className="emotion-7"
                                              id="tooltip-7-content"
                                              onBlur={[Function]}
                                              role="tooltip"
                                              style={
                                                Object {
                                                  "left": 0,
                                                  "opacity": 0,
                                                  "pointerEvents": "none",
                                                  "position": "absolute",
                                                  "top": 0,
                                                }
                                              }
                                            >
                                              <WithTheme(Themed(CardBlock))>
                                                <Themed(CardBlock)>
                                                  <ThemeProvider>
                                                    <ThemeProvider>
                                                      <CardBlock>
                                                        <Styled(div)>
                                                          <div
                                                            className="emotion-5"
                                                          >
                                                            <Styled(div)>
                                                              <div
                                                                className="emotion-4"
                                                              >
                                                                Light years star stuff
                                                              </div>
                                                            </Styled(div)>
                                                          </div>
                                                        </Styled(div)>
                                                      </CardBlock>
                                                    </ThemeProvider>
                                                  </ThemeProvider>
                                                </Themed(CardBlock)>
                                              </WithTheme(Themed(CardBlock))>
                                              <PopoverArrow
                                                size="8px"
                                                style={Object {}}
                                              >
                                                <Styled(span)
                                                  aria-hidden={true}
                                                  size="8px"
                                                  style={Object {}}
                                                >
                                                  <span
                                                    aria-hidden={true}
                                                    className="emotion-6"
                                                    size="8px"
                                                    style={Object {}}
                                                  >
                                                    ▼
                                                  </span>
                                                </Styled(span)>
                                              </PopoverArrow>
                                            </div>
                                          </Styled(div)>
                                        </InnerPopper>
                                      </Popper>
                                    </RtlPopper>
                                  </WithTheme(RtlPopper)>
                                </PopoverContent>
                                <EventListener
                                  listeners={
                                    Array [
                                      Object {
                                        "event": "click",
                                        "handler": [Function],
                                        "options": true,
                                        "target": "document",
                                      },
                                      Object {
                                        "event": "keydown",
                                        "handler": [Function],
                                        "options": true,
                                        "target": "document",
                                      },
                                    ]
                                  }
                                />
                              </span>
                            </Styled(span)>
                          </Manager>
                        </Popover>
                      </ThemeProvider>
                    </ThemeProvider>
                  </Themed(Popover)>
                </WithTheme(Themed(Popover))>
              </Tooltip>
            </div>
          </Styled(div)>
        </div>
      </Styled(div)>
      <Styled(WithForwardRef(Button))
        minimal={true}
        onClick={[Function]}
        size="small"
      >
        <WithForwardRef(Button)
          className="emotion-14"
          minimal={true}
          onClick={[Function]}
          size="small"
        >
          <Button
            className="emotion-14"
            forwardedRef={null}
            minimal={true}
            onClick={[Function]}
            size="small"
          >
            <Styled(button)
              className="emotion-14"
              minimal={true}
              onClick={[Function]}
              size="small"
              text="Re-center"
            >
              <button
                className="emotion-13"
                onClick={[Function]}
                size="small"
              >
                <Styled(span)>
                  <span
                    className="emotion-1"
                  >
                    <Styled(span)
                      size="small"
                    >
                      <span
                        className="emotion-11"
                        size="small"
                      >
                        Re-center
                      </span>
                    </Styled(span)>
                  </span>
                </Styled(span)>
              </button>
            </Styled(button)>
          </Button>
        </WithForwardRef(Button)>
      </Styled(WithForwardRef(Button))>
    </div>
  </Styled(div)>
</ScrollBox>
`;
