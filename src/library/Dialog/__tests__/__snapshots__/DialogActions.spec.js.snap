// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DialogActions demo examples Snapshots: actions 1`] = `
.emotion-35 {
  padding: 1em;
  position: relative;
}

.emotion-35:not(:last-child) {
  padding-bottom: 0;
}

.emotion-35 > div {
  position: static;
}

.emotion-35 [role="document"] {
  width: auto;
}

.emotion-32 {
  position: static;
}

.emotion-33 {
  opacity: 0;
  position: relative;
  -webkit-transition: opacity 250ms ease;
  transition: opacity 250ms ease;
  will-change: opacity;
  z-index: 1600;
}

.emotion-31 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  bottom: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  position: static;
}

.emotion-31 *,
.emotion-31 *::before,
.emotion-31 *::after {
  box-sizing: inherit;
}

.emotion-0 {
  background-color: rgba(0,0,0,0.6);
  bottom: 0;
  left: 0;
  overflow: hidden;
  position: absolute;
  right: 0;
  top: 0;
}

.emotion-30 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-29 {
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 16px 24px 0 rgba(0,0,0,0.2),0 32px 24px -16px rgba(0,0,0,0.2);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  max-height: 80vh;
  min-width: 22.5em;
  pointer-events: all;
  position: relative;
  max-width: 40em;
  width: 50vw;
}

@media (min-height:43em) {
  .emotion-29 {
    max-height: 35em;
  }
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 *,
.emotion-6 *::before,
.emotion-6 *::after {
  box-sizing: inherit;
}

.emotion-5 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-5 > [role="img"] {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-right: 0.5em;
}

.emotion-2 {
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 {
  box-sizing: border-box;
  color: #58606e;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 18px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  font-weight: 700;
  margin-bottom: 0;
  margin-top: 0;
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 *,
.emotion-1 *::before,
.emotion-1 *::after {
  box-sizing: inherit;
}

.emotion-27 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  min-height: 0%;
  padding: 0;
}

.emotion-27:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-27:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-26 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  min-height: 0%;
  padding: 0;
}

.emotion-26 *,
.emotion-26 *::before,
.emotion-26 *::after {
  box-sizing: inherit;
}

.emotion-26:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-26:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-21 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-21 > div {
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-21 > div > :first-child {
  margin-top: 0;
}

.emotion-21 > div > :last-child {
  margin-bottom: 0;
}

.emotion-17 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
}

.emotion-16 {
  outline: 0;
  overflow-y: auto;
  -webkit-transition: outline 0.1s 0.25s;
  transition: outline 0.1s 0.25s;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
}

.emotion-16:focus {
  outline: 1px solid #1d5bbf;
}

.emotion-15 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.emotion-15 > *:not(:last-child) {
  margin-right: 0.5em;
}

.emotion-11 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-11 *,
.emotion-11 *::before,
.emotion-11 *::after {
  box-sizing: inherit;
}

.emotion-11:focus {
  border-color: #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-11:hover {
  background-color: #f5f7fa;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-11:focus:active,
.emotion-11:focus:hover {
  border-color: #1d5bbf;
}

.emotion-11:active {
  background-color: #ebeff5;
  color: #3272d9;
}

.emotion-11::-moz-focus-inner {
  border: 0;
}

.emotion-11 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-11 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-11 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-11 [role="img"]:only-child {
  margin: 0;
}

.emotion-10 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-9 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.2857142857142856em;
}

.emotion-14 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #3272d9;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-14 *,
.emotion-14 *::before,
.emotion-14 *::after {
  box-sizing: inherit;
}

.emotion-14:focus {
  background-color: #3272d9;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-14:hover {
  background-color: #5691f0;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-14:focus:active,
.emotion-14:focus:hover {
  border-color: transparent;
}

.emotion-14:active {
  background-color: #1d5bbf;
  border-color: #1d5bbf;
  color: #ffffff;
}

.emotion-14::-moz-focus-inner {
  border: 0;
}

.emotion-14 [role="img"] {
  box-sizing: content-box;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-14 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-14 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-14 [role="img"]:only-child {
  margin: 0;
}

<Styled(div)>
  <div
    className="emotion-35"
  >
    <withProps(Styled(Dialog))>
      <Styled(Dialog)
        closeButtonLabel="close"
        closeOnClickOutside={false}
        closeOnEscape={false}
        disableFocusOnOpen={true}
        disableFocusTrap={true}
        isOpen={true}
        preventCloseButtonClose={true}
        size="medium"
        usePortal={false}
      >
        <Dialog
          className="emotion-32"
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          size="medium"
          usePortal={false}
        >
          <WithTheme(Component)
            in={true}
            onEntered={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
          >
            <Component
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <Transition
                appear={true}
                enter={true}
                exit={true}
                in={true}
                mountOnEnter={true}
                onEnter={[Function]}
                onEntered={[Function]}
                onEntering={[Function]}
                onExit={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
                timeout={250}
                unmountOnExit={true}
              >
                <Styled(div)
                  state="entering"
                >
                  <div
                    className="emotion-33"
                  >
                    <FocusTrap
                      _createFocusTrap={[Function]}
                      active={false}
                      focusTrapOptions={Object {}}
                      paused={false}
                      tag="div"
                    >
                      <div>
                        <Styled(div)
                          aria-labelledby="dialog-1-title"
                          aria-modal={true}
                          className="emotion-32"
                          closeButtonLabel="close"
                          disableFocusOnOpen={true}
                          id="dialog-1"
                          preventCloseButtonClose={true}
                          role="dialog"
                          tabIndex="-1"
                        >
                          <div
                            aria-labelledby="dialog-1-title"
                            aria-modal={true}
                            className="emotion-31"
                            id="dialog-1"
                            role="dialog"
                            tabIndex="-1"
                          >
                            <Styled(div)>
                              <div
                                className="emotion-0"
                              />
                            </Styled(div)>
                            <Styled(div)>
                              <div
                                className="emotion-30"
                              >
                                <Styled(div)
                                  id="dialog-1-content"
                                  role="document"
                                  size="medium"
                                >
                                  <div
                                    className="emotion-29"
                                    id="dialog-1-content"
                                    role="document"
                                    size="medium"
                                  >
                                    <DialogHeader
                                      titleProps={
                                        Object {
                                          "id": "dialog-1-title",
                                          "variant": undefined,
                                        }
                                      }
                                    >
                                      <withProps(Styled(DialogRow))>
                                        <Styled(DialogRow)
                                          element="header"
                                        >
                                          <DialogRow
                                            className="emotion-7"
                                            element="header"
                                          >
                                            <Styled(header)
                                              className="emotion-7"
                                              element="header"
                                            >
                                              <header
                                                className="emotion-6"
                                              >
                                                <WithTheme(DialogTitle)
                                                  id="dialog-1-title"
                                                >
                                                  <DialogTitle
                                                    appearance="h4"
                                                    element="h1"
                                                    id="dialog-1-title"
                                                  >
                                                    <Styled(div)
                                                      appearance="h4"
                                                      element="h1"
                                                    >
                                                      <div
                                                        className="emotion-5"
                                                      >
                                                        <TitleContent
                                                          appearance="h4"
                                                          element="h1"
                                                          noMargins={true}
                                                        >
                                                          <Styled(Text)
                                                            appearance="h4"
                                                            element="h1"
                                                            id="dialog-1-title"
                                                            noMargins={true}
                                                          >
                                                            <Text
                                                              appearance="h4"
                                                              className="emotion-2"
                                                              element="h1"
                                                              id="dialog-1-title"
                                                              noMargins={true}
                                                            >
                                                              <TextProvider
                                                                appearance="h4"
                                                                className="emotion-2"
                                                                element="h1"
                                                                id="dialog-1-title"
                                                                noMargins={true}
                                                              >
                                                                <Styled(h1)
                                                                  appearance="h4"
                                                                  className="emotion-2"
                                                                  element="h1"
                                                                  id="dialog-1-title"
                                                                  noMargins={true}
                                                                >
                                                                  <h1
                                                                    className="emotion-1"
                                                                    id="dialog-1-title"
                                                                  >
                                                                    Title
                                                                  </h1>
                                                                </Styled(h1)>
                                                              </TextProvider>
                                                            </Text>
                                                          </Styled(Text)>
                                                        </TitleContent>
                                                      </div>
                                                    </Styled(div)>
                                                  </DialogTitle>
                                                </WithTheme(DialogTitle)>
                                              </header>
                                            </Styled(header)>
                                          </DialogRow>
                                        </Styled(DialogRow)>
                                      </withProps(Styled(DialogRow))>
                                    </DialogHeader>
                                    <DialogBody>
                                      <Styled(DialogRow)
                                        element="div"
                                      >
                                        <DialogRow
                                          className="emotion-27"
                                          element="div"
                                        >
                                          <Styled(div)
                                            className="emotion-27"
                                            element="div"
                                          >
                                            <div
                                              className="emotion-26"
                                            >
                                              <withProps(Styled(WithTheme(Themed(OverflowContainerWithShadows))))>
                                                <Styled(WithTheme(Themed(OverflowContainerWithShadows)))
                                                  scrollY={true}
                                                >
                                                  <WithTheme(Themed(OverflowContainerWithShadows))
                                                    className="emotion-21"
                                                    scrollY={true}
                                                  >
                                                    <Themed(OverflowContainerWithShadows)
                                                      className="emotion-21"
                                                      scrollY={true}
                                                    >
                                                      <ThemeProvider>
                                                        <ThemeProvider>
                                                          <OverflowContainerWithShadows
                                                            className="emotion-21"
                                                            scrollY={true}
                                                          >
                                                            <Styled(div)
                                                              className="emotion-21"
                                                              hasShadowBottom={false}
                                                              hasShadowTop={false}
                                                            >
                                                              <div
                                                                className="emotion-21"
                                                              >
                                                                <Styled(WithTheme(Themed(OverflowContainer)))
                                                                  containerRef={[Function]}
                                                                  onScroll={[Function]}
                                                                  scrollY={true}
                                                                >
                                                                  <WithTheme(Themed(OverflowContainer))
                                                                    className="emotion-17"
                                                                    containerRef={[Function]}
                                                                    onScroll={[Function]}
                                                                    scrollY={true}
                                                                  >
                                                                    <Themed(OverflowContainer)
                                                                      className="emotion-17"
                                                                      containerRef={[Function]}
                                                                      onScroll={[Function]}
                                                                      scrollY={true}
                                                                    >
                                                                      <ThemeProvider>
                                                                        <ThemeProvider>
                                                                          <OverflowContainer
                                                                            className="emotion-17"
                                                                            containerRef={[Function]}
                                                                            onScroll={[Function]}
                                                                            scrollY={true}
                                                                          >
                                                                            <Styled(div)
                                                                              className="emotion-17"
                                                                              containerRef={[Function]}
                                                                              onScroll={[Function]}
                                                                              scrollY={true}
                                                                            >
                                                                              <div
                                                                                className="emotion-16"
                                                                                onScroll={[Function]}
                                                                              >
                                                                                <DialogActions
                                                                                  key=".1"
                                                                                >
                                                                                  <Styled(div)>
                                                                                    <div
                                                                                      className="emotion-15"
                                                                                    >
                                                                                      <WithForwardRef(Button)
                                                                                        key="0"
                                                                                        minimal={true}
                                                                                        primary={false}
                                                                                        size="medium"
                                                                                      >
                                                                                        <Button
                                                                                          forwardedRef={null}
                                                                                          minimal={true}
                                                                                          primary={false}
                                                                                          size="medium"
                                                                                        >
                                                                                          <Styled(button)
                                                                                            minimal={true}
                                                                                            primary={false}
                                                                                            size="medium"
                                                                                            text="Cancel"
                                                                                          >
                                                                                            <button
                                                                                              className="emotion-11"
                                                                                              size="medium"
                                                                                            >
                                                                                              <Styled(span)>
                                                                                                <span
                                                                                                  className="emotion-10"
                                                                                                >
                                                                                                  <Styled(span)
                                                                                                    size="medium"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="emotion-9"
                                                                                                      size="medium"
                                                                                                    >
                                                                                                      Cancel
                                                                                                    </span>
                                                                                                  </Styled(span)>
                                                                                                </span>
                                                                                              </Styled(span)>
                                                                                            </button>
                                                                                          </Styled(button)>
                                                                                        </Button>
                                                                                      </WithForwardRef(Button)>
                                                                                      <WithForwardRef(Button)
                                                                                        key="1"
                                                                                        minimal={false}
                                                                                        primary={true}
                                                                                        size="medium"
                                                                                      >
                                                                                        <Button
                                                                                          forwardedRef={null}
                                                                                          minimal={false}
                                                                                          primary={true}
                                                                                          size="medium"
                                                                                        >
                                                                                          <Styled(button)
                                                                                            minimal={false}
                                                                                            primary={true}
                                                                                            size="medium"
                                                                                            text="Action"
                                                                                          >
                                                                                            <button
                                                                                              className="emotion-14"
                                                                                              size="medium"
                                                                                            >
                                                                                              <Styled(span)>
                                                                                                <span
                                                                                                  className="emotion-10"
                                                                                                >
                                                                                                  <Styled(span)
                                                                                                    size="medium"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="emotion-9"
                                                                                                      size="medium"
                                                                                                    >
                                                                                                      Action
                                                                                                    </span>
                                                                                                  </Styled(span)>
                                                                                                </span>
                                                                                              </Styled(span)>
                                                                                            </button>
                                                                                          </Styled(button)>
                                                                                        </Button>
                                                                                      </WithForwardRef(Button)>
                                                                                    </div>
                                                                                  </Styled(div)>
                                                                                </DialogActions>
                                                                                <EventListener
                                                                                  listeners={
                                                                                    Array [
                                                                                      Object {
                                                                                        "event": "resize",
                                                                                        "handler": [Function],
                                                                                        "target": "window",
                                                                                      },
                                                                                    ]
                                                                                  }
                                                                                />
                                                                              </div>
                                                                            </Styled(div)>
                                                                          </OverflowContainer>
                                                                        </ThemeProvider>
                                                                      </ThemeProvider>
                                                                    </Themed(OverflowContainer)>
                                                                  </WithTheme(Themed(OverflowContainer))>
                                                                </Styled(WithTheme(Themed(OverflowContainer)))>
                                                              </div>
                                                            </Styled(div)>
                                                          </OverflowContainerWithShadows>
                                                        </ThemeProvider>
                                                      </ThemeProvider>
                                                    </Themed(OverflowContainerWithShadows)>
                                                  </WithTheme(Themed(OverflowContainerWithShadows))>
                                                </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                              </withProps(Styled(WithTheme(Themed(OverflowContainerWithShadows))))>
                                            </div>
                                          </Styled(div)>
                                        </DialogRow>
                                      </Styled(DialogRow)>
                                    </DialogBody>
                                  </div>
                                </Styled(div)>
                              </div>
                            </Styled(div)>
                          </div>
                        </Styled(div)>
                      </div>
                    </FocusTrap>
                  </div>
                </Styled(div)>
              </Transition>
            </Component>
          </WithTheme(Component)>
        </Dialog>
      </Styled(Dialog)>
    </withProps(Styled(Dialog))>
  </div>
</Styled(div)>
`;

exports[`DialogActions demo examples Snapshots: variants 1`] = `
.emotion-35 {
  padding: 1em;
  position: relative;
}

.emotion-35:not(:last-child) {
  padding-bottom: 0;
}

.emotion-35 > div {
  position: static;
}

.emotion-35 [role="document"] {
  width: auto;
}

.emotion-32 {
  position: static;
}

.emotion-33 {
  opacity: 0;
  position: relative;
  -webkit-transition: opacity 250ms ease;
  transition: opacity 250ms ease;
  will-change: opacity;
  z-index: 1600;
}

.emotion-31 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  bottom: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  position: static;
}

.emotion-31 *,
.emotion-31 *::before,
.emotion-31 *::after {
  box-sizing: inherit;
}

.emotion-0 {
  background-color: rgba(0,0,0,0.6);
  bottom: 0;
  left: 0;
  overflow: hidden;
  position: absolute;
  right: 0;
  top: 0;
}

.emotion-30 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-29 {
  background-color: #ffffff;
  border: 1px solid #ebeff5;
  border-radius: 0.1875em;
  box-shadow: 0 16px 24px 0 rgba(0,0,0,0.2),0 32px 24px -16px rgba(0,0,0,0.2);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  max-height: 80vh;
  min-width: 22.5em;
  pointer-events: all;
  position: relative;
  max-width: 40em;
  width: 50vw;
}

@media (min-height:43em) {
  .emotion-29 {
    max-height: 35em;
  }
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.emotion-6 *,
.emotion-6 *::before,
.emotion-6 *::after {
  box-sizing: inherit;
}

.emotion-5 {
  color: #58606e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-5 > [role="img"] {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-right: 0.5em;
}

.emotion-2 {
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 {
  box-sizing: border-box;
  color: #58606e;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 18px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  font-weight: 700;
  margin-bottom: 0;
  margin-top: 0;
  color: inherit;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-1 *,
.emotion-1 *::before,
.emotion-1 *::after {
  box-sizing: inherit;
}

.emotion-27 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  min-height: 0%;
  padding: 0;
}

.emotion-27:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-27:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-26 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 0.875em;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  margin: 1.7142857142857142em 0;
  padding: 0 1.7142857142857142em;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-size: 0.875em;
  margin: 0;
  min-height: 0%;
  padding: 0;
}

.emotion-26 *,
.emotion-26 *::before,
.emotion-26 *::after {
  box-sizing: inherit;
}

.emotion-26:first-child {
  margin-top: 1.7142857142857142em;
}

.emotion-26:last-child {
  margin-bottom: 1.7142857142857142em;
}

.emotion-21 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.emotion-21 > div {
  padding-left: 1.7142857142857142em;
  padding-right: 1.7142857142857142em;
}

.emotion-21 > div > :first-child {
  margin-top: 0;
}

.emotion-21 > div > :last-child {
  margin-bottom: 0;
}

.emotion-17 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
}

.emotion-16 {
  outline: 0;
  overflow-y: auto;
  -webkit-transition: outline 0.1s 0.25s;
  transition: outline 0.1s 0.25s;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  overflow-x: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
}

.emotion-16:focus {
  outline: 1px solid #1d5bbf;
}

.emotion-15 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.emotion-15 > *:not(:last-child) {
  margin-right: 0.5em;
}

.emotion-11 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: transparent;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-11 *,
.emotion-11 *::before,
.emotion-11 *::after {
  box-sizing: inherit;
}

.emotion-11:focus {
  border-color: #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-11:hover {
  background-color: #f5f7fa;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-11:focus:active,
.emotion-11:focus:hover {
  border-color: #1d5bbf;
}

.emotion-11:active {
  background-color: #ebeff5;
  color: #3272d9;
}

.emotion-11::-moz-focus-inner {
  border: 0;
}

.emotion-11 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-11 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-11 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-11 [role="img"]:only-child {
  margin: 0;
}

.emotion-10 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-9 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.2857142857142856em;
}

.emotion-14 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #2a854e;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-14 *,
.emotion-14 *::before,
.emotion-14 *::after {
  box-sizing: inherit;
}

.emotion-14:focus {
  background-color: #2a854e;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #20693d;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-14:hover {
  background-color: #3ba164;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-14:focus:active,
.emotion-14:focus:hover {
  border-color: transparent;
}

.emotion-14:active {
  background-color: #20693d;
  border-color: #20693d;
  color: #ffffff;
}

.emotion-14::-moz-focus-inner {
  border: 0;
}

.emotion-14 [role="img"] {
  box-sizing: content-box;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-14 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-14 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-14 [role="img"]:only-child {
  margin: 0;
}

.emotion-50 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ad5f00;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-50 *,
.emotion-50 *::before,
.emotion-50 *::after {
  box-sizing: inherit;
}

.emotion-50:focus {
  background-color: #ad5f00;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #8a4d03;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-50:hover {
  background-color: #cf7911;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-50:focus:active,
.emotion-50:focus:hover {
  border-color: transparent;
}

.emotion-50:active {
  background-color: #8a4d03;
  border-color: #8a4d03;
  color: #ffffff;
}

.emotion-50::-moz-focus-inner {
  border: 0;
}

.emotion-50 [role="img"] {
  box-sizing: content-box;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-50 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-50 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-50 [role="img"]:only-child {
  margin: 0;
}

.emotion-86 {
  box-sizing: border-box;
  color: #ffffff;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #de1b1b;
  border-color: transparent;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-86 *,
.emotion-86 *::before,
.emotion-86 *::after {
  box-sizing: inherit;
}

.emotion-86:focus {
  background-color: #de1b1b;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #b80d0d;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-86:hover {
  background-color: #f55353;
  color: #ffffff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-86:focus:active,
.emotion-86:focus:hover {
  border-color: transparent;
}

.emotion-86:active {
  background-color: #b80d0d;
  border-color: #b80d0d;
  color: #ffffff;
}

.emotion-86::-moz-focus-inner {
  border: 0;
}

.emotion-86 [role="img"] {
  box-sizing: content-box;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-86 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-86 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-86 [role="img"]:only-child {
  margin: 0;
}

<Component>
  <Styled(div)
    key="success"
  >
    <div
      className="emotion-35"
    >
      <withProps(Styled(Dialog))>
        <Styled(Dialog)
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          size="medium"
          usePortal={false}
        >
          <Dialog
            className="emotion-32"
            closeButtonLabel="close"
            closeOnClickOutside={false}
            closeOnEscape={false}
            disableFocusOnOpen={true}
            disableFocusTrap={true}
            isOpen={true}
            preventCloseButtonClose={true}
            size="medium"
            usePortal={false}
          >
            <WithTheme(Component)
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <Component
                in={true}
                onEntered={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
              >
                <Transition
                  appear={true}
                  enter={true}
                  exit={true}
                  in={true}
                  mountOnEnter={true}
                  onEnter={[Function]}
                  onEntered={[Function]}
                  onEntering={[Function]}
                  onExit={[Function]}
                  onExited={[Function]}
                  onExiting={[Function]}
                  timeout={250}
                  unmountOnExit={true}
                >
                  <Styled(div)
                    state="entering"
                  >
                    <div
                      className="emotion-33"
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={Object {}}
                        paused={false}
                        tag="div"
                      >
                        <div>
                          <Styled(div)
                            aria-labelledby="dialog-2-title"
                            aria-modal={true}
                            className="emotion-32"
                            closeButtonLabel="close"
                            disableFocusOnOpen={true}
                            id="dialog-2"
                            preventCloseButtonClose={true}
                            role="dialog"
                            tabIndex="-1"
                          >
                            <div
                              aria-labelledby="dialog-2-title"
                              aria-modal={true}
                              className="emotion-31"
                              id="dialog-2"
                              role="dialog"
                              tabIndex="-1"
                            >
                              <Styled(div)>
                                <div
                                  className="emotion-0"
                                />
                              </Styled(div)>
                              <Styled(div)>
                                <div
                                  className="emotion-30"
                                >
                                  <Styled(div)
                                    id="dialog-2-content"
                                    role="document"
                                    size="medium"
                                  >
                                    <div
                                      className="emotion-29"
                                      id="dialog-2-content"
                                      role="document"
                                      size="medium"
                                    >
                                      <DialogHeader
                                        titleProps={
                                          Object {
                                            "id": "dialog-2-title",
                                            "variant": undefined,
                                          }
                                        }
                                      >
                                        <withProps(Styled(DialogRow))>
                                          <Styled(DialogRow)
                                            element="header"
                                          >
                                            <DialogRow
                                              className="emotion-7"
                                              element="header"
                                            >
                                              <Styled(header)
                                                className="emotion-7"
                                                element="header"
                                              >
                                                <header
                                                  className="emotion-6"
                                                >
                                                  <WithTheme(DialogTitle)
                                                    id="dialog-2-title"
                                                  >
                                                    <DialogTitle
                                                      appearance="h4"
                                                      element="h1"
                                                      id="dialog-2-title"
                                                    >
                                                      <Styled(div)
                                                        appearance="h4"
                                                        element="h1"
                                                      >
                                                        <div
                                                          className="emotion-5"
                                                        >
                                                          <TitleContent
                                                            appearance="h4"
                                                            element="h1"
                                                            noMargins={true}
                                                          >
                                                            <Styled(Text)
                                                              appearance="h4"
                                                              element="h1"
                                                              id="dialog-2-title"
                                                              noMargins={true}
                                                            >
                                                              <Text
                                                                appearance="h4"
                                                                className="emotion-2"
                                                                element="h1"
                                                                id="dialog-2-title"
                                                                noMargins={true}
                                                              >
                                                                <TextProvider
                                                                  appearance="h4"
                                                                  className="emotion-2"
                                                                  element="h1"
                                                                  id="dialog-2-title"
                                                                  noMargins={true}
                                                                >
                                                                  <Styled(h1)
                                                                    appearance="h4"
                                                                    className="emotion-2"
                                                                    element="h1"
                                                                    id="dialog-2-title"
                                                                    noMargins={true}
                                                                  >
                                                                    <h1
                                                                      className="emotion-1"
                                                                      id="dialog-2-title"
                                                                    >
                                                                      Title
                                                                    </h1>
                                                                  </Styled(h1)>
                                                                </TextProvider>
                                                              </Text>
                                                            </Styled(Text)>
                                                          </TitleContent>
                                                        </div>
                                                      </Styled(div)>
                                                    </DialogTitle>
                                                  </WithTheme(DialogTitle)>
                                                </header>
                                              </Styled(header)>
                                            </DialogRow>
                                          </Styled(DialogRow)>
                                        </withProps(Styled(DialogRow))>
                                      </DialogHeader>
                                      <DialogBody>
                                        <Styled(DialogRow)
                                          element="div"
                                        >
                                          <DialogRow
                                            className="emotion-27"
                                            element="div"
                                          >
                                            <Styled(div)
                                              className="emotion-27"
                                              element="div"
                                            >
                                              <div
                                                className="emotion-26"
                                              >
                                                <withProps(Styled(WithTheme(Themed(OverflowContainerWithShadows))))>
                                                  <Styled(WithTheme(Themed(OverflowContainerWithShadows)))
                                                    scrollY={true}
                                                  >
                                                    <WithTheme(Themed(OverflowContainerWithShadows))
                                                      className="emotion-21"
                                                      scrollY={true}
                                                    >
                                                      <Themed(OverflowContainerWithShadows)
                                                        className="emotion-21"
                                                        scrollY={true}
                                                      >
                                                        <ThemeProvider>
                                                          <ThemeProvider>
                                                            <OverflowContainerWithShadows
                                                              className="emotion-21"
                                                              scrollY={true}
                                                            >
                                                              <Styled(div)
                                                                className="emotion-21"
                                                                hasShadowBottom={false}
                                                                hasShadowTop={false}
                                                              >
                                                                <div
                                                                  className="emotion-21"
                                                                >
                                                                  <Styled(WithTheme(Themed(OverflowContainer)))
                                                                    containerRef={[Function]}
                                                                    onScroll={[Function]}
                                                                    scrollY={true}
                                                                  >
                                                                    <WithTheme(Themed(OverflowContainer))
                                                                      className="emotion-17"
                                                                      containerRef={[Function]}
                                                                      onScroll={[Function]}
                                                                      scrollY={true}
                                                                    >
                                                                      <Themed(OverflowContainer)
                                                                        className="emotion-17"
                                                                        containerRef={[Function]}
                                                                        onScroll={[Function]}
                                                                        scrollY={true}
                                                                      >
                                                                        <ThemeProvider>
                                                                          <ThemeProvider>
                                                                            <OverflowContainer
                                                                              className="emotion-17"
                                                                              containerRef={[Function]}
                                                                              onScroll={[Function]}
                                                                              scrollY={true}
                                                                            >
                                                                              <Styled(div)
                                                                                className="emotion-17"
                                                                                containerRef={[Function]}
                                                                                onScroll={[Function]}
                                                                                scrollY={true}
                                                                              >
                                                                                <div
                                                                                  className="emotion-16"
                                                                                  onScroll={[Function]}
                                                                                >
                                                                                  <DialogActions
                                                                                    key=".1"
                                                                                    variant="success"
                                                                                  >
                                                                                    <Styled(div)>
                                                                                      <div
                                                                                        className="emotion-15"
                                                                                      >
                                                                                        <WithForwardRef(Button)
                                                                                          key="0"
                                                                                          minimal={true}
                                                                                          primary={false}
                                                                                          size="medium"
                                                                                        >
                                                                                          <Button
                                                                                            forwardedRef={null}
                                                                                            minimal={true}
                                                                                            primary={false}
                                                                                            size="medium"
                                                                                          >
                                                                                            <Styled(button)
                                                                                              minimal={true}
                                                                                              primary={false}
                                                                                              size="medium"
                                                                                              text="Cancel"
                                                                                            >
                                                                                              <button
                                                                                                className="emotion-11"
                                                                                                size="medium"
                                                                                              >
                                                                                                <Styled(span)>
                                                                                                  <span
                                                                                                    className="emotion-10"
                                                                                                  >
                                                                                                    <Styled(span)
                                                                                                      size="medium"
                                                                                                    >
                                                                                                      <span
                                                                                                        className="emotion-9"
                                                                                                        size="medium"
                                                                                                      >
                                                                                                        Cancel
                                                                                                      </span>
                                                                                                    </Styled(span)>
                                                                                                  </span>
                                                                                                </Styled(span)>
                                                                                              </button>
                                                                                            </Styled(button)>
                                                                                          </Button>
                                                                                        </WithForwardRef(Button)>
                                                                                        <WithForwardRef(Button)
                                                                                          key="1"
                                                                                          minimal={false}
                                                                                          primary={true}
                                                                                          size="medium"
                                                                                          variant="success"
                                                                                        >
                                                                                          <Button
                                                                                            forwardedRef={null}
                                                                                            minimal={false}
                                                                                            primary={true}
                                                                                            size="medium"
                                                                                            variant="success"
                                                                                          >
                                                                                            <Styled(button)
                                                                                              minimal={false}
                                                                                              primary={true}
                                                                                              size="medium"
                                                                                              text="Success"
                                                                                              variant="success"
                                                                                            >
                                                                                              <button
                                                                                                className="emotion-14"
                                                                                                size="medium"
                                                                                              >
                                                                                                <Styled(span)>
                                                                                                  <span
                                                                                                    className="emotion-10"
                                                                                                  >
                                                                                                    <Styled(span)
                                                                                                      size="medium"
                                                                                                    >
                                                                                                      <span
                                                                                                        className="emotion-9"
                                                                                                        size="medium"
                                                                                                      >
                                                                                                        Success
                                                                                                      </span>
                                                                                                    </Styled(span)>
                                                                                                  </span>
                                                                                                </Styled(span)>
                                                                                              </button>
                                                                                            </Styled(button)>
                                                                                          </Button>
                                                                                        </WithForwardRef(Button)>
                                                                                      </div>
                                                                                    </Styled(div)>
                                                                                  </DialogActions>
                                                                                  <EventListener
                                                                                    listeners={
                                                                                      Array [
                                                                                        Object {
                                                                                          "event": "resize",
                                                                                          "handler": [Function],
                                                                                          "target": "window",
                                                                                        },
                                                                                      ]
                                                                                    }
                                                                                  />
                                                                                </div>
                                                                              </Styled(div)>
                                                                            </OverflowContainer>
                                                                          </ThemeProvider>
                                                                        </ThemeProvider>
                                                                      </Themed(OverflowContainer)>
                                                                    </WithTheme(Themed(OverflowContainer))>
                                                                  </Styled(WithTheme(Themed(OverflowContainer)))>
                                                                </div>
                                                              </Styled(div)>
                                                            </OverflowContainerWithShadows>
                                                          </ThemeProvider>
                                                        </ThemeProvider>
                                                      </Themed(OverflowContainerWithShadows)>
                                                    </WithTheme(Themed(OverflowContainerWithShadows))>
                                                  </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                                </withProps(Styled(WithTheme(Themed(OverflowContainerWithShadows))))>
                                              </div>
                                            </Styled(div)>
                                          </DialogRow>
                                        </Styled(DialogRow)>
                                      </DialogBody>
                                    </div>
                                  </Styled(div)>
                                </div>
                              </Styled(div)>
                            </div>
                          </Styled(div)>
                        </div>
                      </FocusTrap>
                    </div>
                  </Styled(div)>
                </Transition>
              </Component>
            </WithTheme(Component)>
          </Dialog>
        </Styled(Dialog)>
      </withProps(Styled(Dialog))>
    </div>
  </Styled(div)>
  <Styled(div)
    key="warning"
  >
    <div
      className="emotion-35"
    >
      <withProps(Styled(Dialog))>
        <Styled(Dialog)
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          size="medium"
          usePortal={false}
        >
          <Dialog
            className="emotion-32"
            closeButtonLabel="close"
            closeOnClickOutside={false}
            closeOnEscape={false}
            disableFocusOnOpen={true}
            disableFocusTrap={true}
            isOpen={true}
            preventCloseButtonClose={true}
            size="medium"
            usePortal={false}
          >
            <WithTheme(Component)
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <Component
                in={true}
                onEntered={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
              >
                <Transition
                  appear={true}
                  enter={true}
                  exit={true}
                  in={true}
                  mountOnEnter={true}
                  onEnter={[Function]}
                  onEntered={[Function]}
                  onEntering={[Function]}
                  onExit={[Function]}
                  onExited={[Function]}
                  onExiting={[Function]}
                  timeout={250}
                  unmountOnExit={true}
                >
                  <Styled(div)
                    state="entering"
                  >
                    <div
                      className="emotion-33"
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={Object {}}
                        paused={false}
                        tag="div"
                      >
                        <div>
                          <Styled(div)
                            aria-labelledby="dialog-3-title"
                            aria-modal={true}
                            className="emotion-32"
                            closeButtonLabel="close"
                            disableFocusOnOpen={true}
                            id="dialog-3"
                            preventCloseButtonClose={true}
                            role="dialog"
                            tabIndex="-1"
                          >
                            <div
                              aria-labelledby="dialog-3-title"
                              aria-modal={true}
                              className="emotion-31"
                              id="dialog-3"
                              role="dialog"
                              tabIndex="-1"
                            >
                              <Styled(div)>
                                <div
                                  className="emotion-0"
                                />
                              </Styled(div)>
                              <Styled(div)>
                                <div
                                  className="emotion-30"
                                >
                                  <Styled(div)
                                    id="dialog-3-content"
                                    role="document"
                                    size="medium"
                                  >
                                    <div
                                      className="emotion-29"
                                      id="dialog-3-content"
                                      role="document"
                                      size="medium"
                                    >
                                      <DialogHeader
                                        titleProps={
                                          Object {
                                            "id": "dialog-3-title",
                                            "variant": undefined,
                                          }
                                        }
                                      >
                                        <withProps(Styled(DialogRow))>
                                          <Styled(DialogRow)
                                            element="header"
                                          >
                                            <DialogRow
                                              className="emotion-7"
                                              element="header"
                                            >
                                              <Styled(header)
                                                className="emotion-7"
                                                element="header"
                                              >
                                                <header
                                                  className="emotion-6"
                                                >
                                                  <WithTheme(DialogTitle)
                                                    id="dialog-3-title"
                                                  >
                                                    <DialogTitle
                                                      appearance="h4"
                                                      element="h1"
                                                      id="dialog-3-title"
                                                    >
                                                      <Styled(div)
                                                        appearance="h4"
                                                        element="h1"
                                                      >
                                                        <div
                                                          className="emotion-5"
                                                        >
                                                          <TitleContent
                                                            appearance="h4"
                                                            element="h1"
                                                            noMargins={true}
                                                          >
                                                            <Styled(Text)
                                                              appearance="h4"
                                                              element="h1"
                                                              id="dialog-3-title"
                                                              noMargins={true}
                                                            >
                                                              <Text
                                                                appearance="h4"
                                                                className="emotion-2"
                                                                element="h1"
                                                                id="dialog-3-title"
                                                                noMargins={true}
                                                              >
                                                                <TextProvider
                                                                  appearance="h4"
                                                                  className="emotion-2"
                                                                  element="h1"
                                                                  id="dialog-3-title"
                                                                  noMargins={true}
                                                                >
                                                                  <Styled(h1)
                                                                    appearance="h4"
                                                                    className="emotion-2"
                                                                    element="h1"
                                                                    id="dialog-3-title"
                                                                    noMargins={true}
                                                                  >
                                                                    <h1
                                                                      className="emotion-1"
                                                                      id="dialog-3-title"
                                                                    >
                                                                      Title
                                                                    </h1>
                                                                  </Styled(h1)>
                                                                </TextProvider>
                                                              </Text>
                                                            </Styled(Text)>
                                                          </TitleContent>
                                                        </div>
                                                      </Styled(div)>
                                                    </DialogTitle>
                                                  </WithTheme(DialogTitle)>
                                                </header>
                                              </Styled(header)>
                                            </DialogRow>
                                          </Styled(DialogRow)>
                                        </withProps(Styled(DialogRow))>
                                      </DialogHeader>
                                      <DialogBody>
                                        <Styled(DialogRow)
                                          element="div"
                                        >
                                          <DialogRow
                                            className="emotion-27"
                                            element="div"
                                          >
                                            <Styled(div)
                                              className="emotion-27"
                                              element="div"
                                            >
                                              <div
                                                className="emotion-26"
                                              >
                                                <withProps(Styled(WithTheme(Themed(OverflowContainerWithShadows))))>
                                                  <Styled(WithTheme(Themed(OverflowContainerWithShadows)))
                                                    scrollY={true}
                                                  >
                                                    <WithTheme(Themed(OverflowContainerWithShadows))
                                                      className="emotion-21"
                                                      scrollY={true}
                                                    >
                                                      <Themed(OverflowContainerWithShadows)
                                                        className="emotion-21"
                                                        scrollY={true}
                                                      >
                                                        <ThemeProvider>
                                                          <ThemeProvider>
                                                            <OverflowContainerWithShadows
                                                              className="emotion-21"
                                                              scrollY={true}
                                                            >
                                                              <Styled(div)
                                                                className="emotion-21"
                                                                hasShadowBottom={false}
                                                                hasShadowTop={false}
                                                              >
                                                                <div
                                                                  className="emotion-21"
                                                                >
                                                                  <Styled(WithTheme(Themed(OverflowContainer)))
                                                                    containerRef={[Function]}
                                                                    onScroll={[Function]}
                                                                    scrollY={true}
                                                                  >
                                                                    <WithTheme(Themed(OverflowContainer))
                                                                      className="emotion-17"
                                                                      containerRef={[Function]}
                                                                      onScroll={[Function]}
                                                                      scrollY={true}
                                                                    >
                                                                      <Themed(OverflowContainer)
                                                                        className="emotion-17"
                                                                        containerRef={[Function]}
                                                                        onScroll={[Function]}
                                                                        scrollY={true}
                                                                      >
                                                                        <ThemeProvider>
                                                                          <ThemeProvider>
                                                                            <OverflowContainer
                                                                              className="emotion-17"
                                                                              containerRef={[Function]}
                                                                              onScroll={[Function]}
                                                                              scrollY={true}
                                                                            >
                                                                              <Styled(div)
                                                                                className="emotion-17"
                                                                                containerRef={[Function]}
                                                                                onScroll={[Function]}
                                                                                scrollY={true}
                                                                              >
                                                                                <div
                                                                                  className="emotion-16"
                                                                                  onScroll={[Function]}
                                                                                >
                                                                                  <DialogActions
                                                                                    key=".1"
                                                                                    variant="warning"
                                                                                  >
                                                                                    <Styled(div)>
                                                                                      <div
                                                                                        className="emotion-15"
                                                                                      >
                                                                                        <WithForwardRef(Button)
                                                                                          key="0"
                                                                                          minimal={true}
                                                                                          primary={false}
                                                                                          size="medium"
                                                                                        >
                                                                                          <Button
                                                                                            forwardedRef={null}
                                                                                            minimal={true}
                                                                                            primary={false}
                                                                                            size="medium"
                                                                                          >
                                                                                            <Styled(button)
                                                                                              minimal={true}
                                                                                              primary={false}
                                                                                              size="medium"
                                                                                              text="Cancel"
                                                                                            >
                                                                                              <button
                                                                                                className="emotion-11"
                                                                                                size="medium"
                                                                                              >
                                                                                                <Styled(span)>
                                                                                                  <span
                                                                                                    className="emotion-10"
                                                                                                  >
                                                                                                    <Styled(span)
                                                                                                      size="medium"
                                                                                                    >
                                                                                                      <span
                                                                                                        className="emotion-9"
                                                                                                        size="medium"
                                                                                                      >
                                                                                                        Cancel
                                                                                                      </span>
                                                                                                    </Styled(span)>
                                                                                                  </span>
                                                                                                </Styled(span)>
                                                                                              </button>
                                                                                            </Styled(button)>
                                                                                          </Button>
                                                                                        </WithForwardRef(Button)>
                                                                                        <WithForwardRef(Button)
                                                                                          key="1"
                                                                                          minimal={false}
                                                                                          primary={true}
                                                                                          size="medium"
                                                                                          variant="warning"
                                                                                        >
                                                                                          <Button
                                                                                            forwardedRef={null}
                                                                                            minimal={false}
                                                                                            primary={true}
                                                                                            size="medium"
                                                                                            variant="warning"
                                                                                          >
                                                                                            <Styled(button)
                                                                                              minimal={false}
                                                                                              primary={true}
                                                                                              size="medium"
                                                                                              text="Warning"
                                                                                              variant="warning"
                                                                                            >
                                                                                              <button
                                                                                                className="emotion-50"
                                                                                                size="medium"
                                                                                              >
                                                                                                <Styled(span)>
                                                                                                  <span
                                                                                                    className="emotion-10"
                                                                                                  >
                                                                                                    <Styled(span)
                                                                                                      size="medium"
                                                                                                    >
                                                                                                      <span
                                                                                                        className="emotion-9"
                                                                                                        size="medium"
                                                                                                      >
                                                                                                        Warning
                                                                                                      </span>
                                                                                                    </Styled(span)>
                                                                                                  </span>
                                                                                                </Styled(span)>
                                                                                              </button>
                                                                                            </Styled(button)>
                                                                                          </Button>
                                                                                        </WithForwardRef(Button)>
                                                                                      </div>
                                                                                    </Styled(div)>
                                                                                  </DialogActions>
                                                                                  <EventListener
                                                                                    listeners={
                                                                                      Array [
                                                                                        Object {
                                                                                          "event": "resize",
                                                                                          "handler": [Function],
                                                                                          "target": "window",
                                                                                        },
                                                                                      ]
                                                                                    }
                                                                                  />
                                                                                </div>
                                                                              </Styled(div)>
                                                                            </OverflowContainer>
                                                                          </ThemeProvider>
                                                                        </ThemeProvider>
                                                                      </Themed(OverflowContainer)>
                                                                    </WithTheme(Themed(OverflowContainer))>
                                                                  </Styled(WithTheme(Themed(OverflowContainer)))>
                                                                </div>
                                                              </Styled(div)>
                                                            </OverflowContainerWithShadows>
                                                          </ThemeProvider>
                                                        </ThemeProvider>
                                                      </Themed(OverflowContainerWithShadows)>
                                                    </WithTheme(Themed(OverflowContainerWithShadows))>
                                                  </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                                </withProps(Styled(WithTheme(Themed(OverflowContainerWithShadows))))>
                                              </div>
                                            </Styled(div)>
                                          </DialogRow>
                                        </Styled(DialogRow)>
                                      </DialogBody>
                                    </div>
                                  </Styled(div)>
                                </div>
                              </Styled(div)>
                            </div>
                          </Styled(div)>
                        </div>
                      </FocusTrap>
                    </div>
                  </Styled(div)>
                </Transition>
              </Component>
            </WithTheme(Component)>
          </Dialog>
        </Styled(Dialog)>
      </withProps(Styled(Dialog))>
    </div>
  </Styled(div)>
  <Styled(div)
    key="danger"
  >
    <div
      className="emotion-35"
    >
      <withProps(Styled(Dialog))>
        <Styled(Dialog)
          closeButtonLabel="close"
          closeOnClickOutside={false}
          closeOnEscape={false}
          disableFocusOnOpen={true}
          disableFocusTrap={true}
          isOpen={true}
          preventCloseButtonClose={true}
          size="medium"
          usePortal={false}
        >
          <Dialog
            className="emotion-32"
            closeButtonLabel="close"
            closeOnClickOutside={false}
            closeOnEscape={false}
            disableFocusOnOpen={true}
            disableFocusTrap={true}
            isOpen={true}
            preventCloseButtonClose={true}
            size="medium"
            usePortal={false}
          >
            <WithTheme(Component)
              in={true}
              onEntered={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
            >
              <Component
                in={true}
                onEntered={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
              >
                <Transition
                  appear={true}
                  enter={true}
                  exit={true}
                  in={true}
                  mountOnEnter={true}
                  onEnter={[Function]}
                  onEntered={[Function]}
                  onEntering={[Function]}
                  onExit={[Function]}
                  onExited={[Function]}
                  onExiting={[Function]}
                  timeout={250}
                  unmountOnExit={true}
                >
                  <Styled(div)
                    state="entering"
                  >
                    <div
                      className="emotion-33"
                    >
                      <FocusTrap
                        _createFocusTrap={[Function]}
                        active={false}
                        focusTrapOptions={Object {}}
                        paused={false}
                        tag="div"
                      >
                        <div>
                          <Styled(div)
                            aria-labelledby="dialog-4-title"
                            aria-modal={true}
                            className="emotion-32"
                            closeButtonLabel="close"
                            disableFocusOnOpen={true}
                            id="dialog-4"
                            preventCloseButtonClose={true}
                            role="dialog"
                            tabIndex="-1"
                          >
                            <div
                              aria-labelledby="dialog-4-title"
                              aria-modal={true}
                              className="emotion-31"
                              id="dialog-4"
                              role="dialog"
                              tabIndex="-1"
                            >
                              <Styled(div)>
                                <div
                                  className="emotion-0"
                                />
                              </Styled(div)>
                              <Styled(div)>
                                <div
                                  className="emotion-30"
                                >
                                  <Styled(div)
                                    id="dialog-4-content"
                                    role="document"
                                    size="medium"
                                  >
                                    <div
                                      className="emotion-29"
                                      id="dialog-4-content"
                                      role="document"
                                      size="medium"
                                    >
                                      <DialogHeader
                                        titleProps={
                                          Object {
                                            "id": "dialog-4-title",
                                            "variant": undefined,
                                          }
                                        }
                                      >
                                        <withProps(Styled(DialogRow))>
                                          <Styled(DialogRow)
                                            element="header"
                                          >
                                            <DialogRow
                                              className="emotion-7"
                                              element="header"
                                            >
                                              <Styled(header)
                                                className="emotion-7"
                                                element="header"
                                              >
                                                <header
                                                  className="emotion-6"
                                                >
                                                  <WithTheme(DialogTitle)
                                                    id="dialog-4-title"
                                                  >
                                                    <DialogTitle
                                                      appearance="h4"
                                                      element="h1"
                                                      id="dialog-4-title"
                                                    >
                                                      <Styled(div)
                                                        appearance="h4"
                                                        element="h1"
                                                      >
                                                        <div
                                                          className="emotion-5"
                                                        >
                                                          <TitleContent
                                                            appearance="h4"
                                                            element="h1"
                                                            noMargins={true}
                                                          >
                                                            <Styled(Text)
                                                              appearance="h4"
                                                              element="h1"
                                                              id="dialog-4-title"
                                                              noMargins={true}
                                                            >
                                                              <Text
                                                                appearance="h4"
                                                                className="emotion-2"
                                                                element="h1"
                                                                id="dialog-4-title"
                                                                noMargins={true}
                                                              >
                                                                <TextProvider
                                                                  appearance="h4"
                                                                  className="emotion-2"
                                                                  element="h1"
                                                                  id="dialog-4-title"
                                                                  noMargins={true}
                                                                >
                                                                  <Styled(h1)
                                                                    appearance="h4"
                                                                    className="emotion-2"
                                                                    element="h1"
                                                                    id="dialog-4-title"
                                                                    noMargins={true}
                                                                  >
                                                                    <h1
                                                                      className="emotion-1"
                                                                      id="dialog-4-title"
                                                                    >
                                                                      Title
                                                                    </h1>
                                                                  </Styled(h1)>
                                                                </TextProvider>
                                                              </Text>
                                                            </Styled(Text)>
                                                          </TitleContent>
                                                        </div>
                                                      </Styled(div)>
                                                    </DialogTitle>
                                                  </WithTheme(DialogTitle)>
                                                </header>
                                              </Styled(header)>
                                            </DialogRow>
                                          </Styled(DialogRow)>
                                        </withProps(Styled(DialogRow))>
                                      </DialogHeader>
                                      <DialogBody>
                                        <Styled(DialogRow)
                                          element="div"
                                        >
                                          <DialogRow
                                            className="emotion-27"
                                            element="div"
                                          >
                                            <Styled(div)
                                              className="emotion-27"
                                              element="div"
                                            >
                                              <div
                                                className="emotion-26"
                                              >
                                                <withProps(Styled(WithTheme(Themed(OverflowContainerWithShadows))))>
                                                  <Styled(WithTheme(Themed(OverflowContainerWithShadows)))
                                                    scrollY={true}
                                                  >
                                                    <WithTheme(Themed(OverflowContainerWithShadows))
                                                      className="emotion-21"
                                                      scrollY={true}
                                                    >
                                                      <Themed(OverflowContainerWithShadows)
                                                        className="emotion-21"
                                                        scrollY={true}
                                                      >
                                                        <ThemeProvider>
                                                          <ThemeProvider>
                                                            <OverflowContainerWithShadows
                                                              className="emotion-21"
                                                              scrollY={true}
                                                            >
                                                              <Styled(div)
                                                                className="emotion-21"
                                                                hasShadowBottom={false}
                                                                hasShadowTop={false}
                                                              >
                                                                <div
                                                                  className="emotion-21"
                                                                >
                                                                  <Styled(WithTheme(Themed(OverflowContainer)))
                                                                    containerRef={[Function]}
                                                                    onScroll={[Function]}
                                                                    scrollY={true}
                                                                  >
                                                                    <WithTheme(Themed(OverflowContainer))
                                                                      className="emotion-17"
                                                                      containerRef={[Function]}
                                                                      onScroll={[Function]}
                                                                      scrollY={true}
                                                                    >
                                                                      <Themed(OverflowContainer)
                                                                        className="emotion-17"
                                                                        containerRef={[Function]}
                                                                        onScroll={[Function]}
                                                                        scrollY={true}
                                                                      >
                                                                        <ThemeProvider>
                                                                          <ThemeProvider>
                                                                            <OverflowContainer
                                                                              className="emotion-17"
                                                                              containerRef={[Function]}
                                                                              onScroll={[Function]}
                                                                              scrollY={true}
                                                                            >
                                                                              <Styled(div)
                                                                                className="emotion-17"
                                                                                containerRef={[Function]}
                                                                                onScroll={[Function]}
                                                                                scrollY={true}
                                                                              >
                                                                                <div
                                                                                  className="emotion-16"
                                                                                  onScroll={[Function]}
                                                                                >
                                                                                  <DialogActions
                                                                                    key=".1"
                                                                                    variant="danger"
                                                                                  >
                                                                                    <Styled(div)>
                                                                                      <div
                                                                                        className="emotion-15"
                                                                                      >
                                                                                        <WithForwardRef(Button)
                                                                                          key="0"
                                                                                          minimal={true}
                                                                                          primary={false}
                                                                                          size="medium"
                                                                                        >
                                                                                          <Button
                                                                                            forwardedRef={null}
                                                                                            minimal={true}
                                                                                            primary={false}
                                                                                            size="medium"
                                                                                          >
                                                                                            <Styled(button)
                                                                                              minimal={true}
                                                                                              primary={false}
                                                                                              size="medium"
                                                                                              text="Cancel"
                                                                                            >
                                                                                              <button
                                                                                                className="emotion-11"
                                                                                                size="medium"
                                                                                              >
                                                                                                <Styled(span)>
                                                                                                  <span
                                                                                                    className="emotion-10"
                                                                                                  >
                                                                                                    <Styled(span)
                                                                                                      size="medium"
                                                                                                    >
                                                                                                      <span
                                                                                                        className="emotion-9"
                                                                                                        size="medium"
                                                                                                      >
                                                                                                        Cancel
                                                                                                      </span>
                                                                                                    </Styled(span)>
                                                                                                  </span>
                                                                                                </Styled(span)>
                                                                                              </button>
                                                                                            </Styled(button)>
                                                                                          </Button>
                                                                                        </WithForwardRef(Button)>
                                                                                        <WithForwardRef(Button)
                                                                                          key="1"
                                                                                          minimal={false}
                                                                                          primary={true}
                                                                                          size="medium"
                                                                                          variant="danger"
                                                                                        >
                                                                                          <Button
                                                                                            forwardedRef={null}
                                                                                            minimal={false}
                                                                                            primary={true}
                                                                                            size="medium"
                                                                                            variant="danger"
                                                                                          >
                                                                                            <Styled(button)
                                                                                              minimal={false}
                                                                                              primary={true}
                                                                                              size="medium"
                                                                                              text="Danger"
                                                                                              variant="danger"
                                                                                            >
                                                                                              <button
                                                                                                className="emotion-86"
                                                                                                size="medium"
                                                                                              >
                                                                                                <Styled(span)>
                                                                                                  <span
                                                                                                    className="emotion-10"
                                                                                                  >
                                                                                                    <Styled(span)
                                                                                                      size="medium"
                                                                                                    >
                                                                                                      <span
                                                                                                        className="emotion-9"
                                                                                                        size="medium"
                                                                                                      >
                                                                                                        Danger
                                                                                                      </span>
                                                                                                    </Styled(span)>
                                                                                                  </span>
                                                                                                </Styled(span)>
                                                                                              </button>
                                                                                            </Styled(button)>
                                                                                          </Button>
                                                                                        </WithForwardRef(Button)>
                                                                                      </div>
                                                                                    </Styled(div)>
                                                                                  </DialogActions>
                                                                                  <EventListener
                                                                                    listeners={
                                                                                      Array [
                                                                                        Object {
                                                                                          "event": "resize",
                                                                                          "handler": [Function],
                                                                                          "target": "window",
                                                                                        },
                                                                                      ]
                                                                                    }
                                                                                  />
                                                                                </div>
                                                                              </Styled(div)>
                                                                            </OverflowContainer>
                                                                          </ThemeProvider>
                                                                        </ThemeProvider>
                                                                      </Themed(OverflowContainer)>
                                                                    </WithTheme(Themed(OverflowContainer))>
                                                                  </Styled(WithTheme(Themed(OverflowContainer)))>
                                                                </div>
                                                              </Styled(div)>
                                                            </OverflowContainerWithShadows>
                                                          </ThemeProvider>
                                                        </ThemeProvider>
                                                      </Themed(OverflowContainerWithShadows)>
                                                    </WithTheme(Themed(OverflowContainerWithShadows))>
                                                  </Styled(WithTheme(Themed(OverflowContainerWithShadows)))>
                                                </withProps(Styled(WithTheme(Themed(OverflowContainerWithShadows))))>
                                              </div>
                                            </Styled(div)>
                                          </DialogRow>
                                        </Styled(DialogRow)>
                                      </DialogBody>
                                    </div>
                                  </Styled(div)>
                                </div>
                              </Styled(div)>
                            </div>
                          </Styled(div)>
                        </div>
                      </FocusTrap>
                    </div>
                  </Styled(div)>
                </Transition>
              </Component>
            </WithTheme(Component)>
          </Dialog>
        </Styled(Dialog)>
      </withProps(Styled(Dialog))>
    </div>
  </Styled(div)>
</Component>
`;
