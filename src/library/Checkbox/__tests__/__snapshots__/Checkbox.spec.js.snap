// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Checkbox demo examples Snapshots: controlled 1`] = `
.emotion-15 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-0 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.emotion-0:focus + span {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0:checked + span,
.emotion-0[type="checkbox"]:indeterminate + span {
  background-color: #3272d9;
  border-color: #3272d9;
}

.emotion-0:checked:hover + span,
.emotion-0[type="checkbox"]:indeterminate:hover + span {
  background-color: #5691f0;
  border-color: #5691f0;
}

.emotion-0:checked:disabled + span,
.emotion-0[type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #ffffff;
}

.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #ffffff;
  content: "";
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  height: 1em;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 1em;
}

.emotion-2 svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.emotion-1 {
  fill: currentcolor;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.emotion-3 {
  color: #333840;
  font-size: 0.875em;
  margin-left: 1.1428571428571428em;
  margin-right: 0;
}

<Component>
  <MyForm>
    <DemoForm>
      <Styled(form)
        onSubmit={[Function]}
      >
        <form
          className="emotion-15"
          onSubmit={[Function]}
        >
          <Checkbox
            checked={false}
            label="Fluorite"
            labelPosition="end"
            name="minerals"
            onChange={[Function]}
            size="large"
            value="fluorite"
          >
            <WithTheme(Themed(Choice))
              checked={false}
              iconChecked={<IconCheckBoxCheck />}
              inputRef={[Function]}
              label="Fluorite"
              labelPosition="end"
              name="minerals"
              onChange={[Function]}
              onClick={[Function]}
              rootProps={
                Object {
                  "className": undefined,
                }
              }
              size="large"
              type="checkbox"
              value="fluorite"
            >
              <Themed(Choice)
                checked={false}
                iconChecked={<IconCheckBoxCheck />}
                inputRef={[Function]}
                label="Fluorite"
                labelPosition="end"
                name="minerals"
                onChange={[Function]}
                onClick={[Function]}
                rootProps={
                  Object {
                    "className": undefined,
                  }
                }
                size="large"
                type="checkbox"
                value="fluorite"
              >
                <ThemeProvider>
                  <ThemeProvider>
                    <Choice
                      checked={false}
                      iconChecked={<IconCheckBoxCheck />}
                      inputRef={[Function]}
                      label="Fluorite"
                      labelPosition="end"
                      name="minerals"
                      onChange={[Function]}
                      onClick={[Function]}
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="large"
                      type="checkbox"
                      value="fluorite"
                    >
                      <Styled(label)
                        labelPosition="end"
                        size="large"
                      >
                        <label
                          className="emotion-4"
                          size="large"
                        >
                          <Styled(input)
                            checked={false}
                            name="minerals"
                            onChange={[Function]}
                            onClick={[Function]}
                            size="large"
                            type="checkbox"
                            value="fluorite"
                          >
                            <input
                              checked={false}
                              className="emotion-0"
                              name="minerals"
                              onChange={[Function]}
                              onClick={[Function]}
                              size="large"
                              type="checkbox"
                              value="fluorite"
                            />
                          </Styled(input)>
                          <Styled(span)
                            size="large"
                          >
                            <span
                              className="emotion-2"
                              size="large"
                            >
                              <IconCheckBoxCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <Styled(svg)
                                    aria-hidden={true}
                                    focusable="false"
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="emotion-1"
                                      focusable="false"
                                      role="img"
                                      size="medium"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <path
                                          d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                        />
                                      </g>
                                    </svg>
                                  </Styled(svg)>
                                </Icon>
                              </IconCheckBoxCheck>
                            </span>
                          </Styled(span)>
                          <Styled(span)
                            labelPosition="end"
                            size="large"
                          >
                            <span
                              className="emotion-3"
                              size="large"
                            >
                              Fluorite
                            </span>
                          </Styled(span)>
                        </label>
                      </Styled(label)>
                    </Choice>
                  </ThemeProvider>
                </ThemeProvider>
              </Themed(Choice)>
            </WithTheme(Themed(Choice))>
          </Checkbox>
          <Checkbox
            checked={true}
            label="Quartz"
            labelPosition="end"
            name="minerals"
            onChange={[Function]}
            size="large"
            value="quartz"
          >
            <WithTheme(Themed(Choice))
              checked={true}
              iconChecked={<IconCheckBoxCheck />}
              inputRef={[Function]}
              label="Quartz"
              labelPosition="end"
              name="minerals"
              onChange={[Function]}
              onClick={[Function]}
              rootProps={
                Object {
                  "className": undefined,
                }
              }
              size="large"
              type="checkbox"
              value="quartz"
            >
              <Themed(Choice)
                checked={true}
                iconChecked={<IconCheckBoxCheck />}
                inputRef={[Function]}
                label="Quartz"
                labelPosition="end"
                name="minerals"
                onChange={[Function]}
                onClick={[Function]}
                rootProps={
                  Object {
                    "className": undefined,
                  }
                }
                size="large"
                type="checkbox"
                value="quartz"
              >
                <ThemeProvider>
                  <ThemeProvider>
                    <Choice
                      checked={true}
                      iconChecked={<IconCheckBoxCheck />}
                      inputRef={[Function]}
                      label="Quartz"
                      labelPosition="end"
                      name="minerals"
                      onChange={[Function]}
                      onClick={[Function]}
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="large"
                      type="checkbox"
                      value="quartz"
                    >
                      <Styled(label)
                        labelPosition="end"
                        size="large"
                      >
                        <label
                          className="emotion-4"
                          size="large"
                        >
                          <Styled(input)
                            checked={true}
                            name="minerals"
                            onChange={[Function]}
                            onClick={[Function]}
                            size="large"
                            type="checkbox"
                            value="quartz"
                          >
                            <input
                              checked={true}
                              className="emotion-0"
                              name="minerals"
                              onChange={[Function]}
                              onClick={[Function]}
                              size="large"
                              type="checkbox"
                              value="quartz"
                            />
                          </Styled(input)>
                          <Styled(span)
                            size="large"
                          >
                            <span
                              className="emotion-2"
                              size="large"
                            >
                              <IconCheckBoxCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <Styled(svg)
                                    aria-hidden={true}
                                    focusable="false"
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="emotion-1"
                                      focusable="false"
                                      role="img"
                                      size="medium"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <path
                                          d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                        />
                                      </g>
                                    </svg>
                                  </Styled(svg)>
                                </Icon>
                              </IconCheckBoxCheck>
                            </span>
                          </Styled(span)>
                          <Styled(span)
                            labelPosition="end"
                            size="large"
                          >
                            <span
                              className="emotion-3"
                              size="large"
                            >
                              Quartz
                            </span>
                          </Styled(span)>
                        </label>
                      </Styled(label)>
                    </Choice>
                  </ThemeProvider>
                </ThemeProvider>
              </Themed(Choice)>
            </WithTheme(Themed(Choice))>
          </Checkbox>
          <Checkbox
            checked={true}
            label="Magnetite"
            labelPosition="end"
            name="minerals"
            onChange={[Function]}
            size="large"
            value="magnetite"
          >
            <WithTheme(Themed(Choice))
              checked={true}
              iconChecked={<IconCheckBoxCheck />}
              inputRef={[Function]}
              label="Magnetite"
              labelPosition="end"
              name="minerals"
              onChange={[Function]}
              onClick={[Function]}
              rootProps={
                Object {
                  "className": undefined,
                }
              }
              size="large"
              type="checkbox"
              value="magnetite"
            >
              <Themed(Choice)
                checked={true}
                iconChecked={<IconCheckBoxCheck />}
                inputRef={[Function]}
                label="Magnetite"
                labelPosition="end"
                name="minerals"
                onChange={[Function]}
                onClick={[Function]}
                rootProps={
                  Object {
                    "className": undefined,
                  }
                }
                size="large"
                type="checkbox"
                value="magnetite"
              >
                <ThemeProvider>
                  <ThemeProvider>
                    <Choice
                      checked={true}
                      iconChecked={<IconCheckBoxCheck />}
                      inputRef={[Function]}
                      label="Magnetite"
                      labelPosition="end"
                      name="minerals"
                      onChange={[Function]}
                      onClick={[Function]}
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="large"
                      type="checkbox"
                      value="magnetite"
                    >
                      <Styled(label)
                        labelPosition="end"
                        size="large"
                      >
                        <label
                          className="emotion-4"
                          size="large"
                        >
                          <Styled(input)
                            checked={true}
                            name="minerals"
                            onChange={[Function]}
                            onClick={[Function]}
                            size="large"
                            type="checkbox"
                            value="magnetite"
                          >
                            <input
                              checked={true}
                              className="emotion-0"
                              name="minerals"
                              onChange={[Function]}
                              onClick={[Function]}
                              size="large"
                              type="checkbox"
                              value="magnetite"
                            />
                          </Styled(input)>
                          <Styled(span)
                            size="large"
                          >
                            <span
                              className="emotion-2"
                              size="large"
                            >
                              <IconCheckBoxCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <Styled(svg)
                                    aria-hidden={true}
                                    focusable="false"
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="emotion-1"
                                      focusable="false"
                                      role="img"
                                      size="medium"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <path
                                          d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                        />
                                      </g>
                                    </svg>
                                  </Styled(svg)>
                                </Icon>
                              </IconCheckBoxCheck>
                            </span>
                          </Styled(span)>
                          <Styled(span)
                            labelPosition="end"
                            size="large"
                          >
                            <span
                              className="emotion-3"
                              size="large"
                            >
                              Magnetite
                            </span>
                          </Styled(span)>
                        </label>
                      </Styled(label)>
                    </Choice>
                  </ThemeProvider>
                </ThemeProvider>
              </Themed(Choice)>
            </WithTheme(Themed(Choice))>
          </Checkbox>
        </form>
      </Styled(form)>
    </DemoForm>
  </MyForm>
</Component>
`;

exports[`Checkbox demo examples Snapshots: disabled 1`] = `
.emotion-10 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-0 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.emotion-0:focus + span {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0:checked + span,
.emotion-0[type="checkbox"]:indeterminate + span {
  background-color: #3272d9;
  border-color: #3272d9;
}

.emotion-0:checked:hover + span,
.emotion-0[type="checkbox"]:indeterminate:hover + span {
  background-color: #5691f0;
  border-color: #5691f0;
}

.emotion-0:checked:disabled + span,
.emotion-0[type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #ffffff;
}

.emotion-1 {
  fill: currentcolor;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #ebeff5;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #ebeff5;
  content: "";
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  height: 1em;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 1em;
}

.emotion-2 svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.emotion-3 {
  color: #afbacc;
  font-size: 0.875em;
  margin-left: 1.1428571428571428em;
  margin-right: 0;
}

<DemoForm>
  <Styled(form)
    onSubmit={[Function]}
  >
    <form
      className="emotion-10"
      onSubmit={[Function]}
    >
      <Checkbox
        disabled={true}
        label="Quartz"
        labelPosition="end"
        size="large"
        value="quartz"
      >
        <WithTheme(Themed(Choice))
          disabled={true}
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Quartz"
          labelPosition="end"
          onClick={[Function]}
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
          value="quartz"
        >
          <Themed(Choice)
            disabled={true}
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Quartz"
            labelPosition="end"
            onClick={[Function]}
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
            value="quartz"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  disabled={true}
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Quartz"
                  labelPosition="end"
                  onClick={[Function]}
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                  value="quartz"
                >
                  <Styled(label)
                    disabled={true}
                    labelPosition="end"
                    size="large"
                  >
                    <label
                      className="emotion-4"
                      disabled={true}
                      size="large"
                    >
                      <Styled(input)
                        disabled={true}
                        onClick={[Function]}
                        size="large"
                        type="checkbox"
                        value="quartz"
                      >
                        <input
                          className="emotion-0"
                          disabled={true}
                          onClick={[Function]}
                          size="large"
                          type="checkbox"
                          value="quartz"
                        />
                      </Styled(input)>
                      <Styled(span)
                        disabled={true}
                        size="large"
                      >
                        <span
                          className="emotion-2"
                          disabled={true}
                          size="large"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <Styled(svg)
                                aria-hidden={true}
                                focusable="false"
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="emotion-1"
                                  focusable="false"
                                  role="img"
                                  size="medium"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </Styled(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </Styled(span)>
                      <Styled(span)
                        disabled={true}
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="emotion-3"
                          disabled={true}
                          size="large"
                        >
                          Quartz
                        </span>
                      </Styled(span)>
                    </label>
                  </Styled(label)>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Checkbox>
      <Checkbox
        defaultChecked={true}
        disabled={true}
        label="Magnetite"
        labelPosition="end"
        size="large"
        value="magnetite"
      >
        <WithTheme(Themed(Choice))
          defaultChecked={true}
          disabled={true}
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Magnetite"
          labelPosition="end"
          onClick={[Function]}
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
          value="magnetite"
        >
          <Themed(Choice)
            defaultChecked={true}
            disabled={true}
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Magnetite"
            labelPosition="end"
            onClick={[Function]}
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
            value="magnetite"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  defaultChecked={true}
                  disabled={true}
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Magnetite"
                  labelPosition="end"
                  onClick={[Function]}
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                  value="magnetite"
                >
                  <Styled(label)
                    disabled={true}
                    labelPosition="end"
                    size="large"
                  >
                    <label
                      className="emotion-4"
                      disabled={true}
                      size="large"
                    >
                      <Styled(input)
                        defaultChecked={true}
                        disabled={true}
                        onClick={[Function]}
                        size="large"
                        type="checkbox"
                        value="magnetite"
                      >
                        <input
                          className="emotion-0"
                          defaultChecked={true}
                          disabled={true}
                          onClick={[Function]}
                          size="large"
                          type="checkbox"
                          value="magnetite"
                        />
                      </Styled(input)>
                      <Styled(span)
                        disabled={true}
                        size="large"
                      >
                        <span
                          className="emotion-2"
                          disabled={true}
                          size="large"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <Styled(svg)
                                aria-hidden={true}
                                focusable="false"
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="emotion-1"
                                  focusable="false"
                                  role="img"
                                  size="medium"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </Styled(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </Styled(span)>
                      <Styled(span)
                        disabled={true}
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="emotion-3"
                          disabled={true}
                          size="large"
                        >
                          Magnetite
                        </span>
                      </Styled(span)>
                    </label>
                  </Styled(label)>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Checkbox>
    </form>
  </Styled(form)>
</DemoForm>
`;

exports[`Checkbox demo examples Snapshots: hide-label 1`] = `
.emotion-5 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-0 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.emotion-0:focus + span {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0:checked + span,
.emotion-0[type="checkbox"]:indeterminate + span {
  background-color: #3272d9;
  border-color: #3272d9;
}

.emotion-0:checked:hover + span,
.emotion-0[type="checkbox"]:indeterminate:hover + span {
  background-color: #5691f0;
  border-color: #5691f0;
}

.emotion-0:checked:disabled + span,
.emotion-0[type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #ffffff;
}

.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #ffffff;
  content: "";
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  height: 1em;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 1em;
}

.emotion-2 svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.emotion-1 {
  fill: currentcolor;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-4::after {
  content: '.';
  font-size: 0.875em;
  visibility: hidden;
  width: 0.1px;
}

.emotion-3 {
  color: #333840;
  font-size: 0.875em;
  margin-left: 1.1428571428571428em;
  margin-right: 0;
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

<DemoForm>
  <Styled(form)
    onSubmit={[Function]}
  >
    <form
      className="emotion-5"
      onSubmit={[Function]}
    >
      <Checkbox
        hideLabel={true}
        label="Select All"
        labelPosition="end"
        size="large"
      >
        <WithTheme(Themed(Choice))
          hideLabel={true}
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Select All"
          labelPosition="end"
          onClick={[Function]}
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
        >
          <Themed(Choice)
            hideLabel={true}
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Select All"
            labelPosition="end"
            onClick={[Function]}
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  hideLabel={true}
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Select All"
                  labelPosition="end"
                  onClick={[Function]}
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                >
                  <Styled(label)
                    hideLabel={true}
                    labelPosition="end"
                    size="large"
                  >
                    <label
                      className="emotion-4"
                      size="large"
                    >
                      <Styled(input)
                        onClick={[Function]}
                        size="large"
                        type="checkbox"
                      >
                        <input
                          className="emotion-0"
                          onClick={[Function]}
                          size="large"
                          type="checkbox"
                        />
                      </Styled(input)>
                      <Styled(span)
                        size="large"
                      >
                        <span
                          className="emotion-2"
                          size="large"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <Styled(svg)
                                aria-hidden={true}
                                focusable="false"
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="emotion-1"
                                  focusable="false"
                                  role="img"
                                  size="medium"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </Styled(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </Styled(span)>
                      <Styled(span)
                        hideLabel={true}
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="emotion-3"
                          size="large"
                        >
                          Select All
                        </span>
                      </Styled(span)>
                    </label>
                  </Styled(label)>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Checkbox>
    </form>
  </Styled(form)>
</DemoForm>
`;

exports[`Checkbox demo examples Snapshots: indeterminate 1`] = `
.emotion-5 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-0 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.emotion-0:focus + span {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0:checked + span,
.emotion-0[type="checkbox"]:indeterminate + span {
  background-color: #3272d9;
  border-color: #3272d9;
}

.emotion-0:checked:hover + span,
.emotion-0[type="checkbox"]:indeterminate:hover + span {
  background-color: #5691f0;
  border-color: #5691f0;
}

.emotion-0:checked:disabled + span,
.emotion-0[type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #ffffff;
}

.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #ffffff;
  content: "";
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  height: 1em;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 1em;
}

.emotion-2 svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.emotion-1 {
  fill: currentcolor;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.emotion-3 {
  color: #333840;
  font-size: 0.875em;
  margin-left: 1.1428571428571428em;
  margin-right: 0;
}

<Component>
  <MyForm>
    <DemoForm>
      <Styled(form)
        onSubmit={[Function]}
      >
        <form
          className="emotion-5"
          onSubmit={[Function]}
        >
          <Checkbox
            indeterminate={true}
            label="Indeterminate"
            labelPosition="end"
            name="indeterminate"
            onChange={[Function]}
            size="large"
            value="indeterminate"
          >
            <WithTheme(Themed(Choice))
              iconChecked={<IconCheckBoxIndeterminate />}
              inputRef={[Function]}
              label="Indeterminate"
              labelPosition="end"
              name="indeterminate"
              onChange={[Function]}
              onClick={[Function]}
              rootProps={
                Object {
                  "className": undefined,
                }
              }
              size="large"
              type="checkbox"
              value="indeterminate"
            >
              <Themed(Choice)
                iconChecked={<IconCheckBoxIndeterminate />}
                inputRef={[Function]}
                label="Indeterminate"
                labelPosition="end"
                name="indeterminate"
                onChange={[Function]}
                onClick={[Function]}
                rootProps={
                  Object {
                    "className": undefined,
                  }
                }
                size="large"
                type="checkbox"
                value="indeterminate"
              >
                <ThemeProvider>
                  <ThemeProvider>
                    <Choice
                      iconChecked={<IconCheckBoxIndeterminate />}
                      inputRef={[Function]}
                      label="Indeterminate"
                      labelPosition="end"
                      name="indeterminate"
                      onChange={[Function]}
                      onClick={[Function]}
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="large"
                      type="checkbox"
                      value="indeterminate"
                    >
                      <Styled(label)
                        labelPosition="end"
                        size="large"
                      >
                        <label
                          className="emotion-4"
                          size="large"
                        >
                          <Styled(input)
                            name="indeterminate"
                            onChange={[Function]}
                            onClick={[Function]}
                            size="large"
                            type="checkbox"
                            value="indeterminate"
                          >
                            <input
                              className="emotion-0"
                              name="indeterminate"
                              onChange={[Function]}
                              onClick={[Function]}
                              size="large"
                              type="checkbox"
                              value="indeterminate"
                            />
                          </Styled(input)>
                          <Styled(span)
                            size="large"
                          >
                            <span
                              className="emotion-2"
                              size="large"
                            >
                              <IconCheckBoxIndeterminate>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <Styled(svg)
                                    aria-hidden={true}
                                    focusable="false"
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="emotion-1"
                                      focusable="false"
                                      role="img"
                                      size="medium"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <path
                                          d="M4 10h16v4H4z"
                                        />
                                      </g>
                                    </svg>
                                  </Styled(svg)>
                                </Icon>
                              </IconCheckBoxIndeterminate>
                            </span>
                          </Styled(span)>
                          <Styled(span)
                            labelPosition="end"
                            size="large"
                          >
                            <span
                              className="emotion-3"
                              size="large"
                            >
                              Indeterminate
                            </span>
                          </Styled(span)>
                        </label>
                      </Styled(label)>
                    </Choice>
                  </ThemeProvider>
                </ThemeProvider>
              </Themed(Choice)>
            </WithTheme(Themed(Choice))>
          </Checkbox>
        </form>
      </Styled(form)>
    </DemoForm>
  </MyForm>
</Component>
`;

exports[`Checkbox demo examples Snapshots: input-ref 1`] = `
.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-0 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.emotion-0:focus + span {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0:checked + span,
.emotion-0[type="checkbox"]:indeterminate + span {
  background-color: #3272d9;
  border-color: #3272d9;
}

.emotion-0:checked:hover + span,
.emotion-0[type="checkbox"]:indeterminate:hover + span {
  background-color: #5691f0;
  border-color: #5691f0;
}

.emotion-0:checked:disabled + span,
.emotion-0[type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #ffffff;
}

.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #ffffff;
  content: "";
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  height: 1em;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 1em;
}

.emotion-2 svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.emotion-1 {
  fill: currentcolor;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.emotion-3 {
  color: #333840;
  font-size: 0.875em;
  margin-left: 1.1428571428571428em;
  margin-right: 0;
}

.emotion-8[class] > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-7 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-7 *,
.emotion-7 *::before,
.emotion-7 *::after {
  box-sizing: inherit;
}

.emotion-7:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-7:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-7:focus:active,
.emotion-7:focus:hover {
  border-color: #c8d1e0;
}

.emotion-7:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-7::-moz-focus-inner {
  border: 0;
}

.emotion-7 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-7 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-7 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-7 [role="img"]:only-child {
  margin: 0;
}

.emotion-6 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-5 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-5:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-5:last-child {
  padding-right: 0.5714285714285714em;
}

<Component>
  <MyForm>
    <DemoLayout>
      <Styled(div)
        marginBottom="1rem"
      >
        <div
          className="emotion-8"
        >
          <Checkbox
            inputRef={[Function]}
            label="Option 1"
            labelPosition="end"
            size="large"
            value="1"
          >
            <WithTheme(Themed(Choice))
              iconChecked={<IconCheckBoxCheck />}
              inputRef={[Function]}
              label="Option 1"
              labelPosition="end"
              onClick={[Function]}
              rootProps={
                Object {
                  "className": undefined,
                }
              }
              size="large"
              type="checkbox"
              value="1"
            >
              <Themed(Choice)
                iconChecked={<IconCheckBoxCheck />}
                inputRef={[Function]}
                label="Option 1"
                labelPosition="end"
                onClick={[Function]}
                rootProps={
                  Object {
                    "className": undefined,
                  }
                }
                size="large"
                type="checkbox"
                value="1"
              >
                <ThemeProvider>
                  <ThemeProvider>
                    <Choice
                      iconChecked={<IconCheckBoxCheck />}
                      inputRef={[Function]}
                      label="Option 1"
                      labelPosition="end"
                      onClick={[Function]}
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="large"
                      type="checkbox"
                      value="1"
                    >
                      <Styled(label)
                        labelPosition="end"
                        size="large"
                      >
                        <label
                          className="emotion-4"
                          size="large"
                        >
                          <Styled(input)
                            onClick={[Function]}
                            size="large"
                            type="checkbox"
                            value="1"
                          >
                            <input
                              className="emotion-0"
                              onClick={[Function]}
                              size="large"
                              type="checkbox"
                              value="1"
                            />
                          </Styled(input)>
                          <Styled(span)
                            size="large"
                          >
                            <span
                              className="emotion-2"
                              size="large"
                            >
                              <IconCheckBoxCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <Styled(svg)
                                    aria-hidden={true}
                                    focusable="false"
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="emotion-1"
                                      focusable="false"
                                      role="img"
                                      size="medium"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <path
                                          d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                        />
                                      </g>
                                    </svg>
                                  </Styled(svg)>
                                </Icon>
                              </IconCheckBoxCheck>
                            </span>
                          </Styled(span)>
                          <Styled(span)
                            labelPosition="end"
                            size="large"
                          >
                            <span
                              className="emotion-3"
                              size="large"
                            >
                              Option 1
                            </span>
                          </Styled(span)>
                        </label>
                      </Styled(label)>
                    </Choice>
                  </ThemeProvider>
                </ThemeProvider>
              </Themed(Choice)>
            </WithTheme(Themed(Choice))>
          </Checkbox>
          <WithForwardRef(Button)
            onClick={[Function]}
            size="large"
          >
            <Button
              forwardedRef={null}
              onClick={[Function]}
              size="large"
            >
              <Styled(button)
                onClick={[Function]}
                size="large"
                text="Focus the input"
              >
                <button
                  className="emotion-7"
                  onClick={[Function]}
                  size="large"
                >
                  <Styled(span)>
                    <span
                      className="emotion-6"
                    >
                      <Styled(span)
                        size="large"
                      >
                        <span
                          className="emotion-5"
                          size="large"
                        >
                          Focus the input
                        </span>
                      </Styled(span)>
                    </span>
                  </Styled(span)>
                </button>
              </Styled(button)>
            </Button>
          </WithForwardRef(Button)>
        </div>
      </Styled(div)>
    </DemoLayout>
  </MyForm>
</Component>
`;

exports[`Checkbox demo examples Snapshots: invalid 1`] = `
.emotion-10 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-0 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.emotion-0:focus + span {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0:checked + span,
.emotion-0[type="checkbox"]:indeterminate + span {
  background-color: #3272d9;
  border-color: #3272d9;
}

.emotion-0:checked:hover + span,
.emotion-0[type="checkbox"]:indeterminate:hover + span {
  background-color: #5691f0;
  border-color: #5691f0;
}

.emotion-0:checked:disabled + span,
.emotion-0[type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #ffffff;
}

.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #ffffff;
  content: "";
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  height: 1em;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 1em;
}

.emotion-2 svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.emotion-1 {
  fill: currentcolor;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.emotion-3 {
  color: #333840;
  font-size: 0.875em;
  margin-left: 1.1428571428571428em;
  margin-right: 0;
}

<DemoForm>
  <Styled(form)
    onSubmit={[Function]}
  >
    <form
      className="emotion-10"
      onSubmit={[Function]}
    >
      <Checkbox
        defaultChecked={true}
        invalid={true}
        label="Quartz"
        labelPosition="end"
        name="minerals"
        size="large"
        value="quartz"
      >
        <WithTheme(Themed(Choice))
          defaultChecked={true}
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          invalid={true}
          label="Quartz"
          labelPosition="end"
          name="minerals"
          onClick={[Function]}
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
          value="quartz"
        >
          <Themed(Choice)
            defaultChecked={true}
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            invalid={true}
            label="Quartz"
            labelPosition="end"
            name="minerals"
            onClick={[Function]}
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
            value="quartz"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  defaultChecked={true}
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  invalid={true}
                  label="Quartz"
                  labelPosition="end"
                  name="minerals"
                  onClick={[Function]}
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                  value="quartz"
                >
                  <Styled(label)
                    labelPosition="end"
                    size="large"
                  >
                    <label
                      className="emotion-4"
                      size="large"
                    >
                      <Styled(input)
                        aria-invalid={true}
                        defaultChecked={true}
                        name="minerals"
                        onClick={[Function]}
                        size="large"
                        type="checkbox"
                        value="quartz"
                      >
                        <input
                          aria-invalid={true}
                          className="emotion-0"
                          defaultChecked={true}
                          name="minerals"
                          onClick={[Function]}
                          size="large"
                          type="checkbox"
                          value="quartz"
                        />
                      </Styled(input)>
                      <Styled(span)
                        size="large"
                      >
                        <span
                          className="emotion-2"
                          size="large"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <Styled(svg)
                                aria-hidden={true}
                                focusable="false"
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="emotion-1"
                                  focusable="false"
                                  role="img"
                                  size="medium"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </Styled(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </Styled(span)>
                      <Styled(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="emotion-3"
                          size="large"
                        >
                          Quartz
                        </span>
                      </Styled(span)>
                    </label>
                  </Styled(label)>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Checkbox>
      <Checkbox
        invalid={true}
        label="Magnetite"
        labelPosition="end"
        name="minerals"
        size="large"
        value="magnetite"
      >
        <WithTheme(Themed(Choice))
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          invalid={true}
          label="Magnetite"
          labelPosition="end"
          name="minerals"
          onClick={[Function]}
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
          value="magnetite"
        >
          <Themed(Choice)
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            invalid={true}
            label="Magnetite"
            labelPosition="end"
            name="minerals"
            onClick={[Function]}
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
            value="magnetite"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  invalid={true}
                  label="Magnetite"
                  labelPosition="end"
                  name="minerals"
                  onClick={[Function]}
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                  value="magnetite"
                >
                  <Styled(label)
                    labelPosition="end"
                    size="large"
                  >
                    <label
                      className="emotion-4"
                      size="large"
                    >
                      <Styled(input)
                        aria-invalid={true}
                        name="minerals"
                        onClick={[Function]}
                        size="large"
                        type="checkbox"
                        value="magnetite"
                      >
                        <input
                          aria-invalid={true}
                          className="emotion-0"
                          name="minerals"
                          onClick={[Function]}
                          size="large"
                          type="checkbox"
                          value="magnetite"
                        />
                      </Styled(input)>
                      <Styled(span)
                        size="large"
                      >
                        <span
                          className="emotion-2"
                          size="large"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <Styled(svg)
                                aria-hidden={true}
                                focusable="false"
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="emotion-1"
                                  focusable="false"
                                  role="img"
                                  size="medium"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </Styled(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </Styled(span)>
                      <Styled(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="emotion-3"
                          size="large"
                        >
                          Magnetite
                        </span>
                      </Styled(span)>
                    </label>
                  </Styled(label)>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Checkbox>
    </form>
  </Styled(form)>
</DemoForm>
`;

exports[`Checkbox demo examples Snapshots: label-position-and-justification 1`] = `
.emotion-23 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-0 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.emotion-0:focus + span {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0:checked + span,
.emotion-0[type="checkbox"]:indeterminate + span {
  background-color: #3272d9;
  border-color: #3272d9;
}

.emotion-0:checked:hover + span,
.emotion-0[type="checkbox"]:indeterminate:hover + span {
  background-color: #5691f0;
  border-color: #5691f0;
}

.emotion-0:checked:disabled + span,
.emotion-0[type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #ffffff;
}

.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #ffffff;
  content: "";
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  height: 1em;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 1em;
}

.emotion-2 svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.emotion-1 {
  fill: currentcolor;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.emotion-3 {
  color: #333840;
  font-size: 0.875em;
  margin-left: 1.1428571428571428em;
  margin-right: 0;
}

.emotion-5 {
  background-color: #c8d1e0;
  height: 1px;
  margin: 0.5em 0;
}

.emotion-10 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.emotion-10 *,
.emotion-10 *::before,
.emotion-10 *::after {
  box-sizing: inherit;
}

.emotion-10:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-9 {
  color: #333840;
  font-size: 0.875em;
  margin-left: 0;
  margin-right: 1.1428571428571428em;
}

.emotion-16 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.emotion-16 *,
.emotion-16 *::before,
.emotion-16 *::after {
  box-sizing: inherit;
}

.emotion-16:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-15 {
  color: #333840;
  font-size: 0.875em;
  margin-left: auto;
  margin-right: 0;
}

.emotion-22 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
}

.emotion-22 *,
.emotion-22 *::before,
.emotion-22 *::after {
  box-sizing: inherit;
}

.emotion-22:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-21 {
  color: #333840;
  font-size: 0.875em;
  margin-left: 0;
  margin-right: auto;
}

<DemoForm>
  <Styled(form)
    onSubmit={[Function]}
  >
    <form
      className="emotion-23"
      onSubmit={[Function]}
    >
      <Checkbox
        label="Quartz"
        labelPosition="end"
        name="minerals"
        size="large"
        value="quartz"
      >
        <WithTheme(Themed(Choice))
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Quartz"
          labelPosition="end"
          name="minerals"
          onClick={[Function]}
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
          value="quartz"
        >
          <Themed(Choice)
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Quartz"
            labelPosition="end"
            name="minerals"
            onClick={[Function]}
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
            value="quartz"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Quartz"
                  labelPosition="end"
                  name="minerals"
                  onClick={[Function]}
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                  value="quartz"
                >
                  <Styled(label)
                    labelPosition="end"
                    size="large"
                  >
                    <label
                      className="emotion-4"
                      size="large"
                    >
                      <Styled(input)
                        name="minerals"
                        onClick={[Function]}
                        size="large"
                        type="checkbox"
                        value="quartz"
                      >
                        <input
                          className="emotion-0"
                          name="minerals"
                          onClick={[Function]}
                          size="large"
                          type="checkbox"
                          value="quartz"
                        />
                      </Styled(input)>
                      <Styled(span)
                        size="large"
                      >
                        <span
                          className="emotion-2"
                          size="large"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <Styled(svg)
                                aria-hidden={true}
                                focusable="false"
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="emotion-1"
                                  focusable="false"
                                  role="img"
                                  size="medium"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </Styled(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </Styled(span)>
                      <Styled(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="emotion-3"
                          size="large"
                        >
                          Quartz
                        </span>
                      </Styled(span)>
                    </label>
                  </Styled(label)>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Checkbox>
      <FormFieldDivider>
        <Styled(div)
          role="separator"
        >
          <div
            className="emotion-5"
            role="separator"
          />
        </Styled(div)>
      </FormFieldDivider>
      <Checkbox
        label="Magnetite"
        labelPosition="start"
        name="minerals"
        size="large"
        value="magnetite"
      >
        <WithTheme(Themed(Choice))
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Magnetite"
          labelPosition="start"
          name="minerals"
          onClick={[Function]}
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
          value="magnetite"
        >
          <Themed(Choice)
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Magnetite"
            labelPosition="start"
            name="minerals"
            onClick={[Function]}
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
            value="magnetite"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Magnetite"
                  labelPosition="start"
                  name="minerals"
                  onClick={[Function]}
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                  value="magnetite"
                >
                  <Styled(label)
                    labelPosition="start"
                    size="large"
                  >
                    <label
                      className="emotion-10"
                      size="large"
                    >
                      <Styled(input)
                        name="minerals"
                        onClick={[Function]}
                        size="large"
                        type="checkbox"
                        value="magnetite"
                      >
                        <input
                          className="emotion-0"
                          name="minerals"
                          onClick={[Function]}
                          size="large"
                          type="checkbox"
                          value="magnetite"
                        />
                      </Styled(input)>
                      <Styled(span)
                        size="large"
                      >
                        <span
                          className="emotion-2"
                          size="large"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <Styled(svg)
                                aria-hidden={true}
                                focusable="false"
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="emotion-1"
                                  focusable="false"
                                  role="img"
                                  size="medium"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </Styled(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </Styled(span)>
                      <Styled(span)
                        labelPosition="start"
                        size="large"
                      >
                        <span
                          className="emotion-9"
                          size="large"
                        >
                          Magnetite
                        </span>
                      </Styled(span)>
                    </label>
                  </Styled(label)>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Checkbox>
      <FormFieldDivider>
        <Styled(div)
          role="separator"
        >
          <div
            className="emotion-5"
            role="separator"
          />
        </Styled(div)>
      </FormFieldDivider>
      <Checkbox
        justify={true}
        label="Azurite"
        labelPosition="end"
        name="minerals"
        size="large"
        value="azurite"
      >
        <WithTheme(Themed(Choice))
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          justify={true}
          label="Azurite"
          labelPosition="end"
          name="minerals"
          onClick={[Function]}
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
          value="azurite"
        >
          <Themed(Choice)
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            justify={true}
            label="Azurite"
            labelPosition="end"
            name="minerals"
            onClick={[Function]}
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
            value="azurite"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  justify={true}
                  label="Azurite"
                  labelPosition="end"
                  name="minerals"
                  onClick={[Function]}
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                  value="azurite"
                >
                  <Styled(label)
                    justify={true}
                    labelPosition="end"
                    size="large"
                  >
                    <label
                      className="emotion-16"
                      size="large"
                    >
                      <Styled(input)
                        name="minerals"
                        onClick={[Function]}
                        size="large"
                        type="checkbox"
                        value="azurite"
                      >
                        <input
                          className="emotion-0"
                          name="minerals"
                          onClick={[Function]}
                          size="large"
                          type="checkbox"
                          value="azurite"
                        />
                      </Styled(input)>
                      <Styled(span)
                        size="large"
                      >
                        <span
                          className="emotion-2"
                          size="large"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <Styled(svg)
                                aria-hidden={true}
                                focusable="false"
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="emotion-1"
                                  focusable="false"
                                  role="img"
                                  size="medium"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </Styled(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </Styled(span)>
                      <Styled(span)
                        justify={true}
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="emotion-15"
                          size="large"
                        >
                          Azurite
                        </span>
                      </Styled(span)>
                    </label>
                  </Styled(label)>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Checkbox>
      <FormFieldDivider>
        <Styled(div)
          role="separator"
        >
          <div
            className="emotion-5"
            role="separator"
          />
        </Styled(div)>
      </FormFieldDivider>
      <Checkbox
        justify={true}
        label="Hematite"
        labelPosition="start"
        name="minerals"
        size="large"
        value="hematite"
      >
        <WithTheme(Themed(Choice))
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          justify={true}
          label="Hematite"
          labelPosition="start"
          name="minerals"
          onClick={[Function]}
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
          value="hematite"
        >
          <Themed(Choice)
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            justify={true}
            label="Hematite"
            labelPosition="start"
            name="minerals"
            onClick={[Function]}
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
            value="hematite"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  justify={true}
                  label="Hematite"
                  labelPosition="start"
                  name="minerals"
                  onClick={[Function]}
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                  value="hematite"
                >
                  <Styled(label)
                    justify={true}
                    labelPosition="start"
                    size="large"
                  >
                    <label
                      className="emotion-22"
                      size="large"
                    >
                      <Styled(input)
                        name="minerals"
                        onClick={[Function]}
                        size="large"
                        type="checkbox"
                        value="hematite"
                      >
                        <input
                          className="emotion-0"
                          name="minerals"
                          onClick={[Function]}
                          size="large"
                          type="checkbox"
                          value="hematite"
                        />
                      </Styled(input)>
                      <Styled(span)
                        size="large"
                      >
                        <span
                          className="emotion-2"
                          size="large"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <Styled(svg)
                                aria-hidden={true}
                                focusable="false"
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="emotion-1"
                                  focusable="false"
                                  role="img"
                                  size="medium"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </Styled(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </Styled(span)>
                      <Styled(span)
                        justify={true}
                        labelPosition="start"
                        size="large"
                      >
                        <span
                          className="emotion-21"
                          size="large"
                        >
                          Hematite
                        </span>
                      </Styled(span)>
                    </label>
                  </Styled(label)>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Checkbox>
    </form>
  </Styled(form)>
</DemoForm>
`;

exports[`Checkbox demo examples Snapshots: label-wrapping 1`] = `
.emotion-5 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-0 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.emotion-0:focus + span {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0:checked + span,
.emotion-0[type="checkbox"]:indeterminate + span {
  background-color: #3272d9;
  border-color: #3272d9;
}

.emotion-0:checked:hover + span,
.emotion-0[type="checkbox"]:indeterminate:hover + span {
  background-color: #5691f0;
  border-color: #5691f0;
}

.emotion-0:checked:disabled + span,
.emotion-0[type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #ffffff;
}

.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #ffffff;
  content: "";
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  height: 1em;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 1em;
}

.emotion-2 svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.emotion-1 {
  fill: currentcolor;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.emotion-3 {
  color: #333840;
  font-size: 0.875em;
  margin-left: 1.1428571428571428em;
  margin-right: 0;
}

<DemoForm>
  <Styled(form)
    onSubmit={[Function]}
  >
    <form
      className="emotion-5"
      onSubmit={[Function]}
    >
      <Checkbox
        defaultChecked={true}
        label="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis."
        labelPosition="end"
        name="example"
        size="large"
      >
        <WithTheme(Themed(Choice))
          defaultChecked={true}
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis."
          labelPosition="end"
          name="example"
          onClick={[Function]}
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
        >
          <Themed(Choice)
            defaultChecked={true}
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis."
            labelPosition="end"
            name="example"
            onClick={[Function]}
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  defaultChecked={true}
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis."
                  labelPosition="end"
                  name="example"
                  onClick={[Function]}
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                >
                  <Styled(label)
                    labelPosition="end"
                    size="large"
                  >
                    <label
                      className="emotion-4"
                      size="large"
                    >
                      <Styled(input)
                        defaultChecked={true}
                        name="example"
                        onClick={[Function]}
                        size="large"
                        type="checkbox"
                      >
                        <input
                          className="emotion-0"
                          defaultChecked={true}
                          name="example"
                          onClick={[Function]}
                          size="large"
                          type="checkbox"
                        />
                      </Styled(input)>
                      <Styled(span)
                        size="large"
                      >
                        <span
                          className="emotion-2"
                          size="large"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <Styled(svg)
                                aria-hidden={true}
                                focusable="false"
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="emotion-1"
                                  focusable="false"
                                  role="img"
                                  size="medium"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </Styled(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </Styled(span)>
                      <Styled(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="emotion-3"
                          size="large"
                        >
                          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ornare velit nec dui molestie posuere. Nulla facilisi. Nulla tempor turpis vel aliquam viverra. In eu sagittis elit. Integer scelerisque purus nulla, sit amet dictum ipsum elementum finibus. Suspendisse et erat nisl. Sed aliquet finibus odio, ut volutpat metus dictum sed. Nullam nunc mi, consequat sit amet magna ut, faucibus placerat tortor. Duis porttitor tellus vitae condimentum convallis.
                        </span>
                      </Styled(span)>
                    </label>
                  </Styled(label)>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Checkbox>
    </form>
  </Styled(form)>
</DemoForm>
`;

exports[`Checkbox demo examples Snapshots: next-to-other-inputs 1`] = `
.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-0 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.emotion-0:focus + span {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0:checked + span,
.emotion-0[type="checkbox"]:indeterminate + span {
  background-color: #3272d9;
  border-color: #3272d9;
}

.emotion-0:checked:hover + span,
.emotion-0[type="checkbox"]:indeterminate:hover + span {
  background-color: #5691f0;
  border-color: #5691f0;
}

.emotion-0:checked:disabled + span,
.emotion-0[type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #ffffff;
}

.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #ffffff;
  content: "";
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  height: 1em;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 1em;
}

.emotion-2 svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.emotion-1 {
  fill: currentcolor;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.emotion-18 {
  color: #333840;
  font-size: 0.875em;
  margin-left: 1.1428571428571428em;
  margin-right: 0;
}

.emotion-3 {
  color: #333840;
  font-size: 0.75em;
  margin-left: 1.3333333333333333em;
  margin-right: 0;
}

.emotion-47 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #ffffff;
  content: "";
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  height: 1.5em;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 1.5em;
}

.emotion-47 svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.emotion-44 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2.5em;
  margin: 0;
  min-width: 2.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-44 *,
.emotion-44 *::before,
.emotion-44 *::after {
  box-sizing: inherit;
}

.emotion-44:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-44:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-44:focus:active,
.emotion-44:focus:hover {
  border-color: #c8d1e0;
}

.emotion-44:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-44::-moz-focus-inner {
  border: 0;
}

.emotion-44 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-44 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-44 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-44 [role="img"]:only-child {
  margin: 0;
}

.emotion-13 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-height: 100%;
  pointer-events: none;
  width: 100%;
}

.emotion-42 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.857142857142857em;
}

.emotion-42:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-42:last-child {
  padding-right: 0.5714285714285714em;
}

.emotion-61 > * {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-61 > * > * {
  -webkit-flex: 0 0 8rem;
  -ms-flex: 0 0 8rem;
  flex: 0 0 8rem;
  margin-right: 0.5rem;
}

.emotion-60 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-60 > * {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-60 > * > * {
  -webkit-flex: 0 0 8rem;
  -ms-flex: 0 0 8rem;
  flex: 0 0 8rem;
  margin-right: 0.5rem;
}

.emotion-8 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-8 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-8 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-7 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  position: relative;
  z-index: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.emotion-7 *,
.emotion-7 *::before,
.emotion-7 *::after {
  box-sizing: inherit;
}

.emotion-7:hover > div:last-child {
  border-color: #5691f0;
}

.emotion-7:focus > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-7:active > div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-7 [role="img"] {
  color: #c8d1e0;
  display: block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin: 0 0.5em;
}

.emotion-7 [role="img"]:last-of-type {
  color: #c8d1e0;
}

.emotion-5 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.75em;
  outline: 0;
  padding-left: 0.6666666666666666em;
  padding-right: 0.6666666666666666em;
}

.emotion-5[type="search"] {
  -webkit-appearance: none;
}

.emotion-5[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-5::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-5::-ms-clear {
  display: none;
}

.emotion-5:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-6 {
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: -1;
}

.emotion-14 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 1.5em;
  margin: 0;
  min-width: 1.5em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-14 *,
.emotion-14 *::before,
.emotion-14 *::after {
  box-sizing: inherit;
}

.emotion-14:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-14:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-14:focus:active,
.emotion-14:focus:hover {
  border-color: #c8d1e0;
}

.emotion-14:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-14::-moz-focus-inner {
  border: 0;
}

.emotion-14 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-14 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-14 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-14 [role="img"]:only-child {
  margin: 0;
}

.emotion-12 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.75em;
  line-height: 2em;
}

.emotion-20 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.2857142857142856em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 0.5714285714285714em;
  padding-right: 0.5714285714285714em;
}

.emotion-20[type="search"] {
  -webkit-appearance: none;
}

.emotion-20[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-20::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-20::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-20:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-20::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-20::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-20:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-20::-ms-clear {
  display: none;
}

.emotion-20:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-29 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 2em;
  margin: 0;
  min-width: 2em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-29 *,
.emotion-29 *::before,
.emotion-29 *::after {
  box-sizing: inherit;
}

.emotion-29:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-29:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-29:focus:active,
.emotion-29:focus:hover {
  border-color: #c8d1e0;
}

.emotion-29:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-29::-moz-focus-inner {
  border: 0;
}

.emotion-29 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-29 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-29 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-29 [role="img"]:only-child {
  margin: 0;
}

.emotion-27 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 2.2857142857142856em;
}

.emotion-35 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 2.857142857142857em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-35[type="search"] {
  -webkit-appearance: none;
}

.emotion-35[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-35::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-35::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-35:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-35::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-35::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-35:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-35::-ms-clear {
  display: none;
}

.emotion-35:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-50 {
  background-color: transparent;
  border: 0;
  box-shadow: none;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  font-family: inherit;
  height: 3.7142857142857144em;
  min-width: 0;
  width: 100%;
  color: #333840;
  -webkit-text-fill-color: #333840;
  font-size: 0.875em;
  outline: 0;
  padding-left: 1.1428571428571428em;
  padding-right: 1.1428571428571428em;
}

.emotion-50[type="search"] {
  -webkit-appearance: none;
}

.emotion-50[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.emotion-50::-webkit-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-50::-moz-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-50:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-50::placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-50::-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-50:-ms-input-placeholder {
  color: #8e99ab;
  -webkit-text-fill-color: #8e99ab;
  font-style: italic;
}

.emotion-50::-ms-clear {
  display: none;
}

.emotion-50:focus ~ div:last-child {
  border-color: #c8d1e0;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-59 {
  box-sizing: border-box;
  color: #3272d9;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  cursor: pointer;
  display: inline-block;
  font-weight: 600;
  height: 3.25em;
  margin: 0;
  min-width: 3.25em;
  padding: 0 0.5em;
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
}

.emotion-59 *,
.emotion-59 *::before,
.emotion-59 *::after {
  box-sizing: inherit;
}

.emotion-59:focus {
  background-color: #ffffff;
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-59:hover {
  background-color: #f5f7fa;
  border-color: #5691f0;
  color: #3272d9;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-59:focus:active,
.emotion-59:focus:hover {
  border-color: #c8d1e0;
}

.emotion-59:active {
  background-color: #ebeff5;
  border-color: #1d5bbf;
  color: #3272d9;
}

.emotion-59::-moz-focus-inner {
  border: 0;
}

.emotion-59 [role="img"] {
  box-sizing: content-box;
  color: #3272d9;
  display: block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.emotion-59 [role="img"]:first-child {
  margin-right: 0.5em;
}

.emotion-59 [role="img"]:last-child {
  margin-left: 0.5em;
}

.emotion-59 [role="img"]:only-child {
  margin: 0;
}

.emotion-57 {
  display: block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  font-size: 0.875em;
  line-height: 3.7142857142857144em;
}

.emotion-57:first-child {
  padding-left: 0.5714285714285714em;
}

.emotion-57:last-child {
  padding-right: 0.5714285714285714em;
}

<Styled(DemoForm)>
  <DemoForm
    className="emotion-61"
  >
    <Styled(form)
      className="emotion-61"
      onSubmit={[Function]}
    >
      <form
        className="emotion-60"
        onSubmit={[Function]}
      >
        <div>
          <Checkbox
            label="Small"
            labelPosition="end"
            name="size"
            size="small"
          >
            <WithTheme(Themed(Choice))
              iconChecked={<IconCheckBoxCheck />}
              inputRef={[Function]}
              label="Small"
              labelPosition="end"
              name="size"
              onClick={[Function]}
              rootProps={
                Object {
                  "className": undefined,
                }
              }
              size="small"
              type="checkbox"
            >
              <Themed(Choice)
                iconChecked={<IconCheckBoxCheck />}
                inputRef={[Function]}
                label="Small"
                labelPosition="end"
                name="size"
                onClick={[Function]}
                rootProps={
                  Object {
                    "className": undefined,
                  }
                }
                size="small"
                type="checkbox"
              >
                <ThemeProvider>
                  <ThemeProvider>
                    <Choice
                      iconChecked={<IconCheckBoxCheck />}
                      inputRef={[Function]}
                      label="Small"
                      labelPosition="end"
                      name="size"
                      onClick={[Function]}
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="small"
                      type="checkbox"
                    >
                      <Styled(label)
                        labelPosition="end"
                        size="small"
                      >
                        <label
                          className="emotion-4"
                          size="small"
                        >
                          <Styled(input)
                            name="size"
                            onClick={[Function]}
                            size="small"
                            type="checkbox"
                          >
                            <input
                              className="emotion-0"
                              name="size"
                              onClick={[Function]}
                              size="small"
                              type="checkbox"
                            />
                          </Styled(input)>
                          <Styled(span)
                            size="small"
                          >
                            <span
                              className="emotion-2"
                              size="small"
                            >
                              <IconCheckBoxCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <Styled(svg)
                                    aria-hidden={true}
                                    focusable="false"
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="emotion-1"
                                      focusable="false"
                                      role="img"
                                      size="medium"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <path
                                          d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                        />
                                      </g>
                                    </svg>
                                  </Styled(svg)>
                                </Icon>
                              </IconCheckBoxCheck>
                            </span>
                          </Styled(span)>
                          <Styled(span)
                            labelPosition="end"
                            size="small"
                          >
                            <span
                              className="emotion-3"
                              size="small"
                            >
                              Small
                            </span>
                          </Styled(span)>
                        </label>
                      </Styled(label)>
                    </Choice>
                  </ThemeProvider>
                </ThemeProvider>
              </Themed(Choice)>
            </WithTheme(Themed(Choice))>
          </Checkbox>
          <TextInput
            defaultValue="Small"
            size="small"
            type="text"
          >
            <Styled(WithTheme(Themed(FauxControl)))
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Small",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="small"
            >
              <WithTheme(Themed(FauxControl))
                className="emotion-8"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "input",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(input)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Small",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="small"
              >
                <Themed(FauxControl)
                  className="emotion-8"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "input",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(input)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "Small",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  size="small"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <FauxControl
                        className="emotion-8"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(input)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "Small",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        size="small"
                      >
                        <Styled(div)
                          className="emotion-8"
                          control={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "input",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "displayName": "Styled(input)",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                        >
                          <div
                            className="emotion-7"
                          >
                            <Styled(input)
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "Small",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "text",
                                }
                              }
                              defaultValue="Small"
                              key="control"
                              size="small"
                              type="text"
                            >
                              <input
                                className="emotion-5"
                                defaultValue="Small"
                                size="small"
                                type="text"
                              />
                            </Styled(input)>
                            <Styled(div)>
                              <div
                                className="emotion-6"
                              />
                            </Styled(div)>
                          </div>
                        </Styled(div)>
                      </FauxControl>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </WithTheme(Themed(FauxControl))>
            </Styled(WithTheme(Themed(FauxControl)))>
          </TextInput>
          <WithForwardRef(Button)
            size="small"
          >
            <Button
              forwardedRef={null}
              size="small"
            >
              <Styled(button)
                size="small"
                text="Small"
              >
                <button
                  className="emotion-14"
                  size="small"
                >
                  <Styled(span)>
                    <span
                      className="emotion-13"
                    >
                      <Styled(span)
                        size="small"
                      >
                        <span
                          className="emotion-12"
                          size="small"
                        >
                          Small
                        </span>
                      </Styled(span)>
                    </span>
                  </Styled(span)>
                </button>
              </Styled(button)>
            </Button>
          </WithForwardRef(Button)>
        </div>
        <div>
          <Checkbox
            label="Medium"
            labelPosition="end"
            name="size"
            size="medium"
          >
            <WithTheme(Themed(Choice))
              iconChecked={<IconCheckBoxCheck />}
              inputRef={[Function]}
              label="Medium"
              labelPosition="end"
              name="size"
              onClick={[Function]}
              rootProps={
                Object {
                  "className": undefined,
                }
              }
              size="medium"
              type="checkbox"
            >
              <Themed(Choice)
                iconChecked={<IconCheckBoxCheck />}
                inputRef={[Function]}
                label="Medium"
                labelPosition="end"
                name="size"
                onClick={[Function]}
                rootProps={
                  Object {
                    "className": undefined,
                  }
                }
                size="medium"
                type="checkbox"
              >
                <ThemeProvider>
                  <ThemeProvider>
                    <Choice
                      iconChecked={<IconCheckBoxCheck />}
                      inputRef={[Function]}
                      label="Medium"
                      labelPosition="end"
                      name="size"
                      onClick={[Function]}
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="medium"
                      type="checkbox"
                    >
                      <Styled(label)
                        labelPosition="end"
                        size="medium"
                      >
                        <label
                          className="emotion-4"
                          size="medium"
                        >
                          <Styled(input)
                            name="size"
                            onClick={[Function]}
                            size="medium"
                            type="checkbox"
                          >
                            <input
                              className="emotion-0"
                              name="size"
                              onClick={[Function]}
                              size="medium"
                              type="checkbox"
                            />
                          </Styled(input)>
                          <Styled(span)
                            size="medium"
                          >
                            <span
                              className="emotion-2"
                              size="medium"
                            >
                              <IconCheckBoxCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <Styled(svg)
                                    aria-hidden={true}
                                    focusable="false"
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="emotion-1"
                                      focusable="false"
                                      role="img"
                                      size="medium"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <path
                                          d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                        />
                                      </g>
                                    </svg>
                                  </Styled(svg)>
                                </Icon>
                              </IconCheckBoxCheck>
                            </span>
                          </Styled(span)>
                          <Styled(span)
                            labelPosition="end"
                            size="medium"
                          >
                            <span
                              className="emotion-18"
                              size="medium"
                            >
                              Medium
                            </span>
                          </Styled(span)>
                        </label>
                      </Styled(label)>
                    </Choice>
                  </ThemeProvider>
                </ThemeProvider>
              </Themed(Choice)>
            </WithTheme(Themed(Choice))>
          </Checkbox>
          <TextInput
            defaultValue="Medium"
            size="medium"
            type="text"
          >
            <Styled(WithTheme(Themed(FauxControl)))
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Medium",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="medium"
            >
              <WithTheme(Themed(FauxControl))
                className="emotion-8"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "input",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(input)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Medium",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="medium"
              >
                <Themed(FauxControl)
                  className="emotion-8"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "input",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(input)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "Medium",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  size="medium"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <FauxControl
                        className="emotion-8"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(input)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "Medium",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        size="medium"
                      >
                        <Styled(div)
                          className="emotion-8"
                          control={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "input",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "displayName": "Styled(input)",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                        >
                          <div
                            className="emotion-7"
                          >
                            <Styled(input)
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "Medium",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "text",
                                }
                              }
                              defaultValue="Medium"
                              key="control"
                              size="medium"
                              type="text"
                            >
                              <input
                                className="emotion-20"
                                defaultValue="Medium"
                                size="medium"
                                type="text"
                              />
                            </Styled(input)>
                            <Styled(div)>
                              <div
                                className="emotion-6"
                              />
                            </Styled(div)>
                          </div>
                        </Styled(div)>
                      </FauxControl>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </WithTheme(Themed(FauxControl))>
            </Styled(WithTheme(Themed(FauxControl)))>
          </TextInput>
          <WithForwardRef(Button)
            size="medium"
          >
            <Button
              forwardedRef={null}
              size="medium"
            >
              <Styled(button)
                size="medium"
                text="Medium"
              >
                <button
                  className="emotion-29"
                  size="medium"
                >
                  <Styled(span)>
                    <span
                      className="emotion-13"
                    >
                      <Styled(span)
                        size="medium"
                      >
                        <span
                          className="emotion-27"
                          size="medium"
                        >
                          Medium
                        </span>
                      </Styled(span)>
                    </span>
                  </Styled(span)>
                </button>
              </Styled(button)>
            </Button>
          </WithForwardRef(Button)>
        </div>
        <div>
          <Checkbox
            label="Large"
            labelPosition="end"
            name="size"
            size="large"
          >
            <WithTheme(Themed(Choice))
              iconChecked={<IconCheckBoxCheck />}
              inputRef={[Function]}
              label="Large"
              labelPosition="end"
              name="size"
              onClick={[Function]}
              rootProps={
                Object {
                  "className": undefined,
                }
              }
              size="large"
              type="checkbox"
            >
              <Themed(Choice)
                iconChecked={<IconCheckBoxCheck />}
                inputRef={[Function]}
                label="Large"
                labelPosition="end"
                name="size"
                onClick={[Function]}
                rootProps={
                  Object {
                    "className": undefined,
                  }
                }
                size="large"
                type="checkbox"
              >
                <ThemeProvider>
                  <ThemeProvider>
                    <Choice
                      iconChecked={<IconCheckBoxCheck />}
                      inputRef={[Function]}
                      label="Large"
                      labelPosition="end"
                      name="size"
                      onClick={[Function]}
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="large"
                      type="checkbox"
                    >
                      <Styled(label)
                        labelPosition="end"
                        size="large"
                      >
                        <label
                          className="emotion-4"
                          size="large"
                        >
                          <Styled(input)
                            name="size"
                            onClick={[Function]}
                            size="large"
                            type="checkbox"
                          >
                            <input
                              className="emotion-0"
                              name="size"
                              onClick={[Function]}
                              size="large"
                              type="checkbox"
                            />
                          </Styled(input)>
                          <Styled(span)
                            size="large"
                          >
                            <span
                              className="emotion-2"
                              size="large"
                            >
                              <IconCheckBoxCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <Styled(svg)
                                    aria-hidden={true}
                                    focusable="false"
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="emotion-1"
                                      focusable="false"
                                      role="img"
                                      size="medium"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <path
                                          d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                        />
                                      </g>
                                    </svg>
                                  </Styled(svg)>
                                </Icon>
                              </IconCheckBoxCheck>
                            </span>
                          </Styled(span)>
                          <Styled(span)
                            labelPosition="end"
                            size="large"
                          >
                            <span
                              className="emotion-18"
                              size="large"
                            >
                              Large
                            </span>
                          </Styled(span)>
                        </label>
                      </Styled(label)>
                    </Choice>
                  </ThemeProvider>
                </ThemeProvider>
              </Themed(Choice)>
            </WithTheme(Themed(Choice))>
          </Checkbox>
          <TextInput
            defaultValue="Large"
            size="large"
            type="text"
          >
            <Styled(WithTheme(Themed(FauxControl)))
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Large",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="large"
            >
              <WithTheme(Themed(FauxControl))
                className="emotion-8"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "input",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(input)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Large",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="large"
              >
                <Themed(FauxControl)
                  className="emotion-8"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "input",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(input)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "Large",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  size="large"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <FauxControl
                        className="emotion-8"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(input)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "Large",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        size="large"
                      >
                        <Styled(div)
                          className="emotion-8"
                          control={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "input",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "displayName": "Styled(input)",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                        >
                          <div
                            className="emotion-7"
                          >
                            <Styled(input)
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "Large",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "text",
                                }
                              }
                              defaultValue="Large"
                              key="control"
                              size="large"
                              type="text"
                            >
                              <input
                                className="emotion-35"
                                defaultValue="Large"
                                size="large"
                                type="text"
                              />
                            </Styled(input)>
                            <Styled(div)>
                              <div
                                className="emotion-6"
                              />
                            </Styled(div)>
                          </div>
                        </Styled(div)>
                      </FauxControl>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </WithTheme(Themed(FauxControl))>
            </Styled(WithTheme(Themed(FauxControl)))>
          </TextInput>
          <WithForwardRef(Button)
            size="large"
          >
            <Button
              forwardedRef={null}
              size="large"
            >
              <Styled(button)
                size="large"
                text="Large"
              >
                <button
                  className="emotion-44"
                  size="large"
                >
                  <Styled(span)>
                    <span
                      className="emotion-13"
                    >
                      <Styled(span)
                        size="large"
                      >
                        <span
                          className="emotion-42"
                          size="large"
                        >
                          Large
                        </span>
                      </Styled(span)>
                    </span>
                  </Styled(span)>
                </button>
              </Styled(button)>
            </Button>
          </WithForwardRef(Button)>
        </div>
        <div>
          <Checkbox
            label="Jumbo"
            labelPosition="end"
            name="size"
            size="jumbo"
          >
            <WithTheme(Themed(Choice))
              iconChecked={<IconCheckBoxCheck />}
              inputRef={[Function]}
              label="Jumbo"
              labelPosition="end"
              name="size"
              onClick={[Function]}
              rootProps={
                Object {
                  "className": undefined,
                }
              }
              size="jumbo"
              type="checkbox"
            >
              <Themed(Choice)
                iconChecked={<IconCheckBoxCheck />}
                inputRef={[Function]}
                label="Jumbo"
                labelPosition="end"
                name="size"
                onClick={[Function]}
                rootProps={
                  Object {
                    "className": undefined,
                  }
                }
                size="jumbo"
                type="checkbox"
              >
                <ThemeProvider>
                  <ThemeProvider>
                    <Choice
                      iconChecked={<IconCheckBoxCheck />}
                      inputRef={[Function]}
                      label="Jumbo"
                      labelPosition="end"
                      name="size"
                      onClick={[Function]}
                      rootProps={
                        Object {
                          "className": undefined,
                        }
                      }
                      size="jumbo"
                      type="checkbox"
                    >
                      <Styled(label)
                        labelPosition="end"
                        size="jumbo"
                      >
                        <label
                          className="emotion-4"
                          size="jumbo"
                        >
                          <Styled(input)
                            name="size"
                            onClick={[Function]}
                            size="jumbo"
                            type="checkbox"
                          >
                            <input
                              className="emotion-0"
                              name="size"
                              onClick={[Function]}
                              size="jumbo"
                              type="checkbox"
                            />
                          </Styled(input)>
                          <Styled(span)
                            size="jumbo"
                          >
                            <span
                              className="emotion-47"
                              size="jumbo"
                            >
                              <IconCheckBoxCheck>
                                <Icon
                                  rtl={false}
                                  size="medium"
                                >
                                  <Styled(svg)
                                    aria-hidden={true}
                                    focusable="false"
                                    role="img"
                                    rtl={false}
                                    size="medium"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="emotion-1"
                                      focusable="false"
                                      role="img"
                                      size="medium"
                                      viewBox="0 0 24 24"
                                    >
                                      <g>
                                        <path
                                          d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                        />
                                      </g>
                                    </svg>
                                  </Styled(svg)>
                                </Icon>
                              </IconCheckBoxCheck>
                            </span>
                          </Styled(span)>
                          <Styled(span)
                            labelPosition="end"
                            size="jumbo"
                          >
                            <span
                              className="emotion-18"
                              size="jumbo"
                            >
                              Jumbo
                            </span>
                          </Styled(span)>
                        </label>
                      </Styled(label)>
                    </Choice>
                  </ThemeProvider>
                </ThemeProvider>
              </Themed(Choice)>
            </WithTheme(Themed(Choice))>
          </Checkbox>
          <TextInput
            defaultValue="Jumbo"
            size="jumbo"
            type="text"
          >
            <Styled(WithTheme(Themed(FauxControl)))
              control={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "input",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    [Function],
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(input)",
                  "render": [Function],
                  "withComponent": [Function],
                }
              }
              controlProps={
                Object {
                  "aria-invalid": undefined,
                  "aria-required": undefined,
                  "controlRef": undefined,
                  "defaultValue": "Jumbo",
                  "disabled": undefined,
                  "readOnly": undefined,
                  "required": undefined,
                  "type": "text",
                }
              }
              size="jumbo"
            >
              <WithTheme(Themed(FauxControl))
                className="emotion-8"
                control={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "__emotion_base": "input",
                    "__emotion_forwardProp": undefined,
                    "__emotion_real": [Circular],
                    "__emotion_styles": Array [
                      [Function],
                    ],
                    "defaultProps": undefined,
                    "displayName": "Styled(input)",
                    "render": [Function],
                    "withComponent": [Function],
                  }
                }
                controlProps={
                  Object {
                    "aria-invalid": undefined,
                    "aria-required": undefined,
                    "controlRef": undefined,
                    "defaultValue": "Jumbo",
                    "disabled": undefined,
                    "readOnly": undefined,
                    "required": undefined,
                    "type": "text",
                  }
                }
                size="jumbo"
              >
                <Themed(FauxControl)
                  className="emotion-8"
                  control={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": "input",
                      "__emotion_forwardProp": undefined,
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "displayName": "Styled(input)",
                      "render": [Function],
                      "withComponent": [Function],
                    }
                  }
                  controlProps={
                    Object {
                      "aria-invalid": undefined,
                      "aria-required": undefined,
                      "controlRef": undefined,
                      "defaultValue": "Jumbo",
                      "disabled": undefined,
                      "readOnly": undefined,
                      "required": undefined,
                      "type": "text",
                    }
                  }
                  size="jumbo"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <FauxControl
                        className="emotion-8"
                        control={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "__emotion_base": "input",
                            "__emotion_forwardProp": undefined,
                            "__emotion_real": [Circular],
                            "__emotion_styles": Array [
                              [Function],
                            ],
                            "defaultProps": undefined,
                            "displayName": "Styled(input)",
                            "render": [Function],
                            "withComponent": [Function],
                          }
                        }
                        controlProps={
                          Object {
                            "aria-invalid": undefined,
                            "aria-required": undefined,
                            "controlRef": undefined,
                            "defaultValue": "Jumbo",
                            "disabled": undefined,
                            "readOnly": undefined,
                            "required": undefined,
                            "type": "text",
                          }
                        }
                        size="jumbo"
                      >
                        <Styled(div)
                          className="emotion-8"
                          control={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "input",
                              "__emotion_forwardProp": undefined,
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "displayName": "Styled(input)",
                              "render": [Function],
                              "withComponent": [Function],
                            }
                          }
                        >
                          <div
                            className="emotion-7"
                          >
                            <Styled(input)
                              controlPropsIn={
                                Object {
                                  "aria-invalid": undefined,
                                  "aria-required": undefined,
                                  "controlRef": undefined,
                                  "defaultValue": "Jumbo",
                                  "disabled": undefined,
                                  "readOnly": undefined,
                                  "required": undefined,
                                  "type": "text",
                                }
                              }
                              defaultValue="Jumbo"
                              key="control"
                              size="jumbo"
                              type="text"
                            >
                              <input
                                className="emotion-50"
                                defaultValue="Jumbo"
                                size="jumbo"
                                type="text"
                              />
                            </Styled(input)>
                            <Styled(div)>
                              <div
                                className="emotion-6"
                              />
                            </Styled(div)>
                          </div>
                        </Styled(div)>
                      </FauxControl>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(FauxControl)>
              </WithTheme(Themed(FauxControl))>
            </Styled(WithTheme(Themed(FauxControl)))>
          </TextInput>
          <WithForwardRef(Button)
            size="jumbo"
          >
            <Button
              forwardedRef={null}
              size="jumbo"
            >
              <Styled(button)
                size="jumbo"
                text="Jumbo"
              >
                <button
                  className="emotion-59"
                  size="jumbo"
                >
                  <Styled(span)>
                    <span
                      className="emotion-13"
                    >
                      <Styled(span)
                        size="jumbo"
                      >
                        <span
                          className="emotion-57"
                          size="jumbo"
                        >
                          Jumbo
                        </span>
                      </Styled(span)>
                    </span>
                  </Styled(span)>
                </button>
              </Styled(button)>
            </Button>
          </WithForwardRef(Button)>
        </div>
      </form>
    </Styled(form)>
  </DemoForm>
</Styled(DemoForm)>
`;

exports[`Checkbox demo examples Snapshots: required 1`] = `
.emotion-10 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-0 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.emotion-0:focus + span {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0:checked + span,
.emotion-0[type="checkbox"]:indeterminate + span {
  background-color: #3272d9;
  border-color: #3272d9;
}

.emotion-0:checked:hover + span,
.emotion-0[type="checkbox"]:indeterminate:hover + span {
  background-color: #5691f0;
  border-color: #5691f0;
}

.emotion-0:checked:disabled + span,
.emotion-0[type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #ffffff;
}

.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #ffffff;
  content: "";
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  height: 1em;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 1em;
}

.emotion-2 svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.emotion-1 {
  fill: currentcolor;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.emotion-3 {
  color: #333840;
  font-size: 0.875em;
  margin-left: 1.1428571428571428em;
  margin-right: 0;
}

<DemoForm>
  <Styled(form)
    onSubmit={[Function]}
  >
    <form
      className="emotion-10"
      onSubmit={[Function]}
    >
      <Checkbox
        defaultChecked={true}
        label="Quartz"
        labelPosition="end"
        name="minerals"
        required={true}
        size="large"
        value="quartz"
      >
        <WithTheme(Themed(Choice))
          defaultChecked={true}
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Quartz"
          labelPosition="end"
          name="minerals"
          onClick={[Function]}
          required={true}
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
          value="quartz"
        >
          <Themed(Choice)
            defaultChecked={true}
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Quartz"
            labelPosition="end"
            name="minerals"
            onClick={[Function]}
            required={true}
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
            value="quartz"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  defaultChecked={true}
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Quartz"
                  labelPosition="end"
                  name="minerals"
                  onClick={[Function]}
                  required={true}
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                  value="quartz"
                >
                  <Styled(label)
                    labelPosition="end"
                    size="large"
                  >
                    <label
                      className="emotion-4"
                      size="large"
                    >
                      <Styled(input)
                        aria-required={true}
                        defaultChecked={true}
                        name="minerals"
                        onClick={[Function]}
                        required={true}
                        size="large"
                        type="checkbox"
                        value="quartz"
                      >
                        <input
                          aria-required={true}
                          className="emotion-0"
                          defaultChecked={true}
                          name="minerals"
                          onClick={[Function]}
                          required={true}
                          size="large"
                          type="checkbox"
                          value="quartz"
                        />
                      </Styled(input)>
                      <Styled(span)
                        size="large"
                      >
                        <span
                          className="emotion-2"
                          size="large"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <Styled(svg)
                                aria-hidden={true}
                                focusable="false"
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="emotion-1"
                                  focusable="false"
                                  role="img"
                                  size="medium"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </Styled(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </Styled(span)>
                      <Styled(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="emotion-3"
                          size="large"
                        >
                          Quartz
                        </span>
                      </Styled(span)>
                    </label>
                  </Styled(label)>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Checkbox>
      <Checkbox
        label="Magnetite"
        labelPosition="end"
        name="minerals"
        required={true}
        size="large"
        value="magnetite"
      >
        <WithTheme(Themed(Choice))
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Magnetite"
          labelPosition="end"
          name="minerals"
          onClick={[Function]}
          required={true}
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
          value="magnetite"
        >
          <Themed(Choice)
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Magnetite"
            labelPosition="end"
            name="minerals"
            onClick={[Function]}
            required={true}
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
            value="magnetite"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Magnetite"
                  labelPosition="end"
                  name="minerals"
                  onClick={[Function]}
                  required={true}
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                  value="magnetite"
                >
                  <Styled(label)
                    labelPosition="end"
                    size="large"
                  >
                    <label
                      className="emotion-4"
                      size="large"
                    >
                      <Styled(input)
                        aria-required={true}
                        name="minerals"
                        onClick={[Function]}
                        required={true}
                        size="large"
                        type="checkbox"
                        value="magnetite"
                      >
                        <input
                          aria-required={true}
                          className="emotion-0"
                          name="minerals"
                          onClick={[Function]}
                          required={true}
                          size="large"
                          type="checkbox"
                          value="magnetite"
                        />
                      </Styled(input)>
                      <Styled(span)
                        size="large"
                      >
                        <span
                          className="emotion-2"
                          size="large"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <Styled(svg)
                                aria-hidden={true}
                                focusable="false"
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="emotion-1"
                                  focusable="false"
                                  role="img"
                                  size="medium"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </Styled(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </Styled(span)>
                      <Styled(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="emotion-3"
                          size="large"
                        >
                          Magnetite
                        </span>
                      </Styled(span)>
                    </label>
                  </Styled(label)>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Checkbox>
    </form>
  </Styled(form)>
</DemoForm>
`;

exports[`Checkbox demo examples Snapshots: rtl 1`] = `
.emotion-21 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-0 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.emotion-0:focus + span {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0:checked + span,
.emotion-0[type="checkbox"]:indeterminate + span {
  background-color: #3272d9;
  border-color: #3272d9;
}

.emotion-0:checked:hover + span,
.emotion-0[type="checkbox"]:indeterminate:hover + span {
  background-color: #5691f0;
  border-color: #5691f0;
}

.emotion-0:checked:disabled + span,
.emotion-0[type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #ffffff;
}

.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #ffffff;
  content: "";
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  height: 1em;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 1em;
}

.emotion-2 svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.emotion-1 {
  fill: currentcolor;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.emotion-8 {
  color: #333840;
  font-size: 0.875em;
  margin-left: 1.1428571428571428em;
  margin-right: 0;
}

.emotion-10 {
  background-color: #c8d1e0;
  height: 1px;
  margin: 0.5em 0;
}

.emotion-9 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.emotion-9 *,
.emotion-9 *::before,
.emotion-9 *::after {
  box-sizing: inherit;
}

.emotion-9:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-3 {
  color: #333840;
  font-size: 0.875em;
  margin-left: 0;
  margin-right: 1.1428571428571428em;
}

.emotion-15 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.emotion-15 *,
.emotion-15 *::before,
.emotion-15 *::after {
  box-sizing: inherit;
}

.emotion-15:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-19 {
  color: #333840;
  font-size: 0.875em;
  margin-left: auto;
  margin-right: 0;
}

.emotion-20 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
}

.emotion-20 *,
.emotion-20 *::before,
.emotion-20 *::after {
  box-sizing: inherit;
}

.emotion-20:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-14 {
  color: #333840;
  font-size: 0.875em;
  margin-left: 0;
  margin-right: auto;
}

<div
  dir="rtl"
>
  <ThemeProvider>
    <ThemeProvider>
      <DemoForm>
        <Styled(form)
          onSubmit={[Function]}
        >
          <form
            className="emotion-21"
            onSubmit={[Function]}
          >
            <Checkbox
              label="مرحبا بالعالم"
              labelPosition="end"
              name="example"
              size="large"
            >
              <WithTheme(Themed(Choice))
                iconChecked={<IconCheckBoxCheck />}
                inputRef={[Function]}
                label="مرحبا بالعالم"
                labelPosition="end"
                name="example"
                onClick={[Function]}
                rootProps={
                  Object {
                    "className": undefined,
                  }
                }
                size="large"
                type="checkbox"
              >
                <Themed(Choice)
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="مرحبا بالعالم"
                  labelPosition="end"
                  name="example"
                  onClick={[Function]}
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <Choice
                        iconChecked={<IconCheckBoxCheck />}
                        inputRef={[Function]}
                        label="مرحبا بالعالم"
                        labelPosition="end"
                        name="example"
                        onClick={[Function]}
                        rootProps={
                          Object {
                            "className": undefined,
                          }
                        }
                        size="large"
                        type="checkbox"
                      >
                        <Styled(label)
                          labelPosition="end"
                          size="large"
                        >
                          <label
                            className="emotion-4"
                            size="large"
                          >
                            <Styled(input)
                              name="example"
                              onClick={[Function]}
                              size="large"
                              type="checkbox"
                            >
                              <input
                                className="emotion-0"
                                name="example"
                                onClick={[Function]}
                                size="large"
                                type="checkbox"
                              />
                            </Styled(input)>
                            <Styled(span)
                              size="large"
                            >
                              <span
                                className="emotion-2"
                                size="large"
                              >
                                <IconCheckBoxCheck>
                                  <Icon
                                    rtl={false}
                                    size="medium"
                                  >
                                    <Styled(svg)
                                      aria-hidden={true}
                                      focusable="false"
                                      role="img"
                                      rtl={false}
                                      size="medium"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="emotion-1"
                                        focusable="false"
                                        role="img"
                                        size="medium"
                                        viewBox="0 0 24 24"
                                      >
                                        <g>
                                          <path
                                            d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                          />
                                        </g>
                                      </svg>
                                    </Styled(svg)>
                                  </Icon>
                                </IconCheckBoxCheck>
                              </span>
                            </Styled(span)>
                            <Styled(span)
                              labelPosition="end"
                              size="large"
                            >
                              <span
                                className="emotion-3"
                                size="large"
                              >
                                مرحبا بالعالم
                              </span>
                            </Styled(span)>
                          </label>
                        </Styled(label)>
                      </Choice>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(Choice)>
              </WithTheme(Themed(Choice))>
            </Checkbox>
            <Checkbox
              label="مرحبا بالعالم"
              labelPosition="start"
              name="example"
              size="large"
            >
              <WithTheme(Themed(Choice))
                iconChecked={<IconCheckBoxCheck />}
                inputRef={[Function]}
                label="مرحبا بالعالم"
                labelPosition="start"
                name="example"
                onClick={[Function]}
                rootProps={
                  Object {
                    "className": undefined,
                  }
                }
                size="large"
                type="checkbox"
              >
                <Themed(Choice)
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="مرحبا بالعالم"
                  labelPosition="start"
                  name="example"
                  onClick={[Function]}
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <Choice
                        iconChecked={<IconCheckBoxCheck />}
                        inputRef={[Function]}
                        label="مرحبا بالعالم"
                        labelPosition="start"
                        name="example"
                        onClick={[Function]}
                        rootProps={
                          Object {
                            "className": undefined,
                          }
                        }
                        size="large"
                        type="checkbox"
                      >
                        <Styled(label)
                          labelPosition="start"
                          size="large"
                        >
                          <label
                            className="emotion-9"
                            size="large"
                          >
                            <Styled(input)
                              name="example"
                              onClick={[Function]}
                              size="large"
                              type="checkbox"
                            >
                              <input
                                className="emotion-0"
                                name="example"
                                onClick={[Function]}
                                size="large"
                                type="checkbox"
                              />
                            </Styled(input)>
                            <Styled(span)
                              size="large"
                            >
                              <span
                                className="emotion-2"
                                size="large"
                              >
                                <IconCheckBoxCheck>
                                  <Icon
                                    rtl={false}
                                    size="medium"
                                  >
                                    <Styled(svg)
                                      aria-hidden={true}
                                      focusable="false"
                                      role="img"
                                      rtl={false}
                                      size="medium"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="emotion-1"
                                        focusable="false"
                                        role="img"
                                        size="medium"
                                        viewBox="0 0 24 24"
                                      >
                                        <g>
                                          <path
                                            d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                          />
                                        </g>
                                      </svg>
                                    </Styled(svg)>
                                  </Icon>
                                </IconCheckBoxCheck>
                              </span>
                            </Styled(span)>
                            <Styled(span)
                              labelPosition="start"
                              size="large"
                            >
                              <span
                                className="emotion-8"
                                size="large"
                              >
                                مرحبا بالعالم
                              </span>
                            </Styled(span)>
                          </label>
                        </Styled(label)>
                      </Choice>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(Choice)>
              </WithTheme(Themed(Choice))>
            </Checkbox>
            <FormFieldDivider>
              <Styled(div)
                role="separator"
              >
                <div
                  className="emotion-10"
                  role="separator"
                />
              </Styled(div)>
            </FormFieldDivider>
            <Checkbox
              justify={true}
              label="مرحبا بالعالم"
              labelPosition="end"
              name="example"
              size="large"
            >
              <WithTheme(Themed(Choice))
                iconChecked={<IconCheckBoxCheck />}
                inputRef={[Function]}
                justify={true}
                label="مرحبا بالعالم"
                labelPosition="end"
                name="example"
                onClick={[Function]}
                rootProps={
                  Object {
                    "className": undefined,
                  }
                }
                size="large"
                type="checkbox"
              >
                <Themed(Choice)
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  justify={true}
                  label="مرحبا بالعالم"
                  labelPosition="end"
                  name="example"
                  onClick={[Function]}
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <Choice
                        iconChecked={<IconCheckBoxCheck />}
                        inputRef={[Function]}
                        justify={true}
                        label="مرحبا بالعالم"
                        labelPosition="end"
                        name="example"
                        onClick={[Function]}
                        rootProps={
                          Object {
                            "className": undefined,
                          }
                        }
                        size="large"
                        type="checkbox"
                      >
                        <Styled(label)
                          justify={true}
                          labelPosition="end"
                          size="large"
                        >
                          <label
                            className="emotion-15"
                            size="large"
                          >
                            <Styled(input)
                              name="example"
                              onClick={[Function]}
                              size="large"
                              type="checkbox"
                            >
                              <input
                                className="emotion-0"
                                name="example"
                                onClick={[Function]}
                                size="large"
                                type="checkbox"
                              />
                            </Styled(input)>
                            <Styled(span)
                              size="large"
                            >
                              <span
                                className="emotion-2"
                                size="large"
                              >
                                <IconCheckBoxCheck>
                                  <Icon
                                    rtl={false}
                                    size="medium"
                                  >
                                    <Styled(svg)
                                      aria-hidden={true}
                                      focusable="false"
                                      role="img"
                                      rtl={false}
                                      size="medium"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="emotion-1"
                                        focusable="false"
                                        role="img"
                                        size="medium"
                                        viewBox="0 0 24 24"
                                      >
                                        <g>
                                          <path
                                            d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                          />
                                        </g>
                                      </svg>
                                    </Styled(svg)>
                                  </Icon>
                                </IconCheckBoxCheck>
                              </span>
                            </Styled(span)>
                            <Styled(span)
                              justify={true}
                              labelPosition="end"
                              size="large"
                            >
                              <span
                                className="emotion-14"
                                size="large"
                              >
                                مرحبا بالعالم
                              </span>
                            </Styled(span)>
                          </label>
                        </Styled(label)>
                      </Choice>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(Choice)>
              </WithTheme(Themed(Choice))>
            </Checkbox>
            <Checkbox
              justify={true}
              label="مرحبا بالعالم"
              labelPosition="start"
              name="example"
              size="large"
            >
              <WithTheme(Themed(Choice))
                iconChecked={<IconCheckBoxCheck />}
                inputRef={[Function]}
                justify={true}
                label="مرحبا بالعالم"
                labelPosition="start"
                name="example"
                onClick={[Function]}
                rootProps={
                  Object {
                    "className": undefined,
                  }
                }
                size="large"
                type="checkbox"
              >
                <Themed(Choice)
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  justify={true}
                  label="مرحبا بالعالم"
                  labelPosition="start"
                  name="example"
                  onClick={[Function]}
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                >
                  <ThemeProvider>
                    <ThemeProvider>
                      <Choice
                        iconChecked={<IconCheckBoxCheck />}
                        inputRef={[Function]}
                        justify={true}
                        label="مرحبا بالعالم"
                        labelPosition="start"
                        name="example"
                        onClick={[Function]}
                        rootProps={
                          Object {
                            "className": undefined,
                          }
                        }
                        size="large"
                        type="checkbox"
                      >
                        <Styled(label)
                          justify={true}
                          labelPosition="start"
                          size="large"
                        >
                          <label
                            className="emotion-20"
                            size="large"
                          >
                            <Styled(input)
                              name="example"
                              onClick={[Function]}
                              size="large"
                              type="checkbox"
                            >
                              <input
                                className="emotion-0"
                                name="example"
                                onClick={[Function]}
                                size="large"
                                type="checkbox"
                              />
                            </Styled(input)>
                            <Styled(span)
                              size="large"
                            >
                              <span
                                className="emotion-2"
                                size="large"
                              >
                                <IconCheckBoxCheck>
                                  <Icon
                                    rtl={false}
                                    size="medium"
                                  >
                                    <Styled(svg)
                                      aria-hidden={true}
                                      focusable="false"
                                      role="img"
                                      rtl={false}
                                      size="medium"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="emotion-1"
                                        focusable="false"
                                        role="img"
                                        size="medium"
                                        viewBox="0 0 24 24"
                                      >
                                        <g>
                                          <path
                                            d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                          />
                                        </g>
                                      </svg>
                                    </Styled(svg)>
                                  </Icon>
                                </IconCheckBoxCheck>
                              </span>
                            </Styled(span)>
                            <Styled(span)
                              justify={true}
                              labelPosition="start"
                              size="large"
                            >
                              <span
                                className="emotion-19"
                                size="large"
                              >
                                مرحبا بالعالم
                              </span>
                            </Styled(span)>
                          </label>
                        </Styled(label)>
                      </Choice>
                    </ThemeProvider>
                  </ThemeProvider>
                </Themed(Choice)>
              </WithTheme(Themed(Choice))>
            </Checkbox>
          </form>
        </Styled(form)>
      </DemoForm>
    </ThemeProvider>
  </ThemeProvider>
</div>
`;

exports[`Checkbox demo examples Snapshots: sizes 1`] = `
.emotion-20 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-0 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.emotion-0:focus + span {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0:checked + span,
.emotion-0[type="checkbox"]:indeterminate + span {
  background-color: #3272d9;
  border-color: #3272d9;
}

.emotion-0:checked:hover + span,
.emotion-0[type="checkbox"]:indeterminate:hover + span {
  background-color: #5691f0;
  border-color: #5691f0;
}

.emotion-0:checked:disabled + span,
.emotion-0[type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #ffffff;
}

.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #ffffff;
  content: "";
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  height: 1em;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 1em;
}

.emotion-2 svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.emotion-1 {
  fill: currentcolor;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.emotion-8 {
  color: #333840;
  font-size: 0.875em;
  margin-left: 1.1428571428571428em;
  margin-right: 0;
}

.emotion-3 {
  color: #333840;
  font-size: 0.75em;
  margin-left: 1.3333333333333333em;
  margin-right: 0;
}

.emotion-17 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #ffffff;
  content: "";
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  height: 1.5em;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 1.5em;
}

.emotion-17 svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

<DemoForm>
  <Styled(form)
    onSubmit={[Function]}
  >
    <form
      className="emotion-20"
      onSubmit={[Function]}
    >
      <Checkbox
        label="Small"
        labelPosition="end"
        name="size"
        size="small"
        value="small"
      >
        <WithTheme(Themed(Choice))
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Small"
          labelPosition="end"
          name="size"
          onClick={[Function]}
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="small"
          type="checkbox"
          value="small"
        >
          <Themed(Choice)
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Small"
            labelPosition="end"
            name="size"
            onClick={[Function]}
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="small"
            type="checkbox"
            value="small"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Small"
                  labelPosition="end"
                  name="size"
                  onClick={[Function]}
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="small"
                  type="checkbox"
                  value="small"
                >
                  <Styled(label)
                    labelPosition="end"
                    size="small"
                  >
                    <label
                      className="emotion-4"
                      size="small"
                    >
                      <Styled(input)
                        name="size"
                        onClick={[Function]}
                        size="small"
                        type="checkbox"
                        value="small"
                      >
                        <input
                          className="emotion-0"
                          name="size"
                          onClick={[Function]}
                          size="small"
                          type="checkbox"
                          value="small"
                        />
                      </Styled(input)>
                      <Styled(span)
                        size="small"
                      >
                        <span
                          className="emotion-2"
                          size="small"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <Styled(svg)
                                aria-hidden={true}
                                focusable="false"
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="emotion-1"
                                  focusable="false"
                                  role="img"
                                  size="medium"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </Styled(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </Styled(span)>
                      <Styled(span)
                        labelPosition="end"
                        size="small"
                      >
                        <span
                          className="emotion-3"
                          size="small"
                        >
                          Small
                        </span>
                      </Styled(span)>
                    </label>
                  </Styled(label)>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Checkbox>
      <Checkbox
        label="Medium"
        labelPosition="end"
        name="size"
        size="medium"
        value="medium"
      >
        <WithTheme(Themed(Choice))
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Medium"
          labelPosition="end"
          name="size"
          onClick={[Function]}
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="medium"
          type="checkbox"
          value="medium"
        >
          <Themed(Choice)
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Medium"
            labelPosition="end"
            name="size"
            onClick={[Function]}
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="medium"
            type="checkbox"
            value="medium"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Medium"
                  labelPosition="end"
                  name="size"
                  onClick={[Function]}
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="medium"
                  type="checkbox"
                  value="medium"
                >
                  <Styled(label)
                    labelPosition="end"
                    size="medium"
                  >
                    <label
                      className="emotion-4"
                      size="medium"
                    >
                      <Styled(input)
                        name="size"
                        onClick={[Function]}
                        size="medium"
                        type="checkbox"
                        value="medium"
                      >
                        <input
                          className="emotion-0"
                          name="size"
                          onClick={[Function]}
                          size="medium"
                          type="checkbox"
                          value="medium"
                        />
                      </Styled(input)>
                      <Styled(span)
                        size="medium"
                      >
                        <span
                          className="emotion-2"
                          size="medium"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <Styled(svg)
                                aria-hidden={true}
                                focusable="false"
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="emotion-1"
                                  focusable="false"
                                  role="img"
                                  size="medium"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </Styled(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </Styled(span)>
                      <Styled(span)
                        labelPosition="end"
                        size="medium"
                      >
                        <span
                          className="emotion-8"
                          size="medium"
                        >
                          Medium
                        </span>
                      </Styled(span)>
                    </label>
                  </Styled(label)>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Checkbox>
      <Checkbox
        defaultChecked={true}
        label="Large"
        labelPosition="end"
        name="size"
        size="large"
        value="large"
      >
        <WithTheme(Themed(Choice))
          defaultChecked={true}
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Large"
          labelPosition="end"
          name="size"
          onClick={[Function]}
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
          value="large"
        >
          <Themed(Choice)
            defaultChecked={true}
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Large"
            labelPosition="end"
            name="size"
            onClick={[Function]}
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
            value="large"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  defaultChecked={true}
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Large"
                  labelPosition="end"
                  name="size"
                  onClick={[Function]}
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                  value="large"
                >
                  <Styled(label)
                    labelPosition="end"
                    size="large"
                  >
                    <label
                      className="emotion-4"
                      size="large"
                    >
                      <Styled(input)
                        defaultChecked={true}
                        name="size"
                        onClick={[Function]}
                        size="large"
                        type="checkbox"
                        value="large"
                      >
                        <input
                          className="emotion-0"
                          defaultChecked={true}
                          name="size"
                          onClick={[Function]}
                          size="large"
                          type="checkbox"
                          value="large"
                        />
                      </Styled(input)>
                      <Styled(span)
                        size="large"
                      >
                        <span
                          className="emotion-2"
                          size="large"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <Styled(svg)
                                aria-hidden={true}
                                focusable="false"
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="emotion-1"
                                  focusable="false"
                                  role="img"
                                  size="medium"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </Styled(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </Styled(span)>
                      <Styled(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="emotion-8"
                          size="large"
                        >
                          Large
                        </span>
                      </Styled(span)>
                    </label>
                  </Styled(label)>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Checkbox>
      <Checkbox
        label="Jumbo"
        labelPosition="end"
        name="size"
        size="jumbo"
        value="jumbo"
      >
        <WithTheme(Themed(Choice))
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Jumbo"
          labelPosition="end"
          name="size"
          onClick={[Function]}
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="jumbo"
          type="checkbox"
          value="jumbo"
        >
          <Themed(Choice)
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Jumbo"
            labelPosition="end"
            name="size"
            onClick={[Function]}
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="jumbo"
            type="checkbox"
            value="jumbo"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Jumbo"
                  labelPosition="end"
                  name="size"
                  onClick={[Function]}
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="jumbo"
                  type="checkbox"
                  value="jumbo"
                >
                  <Styled(label)
                    labelPosition="end"
                    size="jumbo"
                  >
                    <label
                      className="emotion-4"
                      size="jumbo"
                    >
                      <Styled(input)
                        name="size"
                        onClick={[Function]}
                        size="jumbo"
                        type="checkbox"
                        value="jumbo"
                      >
                        <input
                          className="emotion-0"
                          name="size"
                          onClick={[Function]}
                          size="jumbo"
                          type="checkbox"
                          value="jumbo"
                        />
                      </Styled(input)>
                      <Styled(span)
                        size="jumbo"
                      >
                        <span
                          className="emotion-17"
                          size="jumbo"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <Styled(svg)
                                aria-hidden={true}
                                focusable="false"
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="emotion-1"
                                  focusable="false"
                                  role="img"
                                  size="medium"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </Styled(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </Styled(span)>
                      <Styled(span)
                        labelPosition="end"
                        size="jumbo"
                      >
                        <span
                          className="emotion-8"
                          size="jumbo"
                        >
                          Jumbo
                        </span>
                      </Styled(span)>
                    </label>
                  </Styled(label)>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Checkbox>
    </form>
  </Styled(form)>
</DemoForm>
`;

exports[`Checkbox demo examples Snapshots: uncontrolled 1`] = `
.emotion-10 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.emotion-4 {
  box-sizing: border-box;
  color: #333840;
  font-family: "Open Sans",-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.25;
  outline: 0;
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: antialiased;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.emotion-4 *,
.emotion-4 *::before,
.emotion-4 *::after {
  box-sizing: inherit;
}

.emotion-4:hover span:first-of-type {
  border-color: #5691f0;
}

.emotion-0 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.emotion-0:focus + span {
  box-shadow: 0 0 0 1px #ffffff,0 0 0 2px #1d5bbf;
}

.emotion-0:checked + span,
.emotion-0[type="checkbox"]:indeterminate + span {
  background-color: #3272d9;
  border-color: #3272d9;
}

.emotion-0:checked:hover + span,
.emotion-0[type="checkbox"]:indeterminate:hover + span {
  background-color: #5691f0;
  border-color: #5691f0;
}

.emotion-0:checked:disabled + span,
.emotion-0[type="checkbox"]:indeterminate:disabled + span {
  background-color: #c8d1e0;
  border-color: #c8d1e0;
  color: #ffffff;
}

.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #ffffff;
  border-color: #c8d1e0;
  border-radius: 0.1875em;
  border-style: solid;
  border-width: 1px;
  color: #ffffff;
  content: "";
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  height: 1em;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 1em;
}

.emotion-2 svg {
  fill: currentColor;
  height: auto;
  width: 100%;
}

.emotion-1 {
  fill: currentcolor;
  font-size: 16px;
  height: 1em;
  width: 1em;
}

.emotion-3 {
  color: #333840;
  font-size: 0.875em;
  margin-left: 1.1428571428571428em;
  margin-right: 0;
}

<DemoForm>
  <Styled(form)
    onSubmit={[Function]}
  >
    <form
      className="emotion-10"
      onSubmit={[Function]}
    >
      <Checkbox
        defaultChecked={true}
        label="Quartz"
        labelPosition="end"
        name="minerals"
        size="large"
        value="quartz"
      >
        <WithTheme(Themed(Choice))
          defaultChecked={true}
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Quartz"
          labelPosition="end"
          name="minerals"
          onClick={[Function]}
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
          value="quartz"
        >
          <Themed(Choice)
            defaultChecked={true}
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Quartz"
            labelPosition="end"
            name="minerals"
            onClick={[Function]}
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
            value="quartz"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  defaultChecked={true}
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Quartz"
                  labelPosition="end"
                  name="minerals"
                  onClick={[Function]}
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                  value="quartz"
                >
                  <Styled(label)
                    labelPosition="end"
                    size="large"
                  >
                    <label
                      className="emotion-4"
                      size="large"
                    >
                      <Styled(input)
                        defaultChecked={true}
                        name="minerals"
                        onClick={[Function]}
                        size="large"
                        type="checkbox"
                        value="quartz"
                      >
                        <input
                          className="emotion-0"
                          defaultChecked={true}
                          name="minerals"
                          onClick={[Function]}
                          size="large"
                          type="checkbox"
                          value="quartz"
                        />
                      </Styled(input)>
                      <Styled(span)
                        size="large"
                      >
                        <span
                          className="emotion-2"
                          size="large"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <Styled(svg)
                                aria-hidden={true}
                                focusable="false"
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="emotion-1"
                                  focusable="false"
                                  role="img"
                                  size="medium"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </Styled(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </Styled(span)>
                      <Styled(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="emotion-3"
                          size="large"
                        >
                          Quartz
                        </span>
                      </Styled(span)>
                    </label>
                  </Styled(label)>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Checkbox>
      <Checkbox
        label="Magnetite"
        labelPosition="end"
        name="minerals"
        size="large"
        value="magnetite"
      >
        <WithTheme(Themed(Choice))
          iconChecked={<IconCheckBoxCheck />}
          inputRef={[Function]}
          label="Magnetite"
          labelPosition="end"
          name="minerals"
          onClick={[Function]}
          rootProps={
            Object {
              "className": undefined,
            }
          }
          size="large"
          type="checkbox"
          value="magnetite"
        >
          <Themed(Choice)
            iconChecked={<IconCheckBoxCheck />}
            inputRef={[Function]}
            label="Magnetite"
            labelPosition="end"
            name="minerals"
            onClick={[Function]}
            rootProps={
              Object {
                "className": undefined,
              }
            }
            size="large"
            type="checkbox"
            value="magnetite"
          >
            <ThemeProvider>
              <ThemeProvider>
                <Choice
                  iconChecked={<IconCheckBoxCheck />}
                  inputRef={[Function]}
                  label="Magnetite"
                  labelPosition="end"
                  name="minerals"
                  onClick={[Function]}
                  rootProps={
                    Object {
                      "className": undefined,
                    }
                  }
                  size="large"
                  type="checkbox"
                  value="magnetite"
                >
                  <Styled(label)
                    labelPosition="end"
                    size="large"
                  >
                    <label
                      className="emotion-4"
                      size="large"
                    >
                      <Styled(input)
                        name="minerals"
                        onClick={[Function]}
                        size="large"
                        type="checkbox"
                        value="magnetite"
                      >
                        <input
                          className="emotion-0"
                          name="minerals"
                          onClick={[Function]}
                          size="large"
                          type="checkbox"
                          value="magnetite"
                        />
                      </Styled(input)>
                      <Styled(span)
                        size="large"
                      >
                        <span
                          className="emotion-2"
                          size="large"
                        >
                          <IconCheckBoxCheck>
                            <Icon
                              rtl={false}
                              size="medium"
                            >
                              <Styled(svg)
                                aria-hidden={true}
                                focusable="false"
                                role="img"
                                rtl={false}
                                size="medium"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="emotion-1"
                                  focusable="false"
                                  role="img"
                                  size="medium"
                                  viewBox="0 0 24 24"
                                >
                                  <g>
                                    <path
                                      d="M8.8 14.8l-4.2-4.1L2.1 13l6.7 6.7 13-13-2.4-2.6L8.8 14.8z"
                                    />
                                  </g>
                                </svg>
                              </Styled(svg)>
                            </Icon>
                          </IconCheckBoxCheck>
                        </span>
                      </Styled(span)>
                      <Styled(span)
                        labelPosition="end"
                        size="large"
                      >
                        <span
                          className="emotion-3"
                          size="large"
                        >
                          Magnetite
                        </span>
                      </Styled(span)>
                    </label>
                  </Styled(label)>
                </Choice>
              </ThemeProvider>
            </ThemeProvider>
          </Themed(Choice)>
        </WithTheme(Themed(Choice))>
      </Checkbox>
    </form>
  </Styled(form)>
</DemoForm>
`;
